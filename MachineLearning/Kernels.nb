(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    362549,       6358]
NotebookOptionsPosition[    361684,       6335]
NotebookOutlinePosition[    362038,       6351]
CellTagsIndexPosition[    361995,       6348]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "Problem 2: Explore making ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "49bae430-cc59-4f72-a487-984164fb3a6b"],
 " variable in the kernel density estimator. This means use a different ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "f9034375-810e-4c99-bafd-a0ad6b06f184"],
 " for each point in the sample.\n\n(a) Choose a scalar random variable ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "327c3d0b-5694-4e8c-bff3-27acf1c9c011"],
 ". Generate a random sample from the distribution using small ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "609fce27-685f-47c8-988d-a42a262cb214"],
 " (",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "67bc6bbb-9e04-4602-8844-f28a4290a27a"],
 " or so). Choose ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "7de9a80d-9615-4828-8196-4b19b07fd658"],
 " for each point determined by how close it is to the other points. Compare \
your KDE (variable ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "a91aa56f-e878-4c3a-a8d9-43763d19488c"],
 ") to the KDE resulting from using fixed ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "50599b81-8e3d-41f3-a614-28305571c19c"],
 ". Compare both KDEs to the PDF of ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "5210c786-584c-4af6-9fc3-cc2b8cecc141"],
 ".\n\n(b) Do the same thing in the bivariate case using the bivariate normal."
}], "Text",
 CellChangeTimes->{{3.7879027982623377`*^9, 3.7879027992865973`*^9}, {
   3.7879035938526816`*^9, 3.7879035963320446`*^9}, {3.7879051078304067`*^9, 
   3.7879053645544434`*^9}, {3.7879056584174423`*^9, 
   3.7879060264795303`*^9}, {3.7879063002093053`*^9, 
   3.7879063845877514`*^9}, {3.787907956428084*^9, 3.7879079618101463`*^9}, {
   3.787917386323266*^9, 3.7879176959872932`*^9}, 3.7879514593648305`*^9, {
   3.7879662347817664`*^9, 3.787966286908688*^9}, {3.7879926371024265`*^9, 
   3.7879927482306314`*^9}},
 FontFamily->"CMU Serif",
 FontSize->18,
 FontWeight->"Medium",
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"54f33734-b855-4a2f-a934-412ae2a71e2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"OneD", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"BetaDistribution", "[", 
       RowBox[{"3", ",", "5"}], "]"}], ",", "50"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sig1", "=", "0.075"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sig2", "[", "k_", "]"}], "=", 
   RowBox[{"20", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"k", "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"OneD", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"OneD", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "\[Equal]", "50"}], ",", 
        RowBox[{
         RowBox[{"OneD", "[", 
          RowBox[{"[", "50", "]"}], "]"}], "-", 
         RowBox[{"OneD", "[", 
          RowBox[{"[", "49", "]"}], "]"}]}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"OneD", "[", 
           RowBox[{"[", 
            RowBox[{"k", "+", "1"}], "]"}], "]"}], "-", 
          RowBox[{"OneD", "[", 
           RowBox[{"[", 
            RowBox[{"k", "-", "1"}], "]"}], "]"}]}], "2"]}], "]"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p1", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{
          RowBox[{"OneD", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", "sig1"}], "]"}], ",", "x"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "50"}], "}"}]}], "]"}], "/", "50"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p2", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{
          RowBox[{"OneD", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"sig2", "[", "k", "]"}]}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "50"}], "}"}]}], "]"}], "/", "50"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"BetaDistribution", "[", 
        RowBox[{"2", ",", "5"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"p1", "[", "x", "]"}], ",", 
     RowBox[{"p2", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<PDF\>\"", ",", "\"\<Fixed h\>\"", ",", "\"\<Variable h\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.789101597730393*^9, 3.789101600568734*^9}, {
   3.789101655570812*^9, 3.789101660223723*^9}, {3.7891016920044613`*^9, 
   3.7891017298371677`*^9}, {3.789101785804329*^9, 3.7891018272740793`*^9}, {
   3.789101908001231*^9, 3.7891019645298347`*^9}, {3.7891020030123997`*^9, 
   3.789102145771858*^9}, {3.789102189416211*^9, 3.7891022671051207`*^9}, {
   3.789102301560389*^9, 3.789102477941367*^9}, {3.789102513424046*^9, 
   3.789102755462431*^9}, {3.7891027927278967`*^9, 3.789102857573106*^9}, {
   3.78910291824363*^9, 3.789102956121567*^9}, 3.789102996011243*^9, {
   3.789103033946611*^9, 3.78910305385321*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"3713e008-dd95-45fc-bbb3-855b28463c36"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
AyjMRFM=
          "]], 
         LineBox[CompressedData["
1:eJxF0WtI02EYBfA5NadDc2sRiVabCmqaEjkzI8nCbLrIuVIql8yCMjFvHxpd
Fy515OXD0NLNVlO7jJrRFmJ/U0KCIlGbodJatXJ0UdN0Tq25CuI9DxwOv28H
Hq70tOg4nUaj7fybf/1xnEOp6dPJtP+XHjoeH8SAe6n+gUY/mH/w8cnV/jCv
ulITyIav8YoTajlwAJUzxFwDL05FevsEw4PiV4WucDh1yrjibARMVWq0C1Hw
7a6i4dlY+MIG1vZviXD0xAHmiBDuFGf0KPfDu7pTynZkwYdqY9+25cDVcb76
8nzYXk4J2DJY6+Ipha3wqpXTjL4l2Kun2RCqniE+teXJmG/6T2L9Xqn26Tzs
+B4UaG+YJTZl7fFU7Z4jvpimuGG0w9x3glGdwkG8LaFCtXbzPPGRdQOLHmbY
8bLGVix34j9eknJR2AL2W0236H2w93m5OLFkkZh2V2KwsZeIS5sMNexncPfG
Kgar6BcxS1AafTngN7ElZtAso+COluSwzxIXca6BzwpZhi8pbsot95aJ738J
aQ7IcBNXaRR51n3wMdFk+INMOJiiOoTZsLLu8POrUvgE//qMnwzmVXDSfNrh
5a3n/EfuwGOTn1636+H67Ee5qQ9hd5SoTEHBlqG6Fk8z3HnFmW9+A6uSjkbq
RuH0tk3GFCvcdab/hfwr3BATX5c5AZfY1GLuDzgio/B97xzs5THcWu+EP5iS
CvKWYKpAFxvnghvXMx1uN/wHQG4O0w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$106167#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
czAq/Q90r9+v
          "]]}, 
        Annotation[#, "Charting`Private`Tag$106167#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, 
         "Charting`Private`Tag$106167#3"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"PDF\"", "\"Fixed h\"", "\"Variable h\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.789102253379286*^9, 3.7891022677413588`*^9}, {
   3.789102309688892*^9, 3.7891024108777943`*^9}, {3.789102662160536*^9, 
   3.7891027561817923`*^9}, 3.789102859054099*^9, 3.789102960327746*^9, 
   3.789102997088954*^9, {3.789103037218506*^9, 3.7891030550141478`*^9}},
 CellLabel->
  "Out[265]=",ExpressionUUID->"ed1b0d9c-6fc2-464f-afbd-2cfcfcce86f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ThreeD", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], "]"}], ",", "50"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sig", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxDist", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"ThreeD", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}], "-", 
        RowBox[{"Min", "[", 
         RowBox[{"ThreeD", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}], "2"], "+", 
     
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"ThreeD", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], "-", 
        RowBox[{"Min", "[", 
         RowBox[{"ThreeD", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], "2"]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distMax", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"maxDist", ",", "50"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "50"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", "50"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newDist", "=", 
       RowBox[{"distMax", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[NotEqual]", "j"}], ",", 
        RowBox[{"newDist", "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ThreeD", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
              RowBox[{"ThreeD", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ThreeD", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
              RowBox[{"ThreeD", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ")"}], "2"]}]]}], 
        ",", "Continue"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"newDist", "<", 
         RowBox[{"distMax", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"distMax", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", "newDist"}], ",", "Continue"}],
        "]"}], ";"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p1", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"MultinormalDistribution", "[", 
         RowBox[{
          RowBox[{"ThreeD", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sig", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "sig"}], "}"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "50"}], "}"}]}], "]"}], "/", "50"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p2", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"MultinormalDistribution", "[", 
         RowBox[{
          RowBox[{"ThreeD", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"distMax", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"distMax", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "}"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "50"}], "}"}]}], "]"}], "/", "50"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"MultinormalDistribution", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
     RowBox[{"p1", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"p2", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "8"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "14", ",", "Blue"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<y\>\"", ",", "14", ",", "Blue"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<PDF\>\"", ",", "\"\<Fixed h\>\"", ",", "\"\<Variable h\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<KDEs for Class 1, 2, 3\>\"", ",", "16", ",", "Blue"}], 
     "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.789103219560216*^9, 3.78910331659182*^9}, {
   3.789103355384643*^9, 3.78910352415344*^9}, {3.789103556873122*^9, 
   3.789103574375313*^9}, {3.789103628454282*^9, 3.789103666696424*^9}, {
   3.7891037632807407`*^9, 3.789104279997963*^9}, {3.789104313938818*^9, 
   3.789104333171726*^9}, {3.789104396742033*^9, 3.789104464767808*^9}, {
   3.789104496540814*^9, 3.789104504485569*^9}, {3.789104599459051*^9, 
   3.789104621313402*^9}, {3.789104697664617*^9, 3.789104713333831*^9}, {
   3.789104776810033*^9, 3.7891048335460873`*^9}, 3.7891049629295588`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"de71a29c-bc17-472b-aaad-1e24e3441599"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1:eJx0nXk8VO/bxyeUfc3WiCQqpdWWdQ5lb7GUilaRiijRok2LolK2kBaFNhSp
0KJRobSItIhIWmhRRKVsT9+Zc13HOfP8vv/0et7P/Tuuec8997nvj2uO4V6B
rj5CLBbLTZbFEv73b3iw8ePevu/cqnPWRF9fH3ej81jtZzGmFnppux5fWV2L
3LEy7XdpxzELb5snvaMc7nCAZ6YaJe70b7WwD9ZdHlD7EfmURpuEs976lsf2
z1ruENuB/NjqkRW9z30tFRfuO1Kb14P85kGfs6nbDlraJnp9zFstTAAvt/0c
0D0j3fK/mlksMeQjw/b+mqiTZXlrxfEhDrFSyO+S4wt5XA75IfL6aur+Z1bX
KiDfSNazqdJUP1ZbCbk8Wf/LcPGivNUqyCPJ12toWj29Nm8I8o4Kvp+Yb2de
9fWpIV9I+gTPvVomYfaxHVwZY8UVL9/uQc/Av7fGdPZ9b0bPwD2/7mj462Bu
CZ6Be1td80u7HIaegSs2t87U2nsFPQO3N7/lMXlqDXoG/nRWtn3Cljb0DPzD
pp2WJhad6Bl4GTkePAMfTl4fPAP/1cSvBzwDn0rWD56Ba5GvFzwDP036Ac/A
fxvxfYJnV9PFYSMcGrnmbdOsks/fQ8/Am1qm610p07UEz8CNrt03bSO2omfg
2wPdM9ba3EbPwMVeG0bMNf2JnoEvGyBduGG0Ggc8Ay83iiq3VJrMAc/AZ+dE
3XgmZ8IBz8BLyPHgGbg9eX3wDLy5ll8PeAa+gKwfPAP/VsB/veAZXy/pBzwD
1yF9guclpL/Xafsis5f2oGfgc8wU158WWoKegS+JrLHbopuLnoErRteJKQb9
RM/AvSwebirzHMMBz8AP/u28teq1M3oGftnfOp4dvBw9Ax/8bin35rBA9Az8
HDkePAPfSl4fPAM3JesBz8A/HeLXD56BTyZfL3gGrk76Ac/AuaRP8CxUV7o9
f/UXjv5h34FTm3QswTPwnHGSlz/V70XPwEMq6ronKtaiZ+A6K2pEN/8ZxgHP
wIfG/1JyP+OGnoFnV9smHBmxCT0Dn5oYWKlSGI2egf9wbbh2Xz8RPQM3JceD
Z+AJ5PXBM/DeOH494Bl4nS+/fvAMfDL5esEz8AWkH/DM9Ame3Tu+bo/V/sPR
8Dp4y/zoVPQMXL10GKGw6DR6Bg7rJHgGHjrWdIhSijl6Br7MevjwioS16Bn4
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
enEvBfrTTL573v5hbcDIf/5wepSOp3SVrUGfwI+pJG88XBGDPoE/0JdP3UCk
0/eN//2d9wizZrNd1LkbeOL48Iby+4L9aaVDBzyZ4xyPPoHvObfovtABKhcC
7jVxZNy7q9S5G3jn2Fivfdlb0Cfw4M+vBupluaBP4JePDju2NksIfcL9/fgC
ifRTtuvRJ/D5Z25x6xpb0Cfw56Gb5z+psEGfwA/mnm2VrItBn8DPZuh2X8q7
jD6By89qk3/48A76xL9TE3U3Ycbe2+gTuOZDpe+L8TpU31qc98a8e7lp6BN4
2TW9XMf9VL8f1jk1PbU0mfp+LvbdJdpujxOlvjcKfPJCrexb2YroE/8u/H61
DqWnd/HzDv1Xjx5VbJjwPA194t9D31o/Jn8fnKeovrUkdcPvg8csQZ/AW0s+
tzStO4Q+gZvrs9pjes6jT/w7LDY3rJ0mCvatJT+780tuQgH6xL/DfmyWmtWr
64xcSIw4prTuooMN9Xw24KahbV+kpU+iT/z7Mq7ZhdmLqP5J/Hs3Uur6m0as
Rp/AN5wRUmg/PQV9Av/4xW/0MPu36BP/HsoYtXE2S1PQJ/DT7326847g+oB9
aM+SG89IPnJHn8A/sxd5jcT+Oqpvzd762ZlrO6nnDQI3UXXl7jqchT6BL7zs
V/hSKBt9Ap+9OWRK0kTBvjXNOUfnJotQOTDwrfLZ77o/U/29wDMGt8/7uvUQ
+sS/X39HWtWdFYI+sZ/th/mkwRcI9In9b1dSXLPMPgr0rZ02vD9rtM0y9Anc
tsnGcOJZav0Evvj9jN4Ts6kcGLjI75mq7n0r0CfwGmfN1vrGg+gTeEnGbjWp
6NPoE7jPujtOJ35fRp/4d+c9XwzJ+HkJfQLvMLRvOfHmDPoEXrpa3bD0+wn0
Cbyszt8g+Ww0+gS+W8XsXezAtegT+NfsL1OE901Cn8DXpz1qfFVaLtC3JjOl
ee9FJSv0CTxrH1fG1/2eQN/agBdi9t2bqd/jAI+LL3nauNEXfQKvvHrfJFae
6gMEvidgXdUJ0ePoE3hH/M/MmNzT6BP4/bC+mMmTT6BP4CvWq30TwhyJ6lub
51Sx8ewnwb611vlB8ysf70CfwP123JjQbL0IfQIv3mNjqpWpij6Bp14tLvW4
mIM+of/qfFxsWUCZKvrE/q4NW/J0U8+gT/w7LM5jbGqWyqNP4FsmiId+3+qO
PoGbqj5seuu7BX0CP7ev/egziUPoE39u9XP/S0Kx6BO4pd+M1U74e0Oqb63c
bkPZoCHU722Bj9tZoZYyhdp/Av/m8ttswbYZ6BP4PHEdafNxw9En8EKfffq1
ni9xP49/R6ZXdazoxVWM35exiYJKq3kh7FZG/zmbWKq6veNB6i7G/Z1NPNZL
C9wT9wP3n8APtro3Sg8zR5/ADc5G3dj9gPp+BHCFmT9zrfTD0Cdw5clZ7GL5
g+gT+BXn7mhTnVD0iX1xLJPUc4890Sfw0kR3C6epE9En8Lq9Jlf9N8H3QKm+
NUXZL77SYtTz6IBHfPPOflzjzehLZxORb16OPzT1J543of9q2tOAIzesjjO+
H6FOZB9K3lpATGbsP9UJ7uPvlip7U9En9qGZrGAbXIffj1N9a/KxSb2Tqyeh
T+Cmh2ZM1iqdjz6B22vEP9yaFYQ+gWstnh112Z56DhLwB+PK1b/utUafwCda
CHlfGizK2H+qEwsfzX9wU/k8+gT+/aAY6/cOffQJ3KNQq3GK8h3MLYHvf/BQ
wXKwI/rk/6tJaH1QC9RfJ8P4PZomYTUi2/DhwPOMvEiTWNY4Y+PmAyPRJ3CH
H6wtKVExjPxHk1A4LO3jWVQv0LcmNCf/i5KmBPoEXpS4PD1DWBt9Al+zXKlh
t40y+gT+Olh5UMRsyAeovrWs6X2P54jC8y6ovrWkGPmEyN3z0Cfw0OhD9gP1
nmJOAtzvsOuwxryR9O+l9v3kytesD3m9/DDmbNC3tiTm1Om7t6mcjYdrO7la
C0L2Z4+l8jToW7OUlTHV6xqN3njD87q4Jj3bt9+YSuVj0LdWJ9GToSRRJNC3
9l5f5XWZ7xOBvrWgpPnmE4zg+yBU39qlKCvdNJtS9AZ9a5cfbF1122QjeoO+
Nb2Er+Fj3O3QG/StvRhp1q5pKofzEPrWWCO7EyfGXkJv0Lc2wa5gV1q/vAj6
1mqnVdZ0zaTyIuhbaz60ofbEEyovgr414eNnV36MZ+ZFrdxrb0VWivX9QG/Q
tyb1QeXF+TnaON+gb+1F5XFbHyN9nG/Qt7Yk16DHy20+zjfoW3P5cHHE5gg9
/PxC35p0fELllmoWfn6hb83t+yOfhFuf0Bv0rQ3yG1kzyeYyeoO+tTOhaguT
refiegh9a7s/56uKK9SjT+hbU5l7Pd62X14EfWtuk1btlvtC5UXQt/bpgPvA
47OovAj61gqff2s/1iKH9xfoW8ssXGWgiP1jVN+aTml8QUmMB/qEvrVDei/c
3tcsQ5/Qt/Zsxh1u5MTd6BP61qx/zNYW3eODPqFvrbSs3URXxxt9Qt9a2Odc
cXFx+P0y1bfW1B7/csEKTbxfQ9/auTq9JP0q6vuMCWSdH3J3GNjLQ58h1bd2
M9pm47oBVF4EfWsFv67e0PCi8iLoW/Pqsz9ueYrKi6BvreZWfaiRnzX6hL41
/9TXW17f9kOf0Ld277RG4svUTegT+tZCWCt2frsdhj6hby1keN7TJwP2oU/o
W3vft9SqY8se9Al9azOTLq/44xuLPqFvTfuoY6OQRzj6hL61PeWe10ed9UKf
0LeWrqucH/BhPO4noW/N0im0Mpig8jfoW6vY6fTq8SsqL4K+NTtV/QE6UdR5
B/rW8jY2FpxWofIi6FuTMxmj33UnEH1C39q2Zes4bP396BP61n40Fd7Yt4t6
7g30rTVKdib3lB1Bn9C3djDnzOjRq06iT+hbe35o/R+Rwij0CX1rx7bevmr1
PAp9Qt/aWd9Y3R+aVF8B9K29i5Suq/+1B31C35rEkroFQ/Sp/A361oyKdS7Z
j6DyN+hbe2B96FWVDZUXQd8a64G5q+8rKi+CvrWdf8flZ2dReRH0rTlsfx8/
Jo7Ki6BvbbK8YVanXDb6hN+vRUz66VtRdxF9Qj9bncaUKs7mHPQJ/WxZa7pk
b3VT50foZ7tdkW3/LvY4+oR+tuqB26YU2u9An9DP1jU9RCtcivpeHvSzuUum
RS46F4o+oZ+tdIxfrsduKn+Dfjblw1ffXD3HzN9EiZHvPN87PqPyIuhne8QK
vfMnjMqLoJ/tqa7yN6EXi9En9LMNuTHeQGdBFMOnCLFoBbus5S/1PUf4/aPn
kL8FS1xuo0/oc7M7cye3eyqVv0Gfm4yfy7vGxTfQJ/S5xVhIc/J0qb4s6HPb
pTZz1rg0Kh+GPjff1zYGmzqp51xBn9ujj9++ib+xR5/Q52afFT7DB/u6qT63
AGUL98SXzPxNmmjpvr3xdL+8CPrc+iJUngWdoPIi6HM7MfFTfFMblRdBn1vJ
ChfhJV93oU/ocyNkrk/P9xTsc1Oe9D382Ncr6BP63NS0wtbNCqC+lwd9bk/H
FdyY30blRdDnVjpyt+bUp4J9br/2iUWfqRTsc+vIkN1+/Hkk+oQ+t0VlJitF
L1L5G/S5dcpdZE29ROVv0Oe2eOippsv98jfoc2PHL3u/3IXKi/j/yRPDZvXd
PzK2mv55T5cjal08b8S5TUKf0Oc2Lu3XxCGTqLwd+tw4Hy0SsjkJ6BP63B4O
UtNTrqI+79Dn9rHSS7pekvq8Q5/bymW6X4z9qM879Ll9fH4zc6qoYJ/btl9b
1xz8ReWZ0OfW+zOmKln1IPqEPrestxdy6ncGo0/oc7vTsE5h4zEqf4M+t4yr
qSvWmjDyNyNF4sDIl9vEhlB5EfS5jdr8a9E+Xyov4v0TNpg4x9LsKMuk8iLo
c7ubpdjgdpvKi6DPbVCLx5cfwVReBH1ueiuH+peYnkKf0OdmbdEWsTsgF31C
nel6qeXTx1K/v4A+N4WQbQWPpgr2uRlIJV/YFC7Y59b7MyNJNZP6Hi70uVmW
L4vvy1iDPqHPbca+0JWTt1L5G/S5xU3yXplUzMjfFFSI5JVihxMeUnkR9Lk1
G61ZoZNL5UXQ5zamvvvGjnNUXgR9bouq0kRmjZ6HPqHPbdcl8a1+d/+fPrey
AomYqgT0CX1u3QcuPV/zmvreKPS5KexfWFp+nXqeBvS5leYavw91iECf0Oe2
q7DdevX0XegT+tzGv/lzwmD4NvQJfW7B900/PI5ciD6hz+1v8Sxh0SNU/gZ9
bt/meTkTFxj5W8sQQlwh+MN1NSovgj63lQq/npy9SOVF0OeWPPpCwJIaKi+C
Prcx89bkXzlriT6hz031pe7YQbKB6BP63ApDx4afHByFPqHP7aOBgeHWTYz8
7V+dMQ07AyUdN6JP6HObPmmMTd47P/QJfW4vHESqj9pT+3noc4u9fNzSfAz1
XFzoc3vUckg6p4Laz0OfW3DW6bCr06n8DfrcDL6fGh+WxcjfyoYSE4wGlt52
ovIi6HObfNPdxTKCyougz03WY/zi5uZ09Al9buGsjeHLxQagT+hzc+PMGVMz
xgF9Qp+b7o39he5t1PMAoc/tmeoaqRlpgn1uQ4unlR4SEuxzu7km6MDsvjno
E/rclpSzc8x79dAn9LlFpnbpHvSGPmqqz02k/fnL91eo56RBn1v8ge1x58up
/A363AaVjDNZZ03lb7y3N30Y0dAXsk6zXZ6RZw4jpNxHnpk06QL9e80tGkTQ
/9V15fFQfW9YpkVlZKIJkwpFe6KImHsqKkVp3zekUiSkUspeKKHNVglttFha
pOVO0k7fRCvVtMi0SVMJDX6XOXNv59z5+c/zuZ875zz33Pc+533Oec+5qLNO
S0fSfCrWuT0lKkH2JsX6T2adm3b3az0NvFpY69xsLJ5PmRE6FtVLQfrg6K/a
7RpqTB1FxTq3ZcVv6t3UHWk+Fe2MtZq/bUwyQfOpWOc2L2Rr+pmkjjSfinVu
sZfSknrWn6T5VKxzmyPcU/1tHZN/U6xzi/B8PuK2RiHNm2Kd29x+Ex7sHvSA
XiemWOdmmPX4fnWWNp2vU6xzG+Y/pPy3yX36Por+3jouvDmfn0hfr1iH9iK1
y8DF8yfQuGId2smzgblHi8KwOlR9wYIPu3OLBq6j1zFCvkWWk49/9jMVjRmS
Hlpynj7HuY68vzZz6c+aKttwP8uS5pbvNJ62LOb1+Rkhtm6wLrwCH9xhdUP8
29HCSX4D3b3o853ryOKI3r79lwcKU6KnuTPnO9eR/J2b3nbXyBVqL45KZM53
riPfmoYIHXSfCSccdPnInO9cR15MmdT5aGGNUB6X1Wj8XcvV2gvTfwuvrzqk
y5zvXEceg9dfa8M1aZyE9xforz3OnO9cR8p2yNuzudTanDnfuY6Mg+1/But4
KvCG9vL+jrJ+7sic71xHRkLeUD4l5JP3Y2o7XDESonxKyMKI8rrLeoUYnxLy
4TAysGK5P8YndX2/7aq3PQswPiXkR4HnyFe2tRifErLXTYM5K+5oEyifEvJS
/A6bG1mDCZRPCbm50slh71BzAuVTQp6C16N8Skg1eH+UTwlZAtuD8ikhd8H2
o3xKyIOwvyifEjIC8hZXc/xFS4uAxrMhbyjPIvJGx0s9C0fPxngWkfW6Pyta
Nv3EeBaRI3I7zajqfhLjWUQun7qvt57nV4xnEdm9qJaru8mAQHkWkcZX40tW
z5+A8Swi9/FGbdC/uRjjWURm5368fzjVDeNZRIbB61GeRWQ3eH+UZ6pfN+Xt
QXkWkQNh+1GeReSvHHl/UZ5FpD/kDeVZRFZB3lCexYQLf8zNuDdbMJ7FRIc7
V4s27tUVojyLCd0vuftiDv+H8Swmko7e69+S2Z1Aeab0ePdis4c/JmA8i4mB
zQ0fcxd4YjyLidpEa+uk6FCMZ2qepFnCJXtGYzyLiY/wepRnMaEO74/yLCZe
8+TtQXkWE96w/SjPYuLBZ3l/UZ6pfkHeUJ7FRDvIG8qzlDAcaF83autBjGcp
YeZb8jBn1yiMZymhMoTvYpXxGeNZSrw0KB1rv2E4xrOU2Bhrvow/2xXjWUrc
i33qfOLKToxnKeEXdmzf242pGM9SYui25/uelx3HeJYSHvB6lGcpkQ3vj/Is
JebA9qA8S4m9sP0oz1Li9mB5f1GepcTzAXLeUJ6lRD/IG8qzjEhuCrG0DcnC
eJYRTiOqV5bbOmA8y4h5e67Jzo5swXiWETK/Xg6Ba8dhPMuItJZhIY0Z/hjP
MiIk5877VfUpGM8ywuOLudOAyXkYzzJCVNTrYKdrBRjPMmIpvB7lWUa4wvuj
PMuIANgelGcZUQbbj/IsI7Rhf1GeZcR4yBvKs4wwh7yhPHOA3X+nVGuLL2E8
c8Bg9Q0JRU9nYzxzQOOXpS+LW7oQKM8ckOI+xXDl22kYzxzQaeUP3aiDoRjP
HDAl3ME9S/MUxjMHqH4p7RCYLcJ45oB17d99nGZ4B+OZAxo+y69HeeaAYfD+
KM8c8MFd3h6UZw6YDduP8swB+bC/KM8cUPtQzhvKMwf0gLyhPHP/D8/c/8Mz
9//wzP0/PHP/D8/c/8Mz9//wzP0/PHP/D8/c/8Mz9//wzP0/PHP/D8/c/8Mz
9//wzAOpSuMGD0xWGjd4YInSuMEDyuMGDyiPGzwQqjRu8IDyuMEDN5TGDR5Q
Hjd4wEVp3OCBzUrjBg+UK40bPMBTGjd4ACiNGzwwQlncCNICxsq+gxSu9DtI
4R2UfQcpXOl3kML9lX0HKVzpd5DCfZR9Bylc6XeQwlcr+w5S+Fll30EKn63s
O0jhSr+DFF6o7DtI4eXKvoMUrq/0O8gH7kp1HR9oKdV1fKCvVNfxQYpSXccH
7ZXqOj4YrFTX8YFUqa7jA0eluo4PqpXqOj7gKtV1fPBGqa7jg/VKdR0fKNd1
fKCqVNfxQcNtJbouSAc8UDZPoXBVPSXzFAq3UTZPoXBvZfMUChcom6dQ+BBl
8xQKT1I2T6Hw88rmKRS+S9k8hcL5yuYpFK50nkLhA5TNUyhc6TyFwpXOUyi8
Ruk8RQBeK513C8B9pfNuAXiudN4tACVK590C8E3pvFsADJXOuwXgqtJ5twAE
Kp13C8A5pfNuAVBXOu+m2ql03i0AyufdAqB83i0Ae5TOuwUgX9m8O0gffIV5
D3Tc6gNnZXkhCq9XlheicDNleSEKbz9CSV6Iwt8rywtRuKrKNXZeiMLLleWF
KPytsrwQhffcqSQvROHXleWFKLx3ByV5IQrPhPyg41YfHIf5tG09z5gbOSh8
oToSSO9HH70xWvja/kvxpPgPNN6hyiN9tU2gcKVfdmLr+gMFPjnmruep+hzh
m7brZTReO89JU6TyTCg/p1MVKPBBdYI5dqdqhLVpG9xbfTgF/jSwIkPV8Zlw
6ly7n5PimfxYUfWUJEvvXHgfbRp3Nup99uqlbcIuorfq8f2Y/NhWg/Rf04aO
Ea5qayeTH/t1b62WwbdPtkUDthu35q8V+MjgjQdLzkXbJie2/cE8pYQ8Cc/1
kLfzHZMH8653HPP9MsSlNK7qWVI5UvId/u5fGjdLWHn4jY82Ib9ewYOEPDb8
/iuXWYMhzuSv/O7M1vq15wfkQZvGywKqXKSdScgDn8bDvAY9jZis4IHJX+mM
9OtidN1U6N7WHiZ/FTTdPy957hNbuX+gWG8pIgvgOTKb2sbbDxr3GNutg/3e
vrCdjTTeeC1Tz3ymPTGybby1Awq8yCJrXPfzi+D12jTuaDNnztDFv2G/+DQu
8FqbwJmaD/ulQ+PnJgVpLZGuE3Zu6xeTF8oIDF6yq6anUN5+xbpQMbERnkMk
f18aaFwQZjTZv241xBXtFBMLnKz8X90Phu3k0zg30kloYPkVtlOHxr+8eLt1
Qf9jQvk5vno0/liqkaK3fDqMA4r1qFLiLTyXSv6+K9ajSgnZSEH7fiuT4O/q
0Hj+q+Tuat9K4e/q0fgkn7M9vt7YBvuruI+M2AzPHZPfR4/G5zWWpueZpgo7
fvJKamp5Q8+/KmtSnbnG54Vuvj/uDaHfdy648PxP45ZPHYmFbecRfqDxjkmk
4+BhUwjjAm3zS/T7zgWnK4KOD30ZRBxui58yGle1GTnr79djRPSwW8XM+84F
s5ISwq0Mr8P1asw8az48t27p+Ye7mDjABbGypT5DYs5B3ph5lsoEoxH9tWLh
d0ebxqUdZx948M0FPl9mnqUz9M6ud7sGQh3FzLOKI34Hvp3xXigft8w8a17G
bKOaH3uETS0tl3YOUazT4YGs8saSu5FSoecwYWJ/Og7wwKSLAeFXJ1oQZ9vO
6ZTS+G8XYw2vqWsJkzbe/tL4qjWj2wfZ7iUe3TLJY+IAD/T9HtspIvw0/C4z
8yBX+HyXtfHDzIPKu1qoTLsbA7/X2jTucnnbpOMHVhC92vjh03iwepRsZ5gp
EdDGDzMPkmU0mdZyvwjl51Uz86BZxNH77TwPCoOi75q1+2d9woJF/1VljuUT
Vj2PFNPxgcK7rXIfKvrmRGS38dBI41rFz60eTlXMH+F7R+GzeiWX+HyMh/1l
5h034Psi7682jf/QrJn+++hC2F8+jYOnXVbkNfeH/dWh8f7uAWoHV7+D301m
3tG5UDv/m0GsUGTvlsjEDT7otLTySev5a9Zt/Wqg8X5N3WcuGzuDmNd2Dp8i
bvDBxITtfx8P84Ht16bxOTD+yNvPp/HjO475dDPQhO3XofFGx32hI0c+gN99
PRpf4Tj5b8K3jcKbbe2sp/Xzf1djX/yM7U8canvvYByg8Mfrj5sFbZxEKNYN
KPBIGM+Xt7VHh8aTVuwODr92HOoTPRpXvSKcfq3TLOE7w1xHFTrOCIBTZIqW
oX8P+P7q0Pg6+H2U31+PxnuFbmnMm2ckFExoMG89x1qOU99r+J2Vt1NxfR1p
Ac9XQvVeHRkH9Yn2v/ehdEswvI/8XGoxjYfC+6DzGn1wCd6H8+/vUvg4eP3N
f/UAhbvD+8v9e8aXzLgc+c85TbU0fvWsw5vlY3mjY9t8X8aX7PvlTlIfV5Ux
8tswviQpvhTmeaa9jXw9PeNLqt1/F6CpKraRr8tnfMk13tW1dv2zbdvgf3xJ
s4YRy4TXrWCcYnzJLbbT1TcM2CyU35/xJT2FFutb68rKcUZ3ZafGRh350kMo
byeju/a+j6wY0uRnK1+/zviSU+oz3w1q0rV9CfcjKXBtz2Eyx+oLNvJ18Izu
av9o07eBvlwblE8J+Wfolu2xX6qsUT4lpKZTn9UzmxytUD4lpMnBbRMC74yy
QfmUkHquMb82RlnbonxKyKkfAj/fsPlli/IpIZ+u9T/9CQQKUT4l5MbkkqYO
kxXr6hlfUu3m76wB2QSB8ikhl0i27w75YkagfFL3HxOlbXOqAuNTQg65ozsz
o2STEOVTQg7qZDAn6fUiIcqnhMzq+GNRoInMFuVTQp7betO7efNs6L/3onFL
t4CKhUtWYjyLyPbDq8aodbinqGNM4zu9yx8LNnlbozyLyCW1a42rghownkWk
3uATAw0/NWI8i8gVPhOlvavyhCjPIrJPmoi3aIUhgfIsIonn5SlFRfMxnkWk
r13RrJk1MRjPInLN8NChPeaFYDyLyMOD9QYELjUjUJ5F5DGzt1MP7R9HoDxT
/Y0c2Y0/dhCB8iwiPxiUv9+ys0SI8iwi9/6pc64sVeyX6UXjaYvOj+w7yQaL
D2LCQ7Rk7o7QLEWdJRo/N9ez19P7c8egPIuJk7+3OGXW5dmiPIuJ285uAz9O
9BOiPIsJwn9icMCi9gTKs5iwTRW6zEhei/EsJhIy+OPPl8RiPIuJA0cHvXLS
3YfxLCYO590Xi7TDMZ7FRJaffj+ex2qMZzFxKSadG2yUgPEsJgZ47uk89Ewo
xrOY0A++duzC7wEEyrOYMOQG6eaujMB4FhPiaVmPw0ESxrOUWKGm2zt60HDF
/iYaL64LKu/w9QPGM3X9xro/2waaClGepcTGzpa9P26sxniWEloeSzNqL8zD
eJYSzZnTcrYFxGA8S4nkP+KCzm+OYjxLie+mIwe4bEvFeJYSnKju7ueOxGI8
S4m0VZfbb3kRgPEsJXoJ00sW3D+K8SwljoxdfOrH3d0Yz9Tvro8TdLY3x3iW
EmcjCjrGbIzDeJYSW59unfYmOgPjWUZYJlYMFPb1wXiWEfPndO9v99DUBuVZ
RvS/all59pAHxrOMSH1z1Ts1QI9AeZYRZpO2SJ2cQjGeZcR1zk5SPfMMxrOM
qL2peX3YpTyMZxnxt33vme9G52E8ywijst/mxhrHMZ5lRHzj/VNZqWEYzzLC
+rnBscO9d2I8ywjRiNHWnl7+GM8yYkHm/UBv2z4YzzIiJD0kKmlyIMazjLB7
XWR72i8O45kDDg+tPDG/WxqGq4HPg/w1vv+6hfHPAer1K5IatbywOKMG+k3d
Unl3ykHsuXBAwtW3f3m7Y4UorgY6LFGZtPdEJva8OECrOum49IwlgeJq4MGy
WVazVk7AniMHWPDuxo/WTsZwNdA5IkakMfQw9nw54NF81all329guBqodiv7
1HNzPvbcOeDMoi3zXKNvYbgaWNgtfUHQ7AvYeOCA1Fsn1pdnXMNwNZA0u0t2
RfeL2DjhgLNPC6+rzL+A4WrAfdR0wm1aITZ+OEB1XeLL0W77MVwNBD2L+8YX
n8LGFQcYRxN1Y2qXYzh1/azkLAeLPdh444COfUS/u36ywXA1kPNF1hzHXYON
Qw74YPlz1e6iUkw/qIEL396m5oe0YN81DjgebFAo6KqP4Wqg57jhz8Z4T8DG
LQf01hylZW5mgOkNNWDy5c4nImI8Nm65QDt4A8jTFWHjlguerrX8XbshDhuf
XFC3f/ES/cA0bBxyAT/xy5P+4WOwccUFiVNObN2RuQcbP1xwkZfw34+S09g4
4YKphV/r55KnsfHABdwrB0MdknOw584FW035Kw3LL2HPlwtG/L6366X4KPYc
uaBx/i/hgJEHsefFBeB7nIOPpy/2vLjg09LDna3rOmBxgwtqG+odBkqnYvxz
QbPVyoKssskYzzzw9YpX6ZYfhzGeeaBox7QPP597YzzzQGZp496pR4IxnnnA
Lfb+p82L8PjMA9myLyWrTvtgPPOA8YWeJ25OScN45gGPG7cWPRTi7yMPSJ79
dbvZgL9fPHCh41KXw73zMJ554Mx3kfnmDWkYzzyg7j6h3UVb/DvIA5vmxEa8
8vHAeOaBjqu8nLQe/cDGOQ/EXPMvcKbX0/ai8dq+QduHLhiG8hykBQ5IwfaY
qKEozxQebzZuYHSMDNUbFL4ictasE8MMUJ4p/MiQ3i/e2L1F9QaFF8Vrdth7
dxnKM4VfbG90qX1lMsozhX/PTNqb63EG5ZnCQ44lJXxyyEZ5pvDn37+HHB+A
fQcp3NKp34HC4SkozxReXDQ74YAlNp5b6zBXhEvvVM5GeabwSRdjK0wCHqI8
t7bngn//wl7NaNyg8K1TXl8+taEKm6fwwZ0fD0ZECX5i3zU+WJEydskvjXhM
1/FBzowFG+14nbHxzAfGr8KfRVaVY7qOwm/MXb1OOhcbz3xwwuKTlt3KA9h4
5oMFoe5ftV0PY+OZDx4+5VskfEjExjMfDKk8zRd82IuNZz6wezz7bwA3ChvP
fBA1dMaao8aB2HjmA4+hHd69EY/AxjMfNI39ojs18wg2nvlAFrRw+Df1W1h8
5oOTczo29YjKQHkO0gHX/T/IRmqkoDxT+KI9i44diDHHxrMOmFl1f/tx0xvo
PIXCP3t0Od730lFsPOuAV7mu8TlB1th41gHn9V7V6ssisfGsAyzacR5lhO/D
xrMO8Hkc3aNaLwobz9T9+8bub/QNxsazDgjru7khRc0VG886wPrl38zuv3Ww
8UxdH9/la92Gm+h3k8IlLy+OdVo8EBvPOtR7sZ6/+I0dNp51gDRfd1PXJXxs
PAuA3ZZe3aY7zsfGswC4u2ot2zeoEpt3C8CRtUfaj/0vGpsPCkDHHZVzn5zz
wcazACR51BuVXNXAxrMAuG4+PycqZRk2ngVA8oSQmLjtwMazACy1HdljsfoB
bDwLwDjuAUNTlWXYeBaADfsP9ZqWW4vlNwRgWZBxp601gVh+QwBcSld/XP/q
M5YvEoCQgCshrXWP0fEsAPn9b2/YT7rZIDy38tnncvP0JvMx6HjWB7Fq6Ut8
G/KxcasPOmyyIP/b/AXNY1C4Sj+3Za4HHqN5DAq/0eiQEDvJD81jULh4r/vh
ybx22LjVB5GGixpndVyKjVt9sLB89O0ccx9s3OqD1Dv80Pi+1ti41QfFh2rC
Xn++iPJJ4TXnojSWfZag+TcKXzU03aL+4TsbdNzqgzNLvMsWdf07Bh23+sC+
XurNnCPWi8ZXqmV0uZleYRXa1iDG/x1GbmrLWxq1tZPxf3Ncj4S05i3lv8v4
v3nb1Ba35i3l/WL834F/Pt1rzVvK+6UKFHjEogaD1rylnM9ONP7679gyvwGb
hW3d/ccXXtjy2evklx5w/DP5yZdrIvq0a/aD92d8YVnnT5ctmnQhb0x+0lRl
fg+n6guw/Ux+skulXfZgXy7MuzL5Z8s1+7OTHuuOgXVU6fxh3y/Blq35RjnO
+L9PTugeJW1+wXHO+L+q0Q/fHAGBsF8KHiQkSJsy5YGDCoxXHWnc/Fdx+2vn
CFhnhMkfTtObnJL1cZNQ/lwYX3jG+56VOa8XCeV1TBhf2GyZ1+kkE5lt2/6c
f3xhlTJpbsyW2TCfzPjCucvM7nCCVtrIeWP83/hje3QDP+QJYR0ZGn9zM2ZK
pKshjD+M/5umuuXHs9D5hLy/HWl8/Z9zrpc3xsB+Mb7wrcm5XsPHDSLk/WJ8
YbM48s2njBLYL8YXNrOJHt28dxCMM4wv7KwRfev7w+nwuTP+7z3ngWO+56yB
8Z/xf3/cfzGxp4NiHtGBxtcOsQsIdg+B7WR84awlJvcqHljAdjK+cC+VR+t3
t7sH31/GF66Me19bVG0Exy3j/7onmt89dXIfbE8HGv/W+dvCz8Jj8HcZX/jM
sD/dn10fBn+X8YV3VZ6sW304Gt5fUddIRjhXGblxcs/B+zC+8IKCt0M1xgcK
32F5hk8wzxCK5Qfaw/xAHpYHuAfzAIbYfL8DnO+vxeb17+C8/iU2f18M5+/y
OkedaDwFztONsPn4SqXzcTUQrnTerQYilM6v/988Wg0UKJ0vqwGx0nkxFe81
77bNfz2Q+MkFZYaZb9Y4Hxb2ReInF7xReQD+fh1FvEDiJxc8mFHn191xJ+ST
8dOf9h1yY2v8SQKNn1yQ+yy/0nbnGdj+TjRu//izzuHQHPjcmXmrymzRw8ji
E5BPZt6arHdk6b38ZFj/iPHTs3/v3Dc4ajMxEYmfXND+V83DmbttYfuZeatK
u5zCysP/CdH4Sd1nsFNNszdfGIPETx54tl9ITgp9AvNRjG9+PrmofUwfxfyC
8c2nuoisu2glw34peOAB2cKZFiP6XcDiJw8MqFwbrKl9AYufPODzY3dkjGsa
gcZPav7brmwKzyqIQOMnD/Ter23535JZBBo/eSAh3H9z6ouPQjR+8sCCkCPP
j2ubCif+Gz+p+c6AIdxn48rnErH/xk8K7z0zKE/9ZCwaPyk8aGCZqevao2j8
pHBDnYkRk5Zmo/GTwj93/LVgq95uNH5SuGP5z+bcGc4EEj8pPEf0akDT7nto
/KTwhIsx9+Y/abSdgMRPPkjqkNZ5SWg4Fj/5QJBlelCrOAGLn3xQubLoRFLc
Pix+8kFK/a7Rd26MgOOc8cH5j99lXQ4+gsVPPih7/eWotazI1ujf+Enp7bRz
n9Yc3RGHxk8KT42OXeY4MxHyzPjdhU4F43QoPY/ETwq/2N/xoDml542Q+CkA
qtPNJIJ3O+F9GF87RWAxrVWXyvvL+NoSmU3e5isCeK6EIj7UkS+uJWSY7tUd
g373ZcQI1ZVGo//myesU0O81BxxcVOXXwew24fPv/VvXAVp7GdvvWYP6pBT+
OOpmLfeRpbXXv+8dhbsV2uxeHlpp5YA8Lw6w1a7MjzC4TeC+tk/XbWHn6PMd
GF/7gMOlDa5v7o7Bfe008883by4ci81T6sgBgqm360tvYf5gHWleOFU4s3IU
5g/Wkb8KnQP1jh3EfFjq/iaNFw/wKlm+9lBioeCj11+Wr13l/7f9z1G/Wb72
iB26r99/u8fytYdlPzX7lhckxH1tU5PN6rHOs4S4r93Q2W1qcbWhEPe1Vc5N
SQsNfmiL+9pT49x1TZeaY3k5CXm1p8GQI93W2OC+dvPav6P9p7/A+JSQwkmq
3zNcFmLzPgl5a33/dr4rCjA+JeSQ8YGd4rpysHmfhIwJr/i0JE5If48VeEru
yQu7Jy1i+do3dVZdbSJns3ztQxfvT7D4MBj7zkrIY2nF3p7uHAL3tX81//la
aP6T5Wu/1evRLlj9phD3tddcqzW2q1yHfWcl5PHCZUt9xtTZ4r525uc7SR9P
nsB4FpF9FmQ22ovrbHBfW7/fvTtLCggsXyQiE786bRgYUYDxLCKNNI8fmb2o
Bza/FpEHxXf79syaxvK19ebvzDw3fD3Gs4g85e8XGtkpHONZRNZ8r+R2vriN
5WvvdvXXrDy4lOVr6/Gfvbnk6crytc8932IR4D2X5Wuf/p5EhA7E/VYRmbTX
ufbT23KWr+3W/s8mrS+LhbivfWDV9NN7jBV1Fxlfu1Jl84okgxW2uK+tl5f5
ctzxfRjPYsJYbNDt8aMGlq/92tprHbHNjuVrV7bruaxm8AaWrz1yOU/QaVM0
xrOYiH/YKW/9tniWr303L65wRuUOlq/9IfJ1unjrVpavbfc0RyU6FNeNYmKZ
45Md1mVsXzv2XoOwa8/ZLF+7drpr1r5LijpgjK9tbJFzvmFhtBD3tQ8+r7Cy
4E/AeJYSGXe2iIX/HbLFfe34hfN2VVy8z/K1iys6i8q+DMby+VIiJXnR2rw1
nixf+8Ib2/DqiHiWr122b/mJTilsX7ujqSDOouooy9e2CXm4ZF3ZPoxnKcHb
eVH683Yky9fOmD5JlXse902kxJBN267dKWX72ur7+5TGaSxj+donU5fMnlCs
jvEsJW5Y+/6YNmq/EPe1xzu1n2Qc7o7xLCNG5p2/GnP+li3ua2sNzliyJL+K
5WtXrA6X1J2xY/na7kOeWJ0auJvla9cGuiaXSs+xfO3Xw6qHdlM/j/EsI9R3
ej3ePiOX5Wuv7bRUMtuA7WtXLVg5zzEnnuVrhwtPzx3+MZrla8fEL3/RvDiI
5Wtr/9j7VVIzneVrF9iFPD8+TwXjWUaskVrkbFm0U4j72o+E73uGbYwQ4r72
hJVlF+aeOo7xzwEhnk2Fzxd+w+K5Guh00zgwerCmEPe1HQ/l3Ru8spnlazet
O9c8tEUX8685oG9ip5CjvrNZvra3zoAnRstWs3zt0sHLq7p+S8VwNfCm0N73
/cQUlq+tt/nVy6e9Clm+dm/z9G0PX19k+drvGt81lwtvsHztR4GcPTf65WPj
gQO2Pu9if6r/VQxXA8NHNhfbbMxn+do+m5/OeR+Br4tQA0t0u09xN73C8rVf
tjvUUuZ9hDW/di8zPvLkWxbL1z7deLlMf9cm1rx72pzOI4e8iGP52luPX1hx
ZNA81nx8YO1BYw0+vr6CA9T6cLW+9+3Hmqf3mn20t/MsQOC+tkr/iifvTuPr
uNTAvnUz1XyuvWf52scSiMvW62ew5vV3gmb07FzhIsR97d8Jro2NYWnYuOWC
l5+LXv7s3lWI+9p23zR+3tqsjY03LvD7E+QV+9CF5WsvimsJdxwRz/K1pd3q
jX6NP8vytV1HWTW+sszGxgMX5M8YbCEdgT93LgjIDPiybdJF7PlyQdWm8/NK
Dpxg+dq/pmebrS8+wPK1FxivnjKV0i24rz38o6rn9uX2LF+7vtMMX49sCcvX
Vis5Fj3+q7sQ97VT7UdlrdKIwHjmAcd8+9i60u+2uK/tlbhJr/pAA8vXnnE/
aOuIAVNYvrbPoTAX58HBLF97/4kjEXX32b72+1gVwsUnF+OZB4LX191/dY7t
axtGxCUfmp+L8cwDCem30q43prN8beHed7ZenxNZvvbpht/Jj25sYfnahWrt
Bu4OtyFwX/vuJf+Yfu9esHxtacylY1xilhD3tcHl/Qt3H5qD8kzhqRG//W8Z
XrbFfe2wMbMqXcOfsHzthSvWO+2oHYXy3LoOn6OaYH/an+Vr/9pr0Vz3Lonl
ay9baz/S2Albp0Hhe477nQ8Zdpblaycna89++eoYy9ce21EWYH2Y7WvzjXIE
d532snztnjV9YqzGrWf52nN6BkkfXBpM4L7287S1HU363UR5pnCXLgG5z69b
CHFf28b99pN4TUtsPPMBqWtvE9oQYYv72l0CBFV3nW+yfO1FkfOO3xqA6zo+
eDU9V+9EiDfL1w4Z2RJoQ/UXHc98YHa/8u4isyPYeOaD8tDGffeEydh45oM9
h/kPlszCdR0fiDRW2NzL2c3ytRPmWNt83BrE8rVB0ZVOOybMZ/nakru+GZLF
PAL3tTXfb39Up5qBjWcKP7LuRZKplpDla4vf1rz21MLGsw54nX2Sd/jAElvc
13Y06L91n9MxbDzrgIOHCowO87Sx8awDpnVbptadh6/T0AFH/lgdFK2NYPna
G/2mG790jsPGsw5Yk/15o+OHaJavfdHO5JhK51CWry1bfTjV49B6lq99dXW0
mVGyM8vX7pnjf7fH574E7muvefLn5PTtZSxfW3X/nKBLfVyx8awDhknL34ge
4/kNASjofWt+5qsvmE4TgGkLz8WEWQy3xX3thzETuvcvDcXGswD0DMj0NvKq
Y/naIcHHehfm4vNBAWiqvE3+HO3D8rUznbeTgsCd2HgWAEe+4fBZWRjPFL53
/0urbivXs3ztw/OirtWIhNh4FoAD3/ycjlxtR+C+dub2xcF1WgVC3Nceve/X
jwGP3IS4r63354Hdeysptk5DAFI5V1V6ZSywxX3tZb78uj/jsXkfhV9w6Odm
MmUUNm71QfUjw4pJFaew9Rj6wPjE2vETP6hg41YfXFVPajhsNJ7la985knXX
7pcXNm71QdL8ZyaHVDayfO15Uzt3cz2ykOVr5zdIvN236GHjVh847uj6rd+P
C0Lc195hqp9YYjdGiPvak4rV0oZ1v2WL+9qibb3Sud0nY+sx9MH4pWm/Xsee
tcF97QtHOuvnLhxri/vac0QfN9wpvWWL+9rOIeYuRRWjIJ+Mr33/RtKbcRkH
If+qQIGn/KpM3K9ZyfK11e6bvunj9Zflax99ayae8/Mey9fWLB7yWHAzCN6f
8bWbXR7smD1rlhD3taduWWs0S2IoxH3tXaHZ91eHPYT7XxhfO6ZlhWTmnRm2
uK+9+4lkfeTShULc1w7Rv3oWLFWMc8bXdiy8sgc0qxJofltClmhozpT5CFm+
tn9XE1+rEYtYvvauLqXqQ55zCNzXPt2tIf7lmJ8sX1t7grD9Tf5NIe5rb0uo
8xur4435MhKyB7FnzlvnP7a4r93YzdvcZ0APAve1307puvm67jSWr109+888
o2neLF+7k9+nlVeuh7J8bT1dXcuUg3NZvrbmz+WSOIuBBO5rG37LOvMi7AXL
1z49/VDNgmIvIe5r25v8XdFrlg/L18583/vyzB0RLF97wf0fRo2au1i+dojh
eI7spAvL1w59e+Dr3yUm8DkyvvYky1WymUtKWb52bdeem0fdSGb52oO6zT7s
ceEoy9e+eWjNh3kpc1m+tl3R2TkmL9rDeML42he4Wyp6WeWyfO0tbwykI5ta
WL62Pcwz4L62DOYHcF/bC+YBcF/7JZzv4762HpzX4762Yv6O+9qmcJ6O+9rL
lM7H1YCH0nm3GpipdH6tBgYrnUergb5K58tqIF/pvFgNiILl81/c19bxM46M
IngE7munTrwwnr95KcvXviJ96nRUEMPytWccCb1y3TmT5WurDxma0KdbNsvX
/vp3zcM0kzyWr/203z7LIVWZLF9bo7Je68Yutq9dtNrJmecdwvK1a2a/vxN8
cRbL19406XPGSoEWgcZPLsiYkihoWH6e5Wsfmemhk/fQnMB97QVRGnzNx74s
X/uW+3/pHJLta++LkGamDstl+dojtUfYa704z/K1JX6XDfQijrB87a5mXsM9
08NZvnb62zCPWhMXlq9t0zcgMj/UmEDjJw98nrTX393/HsvXHrY/3CH4y1qW
ry3pVGvnMDWO5WvHX04rVglLZ/naNkZ2Z0vvZLF87Wnrx3iWX97B8rXnRlX0
n73ajeVr22QtDhoba0DgvvbVVPXtR90KhLivfSe2yvTy31CWr22Vc0jXYMt+
lq/NHXLgsL52CsvX7jM/WPvkibksX/vh6fXPHFZqYvGTwkkn083d0oW4r22U
c+BO/bDdLF/746ES09/P4li+dsCbQb4nPMpYvnbSRcOR4VxXIe5rx3iP6CCJ
iWT52r8SXlv/Hi2FOoHxtW0Sur59LylF1w1SeOfrFfn9iqbb4j71+oXX+Y+N
pNi6YkofgtxNzxoqbHCf+oL/a89Hr7Jt5PVSGL20dm9K/muH38J+r5zyWlq6
0vi+DZGbpz2uEdbI67HQvqor3G8urx/C6I1xApP82O7mhPz+XWlct8eTJbff
UvPotvt3o/EhcJ/7K3ndG9pPnAz3xXvL6+TQ+FO4j15ef4PRAznH0wvKHN0I
eXu60HjIwCv78zyWwPZ0o/FsuH8/vm3/O4/G0+F+/2LJMnPqO0X7bldhfQB5
ewppfLyTvJ6AvF5HBa0T7sH6A/K6QIweOD3a+uJk1SjiR1v7u9B42PqSOI2j
YbD9GjQ+AtY9kNfN4NG4KqyTIG+/Fo0/WiKvq1AQ/TQxrt8n2s8aB+swDGyr
4/SAxufBug0ObfWantL+lD+s86DVVkfiG40P5MnrQsjrPDB6Q0dDbHnjYQbs
b2caD/516Ef91jTYXw0aB7AehbwOBo/Gvz2Q16+Q30eLxm+vlNe7kPeX8a10
YH2MU8McVS56fqF9pXOwnoZv2/N6TOPOx+T1Nzza6oo8pn2iLFivo3/bc/xC
4/GwvkdUW32VOhrXVJfXA5HXS2H0UvTyR/Em7hchP51pPHlq0HS1o5dgv7g0
rgbrkMiv59G4E6xbIq+jokXj12GdE/l9GF9JA9ZF2dvGD+MrbYJ1VBJKb7i/
pOMMBxTBuiszFieorK14SuPtdsjrtOiUHku47PmA9llmwLouo9rqdXyi8R6d
5HVg5OPkN433hHVj5HVpmmn8LKwzI69HoeCNA1xgXRo5n4z/otFUb7LV4Dbk
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
VzaU2a75N75RuId28bAV6RsgP4zeK2h422GadTv4vBgf1vHlYr2eakth/pPR
ey8KdLxazHxg/pbRe1NOt9gG9LFG4x6FmwbcllR/uihE4h6Fuwa7kXM/SWyR
uEfheyaLTx99+M4GiXsU/nP+4Imt+4tbkLhXR166Zraun7CzTTPyfGXEO9Hu
meSQXPieMvPuVeqCK/O+F8LzDhk/5TPcJ/hTrsdo/q866AXrrrowBom3FJ4W
vMu461f1Mbj+VH/pv6HSfb8Nrj+9EubbDLf4zdKfkqOSwysXK/ZrMPrzuV3p
y79TX9ji+jO4VP+v7p3ZLP05qeqs0ZadQwhcf676e6xr1P4Ttrj+nBiTtf3+
DkKI68+Pu+Z0ODStAI3Prb6h47Bwy4jtLP35n8jy8Km5biz9eQWea4/rz11/
tg9/rqIpxPXnsj6hjSFj9wlx/Vl0NWlmanA9S38+gefO4/rT4deGOk2tXSz9
OWhK5zX5GyJY+vPdpfmxVRkxLP3Jh+fF4/pz0hNfvW0Hxgtx/bn8wXFB/z13
WPqzeV5hSkC/AQSuP0+W9/K9+nklS3/6wHPecf15OzrmQ/yKJJb+fNrFQDxy
RzRLfybujfbvJIli6U/tG+SP5+P2s/RnHTy3HdefF8u9F+/cOF+I689494pn
Z/6UsfRnn8rNaVPTRrD051fNiYdPaYWw9OfxpaM+FXQ8TuDv7zZ4DjuuSy9W
dDQ2jTjH0qX2mT/0tqxKZelSXxNVZ7WMSJYufVweKvjPMIqlS/tekFxdXL2d
pUufwvPWcV26Y4Z/5fdz/kJcl2rOSV96efBnli49+7TE4JC/NUuX9pvwuPLZ
5/UsXeqe8sRprDiDFcduBb7vajGikKVXJ8Fz1XG9aji7xO/h1qssvbot3b06
700OS6/+t3FW77DsJJZejXXauc3BxYelV8N2nDhZ4ODI0qs3LJL+C7VR6AFG
r26D56rjerUanquO69UyeI45rlfXNR+r/3VomRDXq6dj/yZmxLL16nd4Tjeu
VzupqrifChwtxPWq5mPVUUf33GTp1XVbu0VoNZ1i6dWpvUdwdPuz9aoNPLca
16vBb+M3HlmpLsT16p1jfz5+9T8sxPXqo8JDO50y1Alcr06H50rjejVuS/6W
V52TWXp106f2NbpJcSy96pHn3Ts4YydLr86F50HjetXg+xUX30sVtrheHe7U
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
cjzclyr/n8m/lcJ9qejv6oP6VPm+1P8BaQg5JA==
      "], {{{
         RGBColor[0.880722, 0.611041, 0.142051], 
         EdgeForm[None], 
         Specularity[
          GrayLevel[1], 3], 
         StyleBox[
          GraphicsGroup3DBox[
           TagBox[{
             Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[CompressedData["
1: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
yacvd5Jf14cPh1/rJL/qx4/qTo4x15zP+w3z83fih9YhfojvDx/cvL/e+sVO
/NG68KHwm/z9YfDO8DTOp0782nrwYfAbxA+Fd4Knhguf91X4MXhV+H3ix8J7
wTOpP534kxWq+L1POvHaenK9+Z3wYHhheCt4E/7+SHgNPv88+h/ig+CFiG8J
f9ZJ7tGz6l3HdOLtzXfWAk924ifUV/3GZ41/PASeG36X+BmteGa98wfEj4P3
hmdWnzqpn4ZW8Yv3wivDS1TxUx9y/fHwPvAs8EfwCfC+8KzmD64f0uj51vqJ
rngFPbPe+f868TcrV/Fjb/H3h5vf4GnNxcS1hX+hT6t7faPnsxOfyGu9Rfyk
Vmooa6kr4T7w31w/3PnE9ZvCqxLvhv8DLwHPBv/RFc/l/Lqa+3sX8c878f7m
VHPrjfCi8Mzwhs7Hrnh956Pe7e921uc4+E9iPbriffREeqMneP3F4Vnh34m9
3UmtZw1lLXUVPH2Tv9by/evUetZ88zr/iB/VSk1obfhcJ/5tzSr1xPOd+B/r
S/37O8182Q3uo1524idWr+LPn4I3g4dV8d/vcf0x8Eh4Ru9PJ/5opSp++NlO
/NsaVeqB1Zt6YQD3a3r4bfgIeFfi05kPuH4K+Hvu/xrmL3hpeG7im8K3wcs0
+XVz+OlO/NFqVfz0u3VqX7/vDPDkdfoHPXi/jZ1/dbz/p+ZA1lrvOuvlj+b5
dOrMt4lN/tJzWdsOb8WL6amsHa1J9Vp6amv7Ya14bT2qtao1r97VnG/ut+b7
th2PaS4xp+g99dDWxtasemvXtGtbjbK28zv4XXyGa9TRALXAez68zj3z3jnn
h9XRGLVGTVmljqaoLWrkSnU0Uq1Ss1aus0ZcK2rUqnWeoc/Se7hmnTXsWlaD
1qozJ5wbPrPV6qxZ165rfu06a9y1rkZZK+qR7ZXYA9E7q7lqr3PE2sY54lxx
DVtLuYZdy2qOtZYeUC+oZ/miHY/mXHfOj23H0+sdZ4e/akez1W57KivW0Sy1
S49o7WRNpLfR41grWePZW1KTrP3UGLVGDzlTnRxmLpsL/q6dHpG9IjW0T52c
am41533fjqapbfaIrB2do85VPeHUdWp+a39rkm/a0Wi12jk3Yx1NVpudkzPU
8bx6Xz3qp+1ootqoZq5TZ4271u1X2O/RU+ut9WiT1Mkh5hI16tI6OVDtUYPs
Z+iB9EJ68knhn9rx259X8U96vPmaz1/q1Gx6Fz2M9YI1orWiNd3xdWpoa2lr
8FF1PPgizfdzbVkDWQtZ8x5Rp2a0drzGNVunxrfWt2beqY7H6ds8j646nlxv
rgfqrlPDWstas+xRp8bUS+up7Y9Ys5nLzGn2v6xprG2s6Xav0+Oz12fOWbdO
z8DegT2D0+r0LOxd6MG3qtNjtNdoD3HDOj0+tVhNtp+mx9Hr6HGmrdODtBdp
j3KjOjnT3DkK3rhOD9JepP2wEXVqAmsDNXzzOjWstaw1wxZ1ehh648db6Y/o
ofo383maOp596UaPnG/2nAY1ejNznR6j62PnZj30avRonWa+W2NYa1hDb1kn
563arJ+569Q0zmc1uKrTkzR3bN3oWVez3jZu1pc9JHtJ9uzs91lzWHtYE37O
XPuMAwlvvV2lPlTj9oYHlWifNV5Xs75/a0dz7IctX6JF1ozdzXr6o53D8bdV
6jM10X7UciVaOaGd+vKrKvXSxHa0+bsmv/7Zzlr/vsnvauIe8LIlWqmG2n/q
X6Kt5gxzuzWPucScYe3Tr5nvavS+jIeUaLeaug88uERr1eBd4aVLtFnNtj+0
TImWW2NYa1hT9KhTU1hbzA/3rOOJ9cZ6jNrn044W/VDF33Q3fuXvKmvHZ2b9
9EuVZzm+HW35rEo9pYZZD35cRdvUPOu/j6pooTnMevLDKrlNTbDemlBFK9Q0
68EPqmidmjwl/H4Vrf6lHS3/skq9pkZZ3/1aRbucg6717pK52dX4n7+qaIH3
1Hv7ZxVtUbOs/36romXOebVq0pK1YM7gn9a7VXKJa1Ktq0vWqmtCLZmsZK24
htTOdsnack7au1ATnavmwP0YDy3JjXquHo0+ey/1/Hp/Pf6gOjWCtcJ28MA6
NdY8zfqZqo6n0dtYg01Zp6a3ttfzTFHHk7m+3AOw1+oz1bv6TH3WzlG9qPfI
uavH1ev2avKjNYa1hjXO4DoeTi+nJ7P3ao00otGDFer0dOztWEMNrVMTWRvZ
8xlSx8Pp5fSQ9nr1XHovPaK9TT3lmo0e2Lt2Tk3XzFfvj55R76hns5drz8T4
Ao2euAZnbdaPa1MPqBd0DjmX1Fi9zCol2qvn2N/PXuJF1FC9z6ol2qqH18vr
F35sR4P1SquVaLM59AB4xZLcqqbrhYaVaL0arddZvUS71ZRZmvWu1pgzDmS8
UkkuUQPV2llKtNEc2qf5fuZWexj2MlwzP7ejQfZunMNqk2vCXoZrwrWiRnKq
9U4V7VRT1frpSrRWTTbX9CnRajVdrZ63ROvtOdt7tse/Y533VHu/qPJZ7IHa
C7VHv3Wd7+R3+6aKtlo82W/60RzSnWfos/y0ytxXk9Wer6totXPOe/1Glbn4
PjwG/oRjEiblmHbqq9fNWd3xIOba00u8iR5F73BGiXfxmal9Y6s8S+eAueC9
KnPDnpW9q380iti4dvozY4iv2Z2cby7dssQL+B3N9euXfHdzul5qvZJcv3+d
e7VTSX/18pLP/hXHde5p1PEmO5f0h/UQ5uatSrzFyDr3ctuS/reeRu+wTYnX
0aOYW7cu8S7uqbnfsmNJf9acq5detyQXX1Oyd/Ulx7WMP2xnX/WVKv24Y33N
KvXBpvztifBhVWryXeCb4Pur9ASvhY/2ParkWHPtefDFVXo4J9bZA3IvyM+0
Q509rTcYn13Sr3OP7HX4rJJ+lnt89oN2K+kP28O7qqTnZW/PHvCVJTnX3vCL
Ve6pe8TvwVcQv7FKz+18rj/YNV2lxzKgzp7TkCo9BPei3IPtV6Wmc2/WZ/xn
z8wpn/1Bdb7LrrzHqO7MsT96pgfg3LNHf1+Vno69+w84Z+p5uUp/1Bpxzipz
3trROT91lTnli9gDegp+u5XekIfj80r6t3ocvdyGJd7HNaf327hkLQ5q/MBi
JbnCHt1UVXoA9u7cw3VvcYOSfoTzw37CDiX7ne6Jj4a3L9kfdY/S/s/mJf0X
awBrgeEl9b7z/0p4i5K9YPcs7ddvV7KX6Ryxv79Zydzx8+vVRpT0F/Sg1ppr
l3jTgY1/WbQkt5mzrHWqklxmzrKW6lmSy/Qk1kq/V/Eq1jTWzr1Lah17xuMa
fXc+mP/1ol0ltZg11nC4V0ntNaDxh31L5or5fpjaUlJrmVOtNUtJrrWmshbv
lNRazmm9+0Ylc90141pZs2QtrdDo+ZIlufHwOrXJXiX7c4fVqTVGluzvuUdu
LbFnyX6mewwTezY92HZqEGujE0pqE2sia5+jSmola5xR8CYltY81h/uHR5bU
Inp890KPKPH+1kzut+1dUktZc7kfdGBJLWZN5l7OASW1mp5RLzG+ipcc2uS7
JUpy/ZAmfy5ekusHN/6mX4l3cE24d/CPp2unpj6I8VIltbYa5N7AP56wHU1R
iwaWaI0eVW/zUxXvao7X+/xcJfebz62dVi5N/7RKvp+iyRf+RuJNxueU9Ktd
06dWmbOudX8zYj/wtJL+vnvAas/RJf1y99CfgY8r6Y+7R2a//5CSfrU1dW/4
rSq1tntu9vMPLelvu4fn/sFhJf1vf3OxVuPH/C2Ge+zuZxxT0q93Ptg/36Ok
f+qeu/32Y0v6+2qsWndwifaaL/Vqb1bpbdzVaP5HrfQW/Y2F/ffdS/q7zofH
4cNL+vPmDHuNaoRaYU9t9yo9PHtt7vGfUmXPz71/e8CHVunh2hv2NytbVOnJ
6S/dE7yoyh6oe4Uf8/kmZfxalf0ya9Bj4XVKalP1xl7RWiW9CHOie6fOSXPl
4/qWVvY73ePpbZ3XSg/OPULzv72IUSX7PeZc9zadw+Zie6JzVOnZ2iu15z+4
ym8q3AtwDbrX7hpxbbpHt1iVPQL37ryH3svLSvqt7mG7v3Zyyf5Op1fyq/fc
e+8ady/eNeja9zu7V/hPTdSORpm7XqqiXf4G6QX4lJL9I3/D8SF8aUl/2t8c
vQWfW7L/5Z7+6Cp7xu71m5PfYXxBSa52D/wD+JKS/q+/mbIffGrJ/pI50lx+
Uknu1PNMAr9axQu5B/4ufGHJ/p+/QXF/aL+S/r6exL15NUSv4p6z+0/7luzf
qh/2dvYv6V/7m4D34ItK9iPdk38fvrhkf8bf7LhftU/J/o16Z+/l+JL9LTXR
vSTXhGvj/wEtcaY7
              "]], 
             Polygon3DBox[CompressedData["
1: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
+ZDn+bBq7Y/+Pxz6J40=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$14421#1"]& ]], 
          Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         EdgeForm[None], 
         Specularity[
          GrayLevel[1], 3], 
         StyleBox[
          GraphicsGroup3DBox[
           TagBox[{
             Polygon3DBox[CompressedData["
1:eJwtmXX8FVUehu/ADHDgzpAKSIOE0iXd3SGgSAkIIhKK3R2ra3e7a2IHSoko
IiFSgoJgICmiKPaKyD7v571/HM7zO8ydOfmN99SaNHv4rCK5XO46/ilKPSTL
5dYnuVyNkrlcJ/hpOA93hJ+CS8G94RXwMXCVYrnc0iiXG8PfleGX4AFwB575
L3VJnmkPPwYHuB38KFwC7gEvgMvBPeGFcHm4K/wiXBruAr8AZ3BneC6cwlX5
1nt8ayx/Hwe/C58GV4QXwafA1eD34XH6HvwC3Ff9hhfAI/Uu+DV4kL4HvwEP
UT/gt+GTNX74VXgg3I0+vE5dhj5UoH0+7SP4+3h4FXyG5g7+AJ4A14FXwpPh
6vAyeDxcG14BT4JrwR/CE+Fj4YXwKLg733qDuizfags/AheH28APw8XgU+Ct
cH34VPhzuAE8Gt4GnwCfBn8BnwiPgb+EG8Jj4a/gRnBfeJXmDx4Hfw03hifB
e+EW8Ch4C1wPPh3eDTeDJ8DfwE3hifAeuDk8Gd4Ht4THwzvgJnDGGF9njIP5
uxL8Itwf7sUzS6kr8EwT+Fb4SKDf8A3w/+BG8E3wYbghfCP8F3wSfD+c8NsT
4OvhP2nvA6/UvNLeGL4Z/pv21vB9cEx7c/h2OAc3g2+Dj/JMC/gOOKK9FXwv
XBRuCd8DF4Gbwv+G/+H5kfBncF3ayzCuNxnXUM0X/BE8Fe4KH+ZTran3p7nc
Jtra5dlX/D2aZ9pRX6uzBL8fcy61v+Fl8E/wXXAz6kOUu+Hm1D9T7oFbqB+U
J+HOGg/v+i/cVWOAn4K7wd9RboFPpN5P+Rd8AvUs+nEsfBxjuVz7Dp7Hd2/R
HoVXw3drH8Eb4Qe1/vAW+CGtObwV/gCeABehXkYZD0fUyymnw0WpH9B+gT/j
+aPwf+Au1IOZuwBn9KEmfZ4HD1cfKTXhVTx/l/Y1vAG+U/sdXg/X5/nF8Gja
5uRtE77iPSN45xr4APwH//cg3Eb7ifKw5lx7hfIQ3FbzE7xe5/GOhrxzA3y2
zgm8EZ6hOYDXw9Ph76l3Ur6hfEfZQ9muOeWZddRn8cwFsoXws/SzAe1r4Wm0
7aP+WrZLdod+VqT+Q/uZZ4rDS3n+YOG9X1B+oOym7JJt4vklmh/qujy/Gp6i
cwt/As/UHMOb4dnwTsq1cG3qzZTz4ArU5wTvvXMY7y7+vg6uQ92F336uvUS9
nb8vhavoDPP3JniWzhv8HNxLtgmeC/eBWxV+e77OP7xV8yk7Am+B52i/wJ/B
52ofwZ+qD7Jr8PNw78Lc/lqY3xGcr09laxnvufR1mn5L3y8N3mMn5W23ZsFl
E9ub2XC5xHZuJlwmsS08W3sssd06By6f2FZdBFdObMMugCvqHNCfp+EesjWU
W+FGiedKc3hMYlt4PnxsYnt5IVwpsa2dAZem/pZysc4X9a+UG+B61L9Qrofr
Uk9ljN9Tn8QYp8AH4NbwGZl/3woul3lvTWK85TPvxcl52/uzeE+euhxtz8A9
4R8pV8G1qH+gXAHXoP6NciNcn/p3yk1wg4I90R44PvH3L4OrJe7X5XB16oOU
K+Ga2td861G4I1wKfgzuBAf4EbiD5jvzmDvQ/+mZx9weviDzc73gCzO/qzd8
UeZ39YHPyjyGdvDVcPti3qszM/e7E+0zMo+no/YGfATuBp8HF+X5HvAcuAjc
HT4fjuGe8KzM69oZnpZ5bG3hYzKf+Sl86yq4LTwbviKzrRlU0u++jzG2Tvzu
e+FW8N+U2+AmiftyO9yU+jDl33DjxN+/X/tW8807OxWzzZEP194uldi3nwmX
1N7JvBf78t1LMq9xP/jSzH60P3xZ5jhsAHx5Zhs6ED4z89q3gQfAa+DjFMNk
tnFn8N2ymX3VRDjJHEuNhItljrFGwVHm2GgYfDR1zDQEzmX2eUPhOHMcMwIu
kjlOGg4XzRx7nQz/kNr3dIK/T22bOsJ/pPZVfeA/U9uXvvD/UtuFfvBfqW1N
f/hw6thuAPx36lhtIHwkdWw3CD45s5+tw3gHwWvhanA/eDVcCR4IfwxXhfvD
H8GV4WHwRrgWfCC1HezAO4fT/glcm/bB8Dq4OvxP6vhmMM/Uo/0qnXXsU334
ap05uAF8jc4cXI6Ssb4/Ug+lfQPtNXnPj6n9fRfe811qe90ePpjaf3eGa/P8
pfBP/LYWfEni99SBL4MPwXXhK2Vj4OPhK3S+4cqZbe5ZvKdSZj8xDa6Y2b6f
CaeZ49RxcOnMMe4EuFTmGHcMXCaz7zkdzmeOZcfCWebYdzxcMnPse5rii8z+
aSpcE75YtoT+HJfZH0yn/ZfUvrkH/Fvq+KAX/Gvq+KYn/Hvq+KY3/FPqeKgr
fCi1j+8GV+edF8pu8f6fU/v47rSXyJw/nArXgC+SXeSZKpn909m0V8vsw2bC
VTP7sBlwyJxXjIaLZ85/TsnbL/9W8M0HKL8o9lAMx7vHUecSx6op/ErsOLQ0
/EbstcrBr8dew3/48+XYa3sUfjV27F+HZz6OHbdWg1fEjkmrwh/GjpfLwQti
x6Tl4UWxY9Uq8PLYeUNteE3seLk6vDL2HPzNt+bGnjPFqM/FXp8j8Iux904R
nn8rdj5XF14Hb0sd852Ydw7XQ/EK7dtTx3wN887zutO+P3b+dzy8NnasXQF+
J/aZKAYviR3j61y8Fnv/FoXnxz5PMbwwdk6Qh1+KHe+Xgl+IPf+a+y8jn7mE
enHsGP8Y+N3Ycb1i3ffgesFzqxj+FEpvxT9523vFZorJx9DeT/6a9tPgvvLX
8GjlGPKV8KlwL8VXcKPguD0PD4O7yOfKbsBd5TfhOcFxXwv4dHiwYkZ4AjxI
vhgeDw+Uj5Ydg7vJj8ND4c7yxfAXzPOHjKcRfGJw7lAK/jI47pWfqhocVxfL
O7bU3LShrkB7BCe0NwheU+VB9YPXSHlQneBcICgehivJH8n+wGXgEvAJcL3I
uZLiW8XCHRXf0b48sg9aCb8V2WetDY7V5bPWwe9E9llVguPk4nn7+R2KH9Tf
1HlcY9r3pNYoWsOLU+cDGu8G+O3Ec7s0dU5SWnYgeP8rH1yYOp/RWDbC8xPP
53r4rcRrtAlenHgPbE19hrUW76TOf7Smm+F3Eq/7J/CixOu+Dp6XeF0qB+83
2fxFqXMVzVul4D0vv1Aj+Pwqty0TvJ9li8oG2wrZxgqFeZY9fzt1fqh1LB9s
Q2T/Swfvf9m6z1PnXdpLC1LnTlqjY4Ptg+x/reCzrzy6brBNUK5dM9i2KKfW
+taInC9XDLYn8iNvpc4PtWe2wO8l3p+fwksSn4vP4HcTnxfpRo347ebYmlBD
eFNsLacFvC22xtMS3h5b+2kFfxFbf2oMfwrvS+2L2+StwXSgfSftO1L762a0
707ti1spl0nt61vCO1P7d521b1LHP82VL6SOAZrmrbV05J27eOdXqfWQJnmf
rYm0x9QraH9OtoP29+En4LLwe/DjcBl4DfyqbC78MfyabDS8Fn5Ttlu5aer8
OYNXws/DFeGP4FcUm8HL4Cdl0+FV8EuKVeDV8MuKT9Q3+FnZNXg5/IzsKfwB
/B/5AHhJ6nw7hc9n/cZEnpMZsneR5+1CeGzkebsvOP5XfvNAcJ4iPedu+OrI
Os+DwbmDdKG7gvMLaTv3B+cy0oX2po5nlJd9mzpeapv3fPRXzBN7TLK3B2KP
Sbb0+9hzIBv7Q+y5lO09KP/F+2+OnAc9HhxLK1d6KDh/kdb0WHCOprzpX8E5
nfSx24JzGelgNwfnaNKybgnOy6Sb3QpfElk3uyk4B5SeI7syVGdZviM4h5Ju
dlVwjqn48IngmF8x9p3B+ZE0tNuD8yZpbjcG54nKYa+Dz40cl14TnIcqnpRN
Ggb/HtsmDZGtiL135Bd+jq0FSBOQznAocvyxX7Ygcs78beQYRL6wBGVvgWX3
fy789q+cc2s9/3Gh/qnA3xWek5YhO6d9cjj2Wdc+ORr7rJ8q+wCPDV5T5Uc6
99ITjsTul/q3jfJkcB6k3Ep9+bHQt98K/dczOk9tqb+KvffbwV/HPltt1P/Y
Z0V+cF9sWyu/+Uvs/d4e3hG7/wcLY9R5lc/dG/usyBfviT1f+u6uwnxp/PJb
sv2j9NvYfTxQmD/Z+JGy1bHPmfzvbn2Xcd0ROT9dAD8bOa98O1g3UL7ZI1gf
0xnvFqx96cx2hZtEPrMDgscru9E/eB5kB7oH62yyOf2kDUW2AyuC9THlgyPh
4ZG19NnBOaPyl/GF8y5NdUghlpCePBgeEFnHHgWfHFl7vyRYr1AuMxOeGjk/
6hs8/7I5HYL1N9mlScHnQjHe5OB9qzhkYvC+VUw4PXg+ZWNnBe8Z2d6pwfMp
GzsweO1kJ6fBIyL7+vZw/ch2tXnBH8mOtQjWA2U/OwZrkrJ1LYO1Svn9dsHa
oOyzxt4psu2dnTkP71LS+pFybeXCF8DTI+eAr8GPR9YQXg3WNLrCrwRrHfrt
y8H6hnSDK4J1J+Vuc+EHIusSlwXrTrpPeSZYp5W+8nxw7i+9Yn6wViONYkmw
Hi495N3g+xTpIUvhlyPrIc8Faw7SUp4N1hykpZwJnxFZ674oWONSntu1MHbd
45wU7Gd1j9C8sPekmbcO9sW6U5gCT4p8v3M2PCXyvUCzYF8szbxLsK/UfVBb
uHXk+50mwf5d2njnYB+tO6A+cM/Idzq9g3ME3en0Cs4LdKfTJtjv626oaXDM
IL39nMx6iuZ/fmpNXPHhluA7GuWn8wpzK93gDfjOyHniomBdV1rB68H6uXLJ
uQU/ojzx1sK6K69/M1hXV165MFgrluawoLCm0iKkUcvuxnlr5cojlMtfHqx7
Kz5ZH3xnpNzwk+D7DuWMG4Pvm5R7Su+R7ZG+Kj1Tce41mXV4xeZXZtaxFUdf
m1nLlqYt3e+b4LstaVP7gu+YlLfuDb5XUh79bfCdlPLWxcFat3SSYSUdV4+k
vidYw5SvvxeeE1mH2RN8JyV9YH+wtqxc+JFgHVj6w47gOzhpR1cHx0i6y7gB
nhxZr/g6+H5Q+uTO4Psv5f67gu/IpDM8XPC50oJ2B+cL0iIuDs6dFedfGXx3
oPjh6eD4ROdodbBWLE1Jd1OyV4H6vGAttEpJ38loD5dInIPIPku/2hZ81ybt
YlWwji2dalnwfYQ0nKElbSfHaazBdyvSlN6Hn4isNX0QfM8iHUz6tM5gcerP
g+8ZpZkoD1LuI21Ed1x65yF8x0fBmrm0sq3B94njC2uk3FA54lOUayJrQcuD
73Gks20OvmOSDrMm+H5Tet0LwXc60jp0Tyu/8Kdi72D9XzrJpuC7Tmky81Lf
T2g/bw++P5UGuAF+JbLu92LwnZE0mf8DYzWeng==
              "]], 
             Polygon3DBox[CompressedData["
1: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
z4wm+lJP3LWKlZrkvo8Zf7I/6zUze9H0w+s8U5+tmlptvW2T3GLOMffomeqd
2nO6ljKH8e92kmPNtXogeq32aHojatZR7fxy/upR61Xr0fwHXrPJXDenm9v1
bPTG9ZT0cgacg53UmM31Ojn/2E5yhLnCNYorutE4rl2s1WRuLt/2D3owesH2
vHoz9sB6c3o69sbmRL17PRxzpZ6C3r49o16DHoRrAfaMehN6QK4V2CPrDc12
zauTnGBu0FNyrcAeVK9Jj0iv3R5b70gPXC9cD8C1ITWX2ksPwd5e/8v4tMez
d1SjqdXUEGqJzZv0P+Z4c/0WTXK9NcZas1mTfml2yXqgnoPeuB6IXsQ6TXLv
hLYf2rJJbbJmWbs2hf9k7S7xg9WMakd7JNd21m5SS83h5vJZ8OGd1ERro57K
vNYvNLfruVzfjWenF+Mcca4Yo2rVl61RnWhqe117MHsxNaprS3oirn3o2eiV
6Km4VlJ3oh+McWPdOab2d045t9T8h1bJQeYic5behr/J3+Yz0vu25xhb4hnZ
i4yqU2usOfphy8OHdbLm5drXpDp+oR61/ttk+KudeOr2UxPq+GWuoep3Tazj
j+lx698Nq+N/6UHrRS9Zx//Sg9aLHlrHn3ONx7WeZev4f67RuVY3so7/55qf
a3/L1ennXEN1LXVEHa1iPdD7XqpOfdDD1su2hxtT4tHY2w2pU/vNP651LFHH
/3PNyLWjFev4k64B6EeOr6O9nK/6e6Pr9IuuueoX6gFOKvF49Qb1cMzlJ7X1
0Zg0No3h69r6ae7/eVt/BxFPYzvxzPVH9JCmlniyektqaNeK5mvng2ucG7f5
yrXPZer4p64JuzasBzitxGPWG9RjnVjiCeu9jq3Tf7pGqR85pk6/65qz/ui4
Ov2ta8D6k/a440o8QHvfFerkI9dU9UP1kCeXeNJ6y0e2+dSaZS+7bp16uW6J
H750HX/UNQTXEvRYV2z1q97rSnW0hTnUXLpynXfnGo39+Qz4J518p999eKs/
ndN62XoSd7f90mdeRZ1n6Tvx3ehh3N+N56S3sWqdd+cz8lmtVue3+E59t9Pr
PDvv0XvV43mgGw9J70ePfWZJz673rie/RknPrlf/TpVcZ842d7sGMKtkzdq1
gY+q9Eb2RPZGH1Tphcwh5hI9XrWNGkd9/36V3GLOMfd8WKWXsoeyl1q2iVZV
o6pVp9apV75D3+W0Os/afKifoYfn2po9iN6eHu/0kjUMvV/PmdDqV/uPNev8
Vu/Je1urzm/1N/nb5sB/7OQZ+CxWqZNrnIPOxdl1frvPzGc3pU5smZPMTXqI
89r8ab/a4/dUzoVu+qMFmuRCc6L6eWadWHfOOHdm1bl354BzYY06etLf5G8z
Bo1FPS7Xataps79OyXrM2nV6GWPK2PKYYx5z7WaZJtrensDewJr+kN/fS613
TeiAtt5bz9W4al01rn9bsHiT9WZj0FjUI7iozf/2/xvw/f9gf5MSv2f9Ov6Z
c965r0ae0caDf+swosl6qD2LvYsaePU2Hp1/ami1tJrbv/2whvj8jizpTder
k0ucs87dY9r+0/7Sfm6pJr23PbjehPfkvXlPelOb1um97cH9+4ztOf+cTno+
e79NGL8C3qnE/9u4jtZR8+hf7tCkN7Tns/c7rtVD6in12PAmXoQehV7Fok38
aP+mQb9xSJO56Bq8/qUexdxWP+hdLNLEr/ZvDPQjRzbp3ezZ7N0GN8kFzmnn
9mJNvBJziLlk6Sa9oD2dvZ2e6NYl/ble6UZ1/j7DY46p2Vdu87verZp1iU7+
Bkkta8ye0dZ39cKhTWr3nNZfVtNe2cnfGKl17RFWaeuJa432EPYS9gh6xWpa
ta0a+2DzURPt7Jqp/rtz5rRWP+g1qHldz/JvltTCRzSJVWNWv13P/LFuPHu9
dN+p71Y/Rj9iszpr055vrA9rcq49qr3qhnWejTFkLC3ZpHfVU9JbWqKJd6aH
pn8+FJ7eyXf63cbITq0e1ju2J5rS1kPz+/8BtlGa2A==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt13WYVeUWB+BDDDBwGNKhu2Fg6JCWGrpLEAQFFQm7roF6FVApr4JFqFfK
ALEblbBoTERBQcFW1GuA3Hc9e/74Pez1ztrn7HPO3t+3qDV51rCZBVOp1E7J
kIrFU6m3HXxeMpWanplKzZBsto0dYFPV50lJtpZ9UjiValUglerF/pY5bAMr
xWqpK+t7lx1y7kXqi6Uqe499wS5TXy6V2DvsIJupniVp9l/2vtdr5vW6sQrs
LfaZvmnqC6UKO+jvQ/17ifpSyXK8Tt9+57b2t97sO7mCrWYnfNZS6hL6Hmb7
WFN9XVlx9hDby3JYF3Ya28r+YMPZFPa9XMnWspNer7S6lr7d7GvXd736BinL
nmfH9PVw7khWhN3H3mV1WBv2k1zD1rMUK6cuqu9+9h6ry9qyYuwBtp3VY+3Y
cbmePccKswrqH+Vq9jg75SXLqss59wX2DeupbxT7Q/7N1rE0q64uoG8h28Qq
sEbsd7mRvcKKssrqX+MzshdYBquo/lNuYY+xkqyG+he5jj3DCrFs9c/yL/Yk
K8DKq3+Qq9ij7B/XXEZd2rU8GfcL66RvECvPXmM/swFsAstky9gOVp+1Z9XZ
DnbY73FVfB9Sij3KPtXXRl8fVo1tZ1/quyJ+V6nBdrIj7Jq4VinM7mZbnVvd
uc1ZIXYX28KqsVxWkP2HbWZVWTP2m8xmL7EirJL6H7mDvcjKs/rqUzKfvcxO
Yw3UNb3eLvaVa7k2vkspwzbGNevrrG8wy2BL2DZWg7VgJ+V29jwrx+qpU/oW
sFdZNmvITshctpGVZrXVtdOujf3JRrAxrI5z98b97FpuUt8sTdnnrIzM0reI
5bDP1KVlJlvI8liZIp4D9gjbyvqysqwnW8W2sS7sL3WO3MEeZ83iOVeXlYvY
YpbLDqnLycXsTtaEHVCXkhlsAWvMPlVnyXQ2n9VnH6oz5Tw2lzVkH6tLyAXs
NtafVXJ9/eNZYjtYA/aRuricz+axuux9dVGZwm5ljdgn6rRMY7ezeuwDdTGZ
yuaw5uywOlsuZ0tYP1bR+/aLZ4ltZ93ZSXWuLGQbYv3zG61X/+A3ymP92UhW
wbmj49lk77JRrDI7M55htosNZ6exkbF2sLfZaFaFjYv7g+2MdZw9of7ee/Rh
/WLNZo+z71hvlsd6ub5M53bkD7BXWE9WmLVlS9nzrDcrzjqxZexV1o2dUDeT
BWw968NK6OvMlrPXWFf2t7qpzGdPsDNYQX2t2d3sWdaDFWJt2BL2XOwrrrk9
6yBj2XjWQt8RPRXkCraUtWRfqSvKleyezGS9i3WvrXPbyUyvVV4eifUl/xmM
PaoYm8feyn8G4zmqyB5j37JerG/sKWxVrC+sC+se+xtbE/sH68Z6xPrHlsf+
y9qy0+PZZytiH2TtWIdY29mDsYeyDqxT7D1sZeznrD3rGPsj6+z6u8jH7JtY
N9i1+p7Of/ZjLc5mq2PNYV3ZGfH52c3sDVaJVWEDfVcN4vuMNYsdYJ/J9lhX
4jeWS5xXRG7S87pzK/pb1ViL2b3sI9actYp1nN3G3mY1WZ3Yk9kitpM1YE1Y
O+/7Pash17MVrAP7UV1LZrMHWSv2tbqSXMXuZR3Zr+r6citbzTqx39QNZA5b
w05nx9X15Ba2inVmv6sbyly2lo1xfVV9zvHsNbabtdZ3VF1Zrmb3sTbsW3U1
uZYtYyWcu1i9y2dryBqzNLuT7WaNWA5r79wfWE25ga1kWfruUX+oL5e1ZAP0
1XQtw2K/ZR+wtuw7dXW5ji1nJZ27VP1B/nwVe0VtfXvYUWv77NjvZYS+bK83
KvYQfe+wwawUGxz7N3sz1lj2prqgTGCTYv1jb6gLyFns7Fhj2esZycA5nk2M
fZo9rT7uWgayIbHnsWfZb2wwG5aZzKMxlzZPJ/Niv6xkVoyZsUU6mTX7ZyUz
YMyCLdPJrDkgK5kVY2bMTSczbl823XErn+PS+A69x1F/r8o2qH/0vn3ZgJgF
2DPsVzYoZk12gZwfe186mY/7eL0mjjc7LiQT9U3OTOblmJubpZPZNU9fjuMt
jgvL2frOiRmEPaX+JX+mif28AdvETrFx+XNOLfYc+50NYcPz54GYC9qlk/lz
aFYyr8Tc0jadzA5DWEfH+x1Xyb8nYz+KmShmozbpZN4ZnJX87vH7d0gne/1w
drrjfY7LyyXOvSUzmW9jzm2fTu6bYfqmOW7hO71Y/b6+r/y9MLtcvco1Z8YM
5z6bwVrruyyef3Ys9mT2qvqkvjFsXOyX7BV2go1mZ8azyr5gteVGdlfsv+xl
9d/6RrGxmcn/LeL/GK3SyXw3MCuZ7WLGa51OZsNBrI7jlxz/5dyRzh0d+xb7
h3WRFWxj7G/slLqrrGRPxl7GUj5HN/Ygeyp+c9Ys9gi2h30Z9wrLZbPYXnaY
TWE5bHo8/+xQ3FesObuI7WNH2GTWiF2Qkayrsb5OYvXZ1Fgr2X52DmvMprEd
7HM2ntVik9jm/PXgXNaEXRhrKjvIxrEabGKs72xfrO2sJBvI1rNNbBDLYoPY
BvZG3N+sKZsRaxb7gg1hpdkQtpFtZmNZNXYW28T2sDNZdTYh9ga2lw1l5djw
/DUsZsJhsd+yEexZ9hY7i9Vmk9kW9iGbyOqyc9k29jHrG/sP681WsxdiPmB/
qjvIvexR1o8V1deHrWEvsv6sGMtja9lLMZewAqw7e4g9zfJYBuuVkcyxMedM
YHXYOWwr+yhmFfaHur3cw9axLuwbdWOZx+5nZ7N6zp0SswT7JNZ2lmYD2BPs
dXYhaxl7bKzl7Gv2l9waPe7nLFZT3VXfT6y5LGIPs+7sf+p2GclsFntZZ3ZM
3Sh/f4t9qxv7Wd1CFrOH2P8B3g/vQA==
              "]], 
             Polygon3DBox[{{2417, 2416, 3184, 1594, 1595, 3185}}]}, 
            Annotation[#, "Charting`Private`Tag$14421#2"]& ]], 
          Lighting -> {{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}]}, {
         RGBColor[0.560181, 0.691569, 0.194885], 
         EdgeForm[None], 
         Specularity[
          GrayLevel[1], 3], 
         StyleBox[
          GraphicsGroup3DBox[
           TagBox[{
             Polygon3DBox[CompressedData["
1:eJwt2XWgVUUXhvHLVe/W2dfZ2B3Y3V2oiIiAEiqhKCkIKC1YWHR3t3Q3SHeJ
ooBICIioKIr92fE9r+/5YzM/hs255549s2atdYrValzxufy8vLyX+eMIxi8Y
93Lt4ZqbcDH+VJCX9znjx1y7udYzv5GxgHGOLvwj92zA7+CEcZ4u/DPzs/As
/D2ejqfjw3ganoa/wVPxVPw1no1n4x/wwDQv7wR8N+M65jfgoxgH8/e38SDG
A4z7uD7i2sS/vccY9F643sXHMB7M93079DNy/qUIvw//9ivjNsZdXB8yv5Ox
esjL+5v5loX8HP6+kPlfeT9f5fuz2M/1JddnXJ9wfcg9RzA+zj0b8SZ8tP4f
1yL8G/Or8GpchPEZXv80XIL3Xx+fiu/FDfEZuCRugE/H9+Hn8Nn4fvxN7uce
yfUq81czlme+Db4KP4xb4YtxGfw6vhZXxK/ha3AF3Ayfhx/ETXExXBo3xufg
Ungl73WVFgjjGq61Wif6PfR3nM+4nGsF/offcRFejH/Hi/ES/AdegpfiP3ET
Xv9c/ACvv4L5lfjfAj+bA7nnuJT5ZYx/MX8o3+vyU653md/MmOo5c72PCzXH
9QE+lvFErt94diX5vyfknm8JfBL+HZfCZ+Ei3F8Zn4z/YL40PhvnM18VX4hT
/BC+AAdcFl+KM/wYvgRH/EiBn8kurR+uU5j/k9csw/yp+C9cDp+J8/j3R3Gp
xM+uFb4/8bN7Hr+BG+NZ+B58KW6K78aX4Ca4eOLn2xhfgY/HT+DLcFFcBZ+P
j9HzxWfgf3kPlfDl+Djmq+HT8T/MV8DFcKI1hs/DR+sZ4QcSr5nWuDouhbvh
Ovgh3Bc/hG/GbfAN+HLcDN+Er8Qt8Ba8DRfVs+LaijM9Q64tODI+zHWL1jX3
X596vX3KHtya25vH6XflKtB+4Z7WwZ9JWe59jPniuD3zL+C6eCJ+HtfC43BL
XBOPxS1wDTwGv6I9iafiV3FDPB2/hhvhGbgNboCn6efiOngCfhTfhdvhl3A9
PBm/jOvjKbgVro3H670FP9NyvOcX8WVaY7gePgXfg+cEv88aqdfDq3g5//d1
3AYv036Jjk3r+Xw6MrZjfi3z70fH0+XMv4cna+/pM4yOxavwluhYvBJ/EB2L
V+DNeIr2Hu7E2J7XXMdrNs+tyZn4Rfw8XoCH4aF4N+6Fe+DNuCfujt/DY/Bb
eo54HB6r+IXH43GKp3gsHqP9j3vgbtrreHv0ObSW9zOScQTze5kfjofhj/EI
PBzvwR9Gn0lruH9b9FmyGr8b/fOW4C+iY/R2fDD6nPgIfxl9fuzAX0XHmp34
UHSs2YW/jo41u/G30Wt6L/4s+lzchndFx8GN+PPoc/FDfDh63e/B30Sv+49x
f8a+vP9tvP/vo2PWjTz3j6LP0XXcsyr6vtn4nejPaxHeFP2ZLsYroz/3WXgN
Hojn4tV4AJ6D10Y/s3l4XfTnOB/vjD6rNuD10Z/pArwx+vktxBuin8Hb+NbE
MfyZAr92P52BuDS+F3fATwXHxtv5XWoFx5y7cM3gGHVn6nO2EN+GawTH1Ttw
leBYpM+hanAsuin12pyCD/H6jwfH5FuYrxYc627GTwTH7VtTnxvf5jun0bl9
ON95zP7c33fnzhzlBPtyczrj1+fOHJ0927lqB8fY4qnj/De5WC8rDzgy9zrK
M5RXHM69ll5H+2+yXrfAucJnuTPi29zP2J4722TlXU9w/2OMg7n/SVwFD8U1
8eN4BL4dX49fwHfgG/CL+E6tHfwSLoFvx6/j+/Ad+A1cEt+J38RlcUncGT+I
S+CO+C58E34Zl8H34U64PC6Nu+Ny+H7cpcBrrb9+F3wvvg2/hiviMrgnroYf
wQP17PCjeJDWCa6Kh+GquBIegKvgirg/rowr4H64Bq6Gh+NKuCzuhSvgB3EP
/Aguh3vjWvgJPBLXxtXxKHxN4nhbA1+bOAeria9LnJvVwlt57i1wU577Ftwc
N8ED8QO4Gt6GW+JmeEDw+VgV/4tH6vPBv+PB+pzxr3igPmf8Cx6g/YJ/w4P0
OeM8rlG4K+Pw4HP2cTwCP6w1gjvhW/GjeH3wmdUAbww+sxriTfhZ3EhnafD5
9QxeHnxOPa0cL/icqodXB5+D9XHH4LP4EVyEazTuxtg9+Lx7DPfEd+MquEfw
+VsZZ1wz9FwYj+aaqDXAWMA1XuuH8Xvu74Xb4u9wT61J/G3wOaLz5BDuonXL
/Fe4s9az9jXugNvgg7gjfhXPDV4/o4hRB3Bb/Arzs4PX0kjFedxJ65P5mbi8
1pLOQdwMN2b+U/ym1r/iMG6NW+B9+DXtO/wj7oPb44RrgtYe497g81rn9if4
de1N5n/AvXE7vB+/oX2Kt+NWuDnegV/ALfFO/CJ+Hu8OrtFa4134JdwKt43O
h1rw/pcy/zTzdZnfjJvgZ3Gf4PjQudDrVmumGx4UvE+7477BcaMLHoXv0d7B
/YLjQFfcAp+o3wVPCd5fw/Ck4D0+BE8O3o9DdV4HnwV98NDgmNMLDw6OSz3w
kOC41LPQNZTi4vbEdZDOhdbMN8LH6jPHdfFR+kxwneA8sBU+R2ta8YHxFK4F
uC/j9OC4MYJ7RgfHt774ItWTii2MJ3PN1/vM1Zg6Ez5inBgcTwZz/4TguDcI
j8/t/YG4Hb5I6xa3xRfqueM38AVaq3hGcJ75FK8/DT+Jn8QLg3PI2nhecI5a
ExfVutTnz9g5OJdux+ssDs5p66R+D5Vxdf2uwbllLfw+boqfw12Dc+8OhY4V
yjPb4rHBcXsAHhMc//vjt4LjfD/cK/h86YR74+sUr/DL+CztNfwSPlN7EL+J
z9eewl3wFdoXuCU+Wfuo0LmuattXcHN8ktY//ji6PtykvIj5V5ifqZwqOM+c
gbsnXvNLicmjEseKD/DoxDFkC+6WeL8swfMTx5mDuGviPbUYd0681xbm8lXt
0xW4Q+I4Px+3Txzn5+Euiff+Irwg8R7/Es9MHJ/34xmJ4/wn+MTUOa1ytqK5
mKl8+zQ8Kd+5+nGp82HlpcenznuVr56QOjdWrtshuJ6qpHsTx42tvH7vxPFn
JZ6Q+OzYgSclPjt24YmJz5eduE/i+LMKD04cJzfioYlj6Sblb6n3VGV+5trE
e+EX5vcXuu9xMf8+JLdfbmBslzhOzuWetonX2xz8ZuKYM1u1W+LeRW18WuL9
Wx7fkri3UB/fnLinUQ/flrj/0EC1aupe0Dv8/CsT76OGzF+deK89i/smjp+r
8aDEZ8EGPCRxbH8H90scw9fgZYnPo+/wjYnXZ3N8UeI1XAdfnHht18VXJd7L
jZSzFTr3Uw54buL1/CTz5yRew9Xx18F1mXLv01PnqMr/j01ds6jOmh+c/4zG
S3L7dyxeFpzjjVOvKTgveguvCM6LxuNFwTnhmELnG4rzU/ElqftLqi8uTd17
UV3zd+4MVa6+B6vJN011RHDuNEG1IX4KT9EeDK7vdGb9ibvmu0Y4nDvLtFcO
5PKc6cz/EVyjqXb4K7jWU73wc3DNqLrjx9z5q5plQ3DeNRlflrovpJprTXBO
OxH/FFzDqk5ZF5yzTcKXp+4dqS7TWtSaVJ11Qeoe41Z8TOo6VHXrWal7jO/m
zgXF0vdw0DrOdy2cpq4fVSOfmboPqfhTmLqWVC18ROq6RrXVdan7Xftwfup6
TfXXkanzXtWVypGUD6hWOjV1zq966trUfT/ViTsS5/jqMRZL3ed8n/lzU/dI
N+PzU/ddt+DzUvdXP8BXpO6JqSa9MnfeqSa9KnX/TTXp1an7aaorr0ndu1O9
qT2uvpryBO1rnW8VM69tnbcV8O7onp32XaXM71W9lz3R/Th9ng9n3ks6Zx/K
HBN1zpbKHKeUH96fOS4rdy2fOabonC2bOW7qXCuXOUbrzH0gcyxTTlgmczxV
3lg6cyxTTnVn5tin/LB45v2vPOqeLLf/8Xn4ucS5azH8bOKc9o7M54dyyHuz
XBzE92W5OIhLZLnYge/KHDeVl96dOY4ox3swc5xVHnt75vNGueiP0b1F1Z43
Zo6PyuuuytwDUt54ZebekHK8KzL3p1Qv3JT5vFGeeUPmeKpc8ebMZ5Jy1+sy
96GU+12fOc4q/7wAN0mc85+PGyfO7S/CzRLn/Jdk7nkpH7gl8/mnnPm2zOei
cuBLM/fIlPd2jY6zOq8vy9y3Ur1zIW6auKa4OHPvTLnl5Zl7YaqPzsWNEtcU
V2fuqSmPPQc3TJyX/hvdV1V/++TMPTvVMidm7v2pngqZzwn1tAsznw3qXZ+J
6yfOc87GDRLnQmfhZxLnUWfgeonzqJMy9+ZUN52G6ybOwdLM/Qv1wI/N3EvV
OTshut5WXtcjunepPKdbdE9TeUvM3IdVTVQ0c99WddDxmfukqoOOy9zb/a8O
ytzDVY12QuY+qWrD0/HTift7p2TuqyqXOzVzX1X54VGZa1T18I/M3OdVr/7v
6N6uvjv4K7pXq+8OCjLXseqF5mfuBavHfkTmnq96+/9E97L1nUKRzL1s9fn/
jO7/qvf4c3T/Wv2Tn6L74+qxJJlrY/Utj858xqtveUzms1zfO/wW3eNWb+f3
6D67ej5/RPfW1T/5JbrvrL7Q/6L74+r//Brdp1b/Jy9zb13fd1yTufeqOqhk
5vxPNXXf6F6DctrJ0f0R1SD9onsfypknRvcXlLePje5BKL8dF92DUN47Kbqn
oDx/fHT/Rblx/+i+ifLYqdG9A9U7faL7I8r5r83cL1Yt1ju6/6L8f0p030F1
0MDovpjy5wHR/Rfl5POj45XO93nR8eq/HCB6X+tM3Bv9/YrOr/bROYdqn0XR
e1zn6eLo/qzO8SXR/VnlBnOj96NyjA7RuYtqpY7ReY9qq33R38Ho3JkdvaeU
eyyIjifKE3pG95uU23eKzpNUi3WJzpOUwy+Mjg86rztH522qE3tF96dUB82J
jgPKYQZF95tUXwyN7iWpxhwW3WNSffpddN9fZ+7I6F6P6sQR0X0l1Y+jons9
qiv3R3/HprPyk+jvrnS2do/O+VSnDI/uE6nmXRbdN1c+80P090bqMS6N7rMr
X1oe3QdXDfJp9PdeOpdXRPepVadMj97LqjGnRccZ9ROGRPfXVFMfiP7+TLnK
rOh4pTxwZnRMU7/ireiel+rlWzPXHupptIvOofVd5Izo+KY+xuDo3pzq+jHR
vTPVtqOj+2Wq3/8PEEoMew==
              "]], 
             Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[CompressedData["
1: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
zCaxQ2wA+479H7+8NNY=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$14421#3"]& ]], 
          Lighting -> {{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwt0jtIVnEYwOG3zy8/7zqJU+EQTjVJk03ipJM46ZRNNqg41SThkJM06eSW
La26e7+3qGV5F5FIC8R7BtLzF+H8eM45nOt7TnV7V3Png4jo06XS+qkOtJ2L
qOAxH/OGz1hYEPGCVWxiDdv4nK/ZwLdsYT9fcYg9/MR3HOMHTrOoMOInr7Wq
c/3WeF7EGif4lZP8ximuc5rfOcMfnOWcNqzPc5ML3OIit7nEHS5zl1+4x4/Z
iF/8q31d6I8+e8YVDnOKAxxlL0fYzUG+5Hs28w3r2cFatvIJG1nJOub4NL2z
mT5K22ZwyCuV6yzNPc3G85WxgKXMZwmzLGaGRQy6RNxmHMt/vFEu3YP56fvy
YZovs+k7Z+5OixNaYsTOo/v/4D+sW0r7
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0rtLFVAcwPFzfVwfg2sNLi6KOCvSYkMSToFXpNkIfF+v9geUF2dFnAtx
EJHrIxGJFHFWr9e3hjqIiRFkaS2+P9Lw5fObzjn8OCVN8frOSAghqQvDFX/x
QEUFIRSwmE9ZwTI+YxXrWMvXbGAzW/TG3MduDvEDRzjAz/zEJU4wwwXGCkM4
5l+t6LfOHs/MDWGVLUyzlWtsY4btXGcHN9jJTca5xS5uM8EddnOXPdzjO+6z
JhrCCf/pm/7oh3563zIPOc80U1zkR06xn8N8z0EmmGSvmsxvGWMjX/AlK1nN
UpbzCV/ZwREvla9znT7elRNCHhcY5Vfm8gtzOMdszjKLM4xwmoGTvDemeMdx
3nKMNxzlNZ/bwffI/3/wABXTTkM=
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0ktLVFEAwPHjqDPqaCoG0lKF9kYfoBARCRlNJCRQEFqqIC5rIbPURbQS
XUjLXAi20k/gY8a3STj5qE2+cqlOo+bv0uLP7xw4nHvvObdhYPj1UFEIIa3z
WAhXJr/5XW8qQijlOz7mKJuY5jN+4kt+Zifn+VX9xusc4gE/8IITLHCaFckQ
ZvmEi5ziD/7Rsk71U6WJEFYY5yoTzLCMWZZzLdqP60xyg5XcZBW3+IjbrOYO
a7jLWn7jPg95qT2d6Zeee68lPuUC6/klej6nmPc949F6vmeOg8wyoz7jOaY4
wxf8yGaOsZEjrOOkPfejs1KJTnSst/EQitnLWHQvLGIPA7v5z7118Z4p3rGD
t3zFAtv5l23Ms5U3bOE1c87gKPb/P3gANLNLPA==
          "]]}, {
         GrayLevel[0.2], 
         Line3DBox[{2013, 2309, 974, 2012, 3299, 2220, 2014, 3300, 2221, 2015,
           3301, 2222, 2016, 3302, 2223, 2017, 3303, 2224, 2018, 3304, 2972, 
          3401, 2019, 2973, 3402, 2020, 3305, 2225, 2021, 3306, 2226, 2022, 
          3307, 2227, 2023, 3308, 2228, 2024, 3309, 2229, 2025, 3505, 2310, 
          2230, 2311}], 
         Line3DBox[{2027, 2974, 3403, 2026, 3310, 2231, 2028, 3311, 2232, 
          2029, 3312, 2233, 2030, 3313, 2234, 2031, 3314, 2235, 2032, 3315, 
          2975, 3404, 2033, 2976, 3405, 2034, 2977, 3406, 2035, 3316, 2236, 
          2036, 3317, 2237, 2037, 3318, 2238, 2038, 3319, 2239, 2039, 3320, 
          2240, 2040}], 
         Line3DBox[{2042, 2978, 3407, 2041, 2979, 3408, 2043, 3321, 2241, 
          2044, 3322, 2242, 2045, 3323, 2243, 2046, 3324, 2244, 2047, 3325, 
          2980, 3409, 2048, 2981, 3410, 2049, 2982, 3411, 2050, 2983, 3412, 
          2051, 3326, 2245, 2052, 3327, 2246, 2053, 3328, 2247, 2054, 3329, 
          2248, 2055}], 
         Line3DBox[{2057, 2984, 3413, 2056, 2985, 3414, 2058, 2986, 3415, 
          2059, 3330, 2249, 2060, 3331, 2250, 2061, 3332, 2251, 2062, 3333, 
          2987, 3416, 2063, 2988, 3417, 2064, 2989, 3418, 2065, 2990, 3419, 
          2066, 2991, 3420, 2067, 3334, 2252, 2068, 3335, 2253, 2069, 3336, 
          2254, 2070}], 
         Line3DBox[{2072, 2992, 3421, 2071, 2993, 3422, 2073, 2994, 3423, 
          2074, 2995, 3424, 2075, 3337, 2255, 2076, 3338, 2256, 2077, 3339, 
          2996, 3425, 2078, 2997, 3426, 2079, 2998, 3427, 2080, 2999, 3428, 
          2081, 3000, 3429, 2082, 3001, 3430, 2083, 3340, 2257, 2084, 3341, 
          2258, 2085}], 
         Line3DBox[{2087, 3002, 3431, 2086, 3003, 3432, 2088, 3004, 3433, 
          2089, 3005, 3434, 2090, 3006, 3435, 2091, 3342, 2259, 2092, 3343, 
          3007, 3436, 2093, 3008, 3437, 2094, 3009, 3438, 2095, 3010, 3439, 
          2096, 3011, 3440, 2097, 3012, 3441, 2098, 3013, 3442, 2099, 3344, 
          2260, 2100}], 
         Line3DBox[{106, 855, 107, 856, 108, 857, 109, 858, 110, 859, 111, 
          860, 112, 861, 862, 113, 863, 114, 864, 115, 865, 116, 866, 117, 
          867, 118, 868, 119, 869, 120}], 
         Line3DBox[{2102, 3014, 3443, 2101, 3015, 3444, 2103, 3016, 3445, 
          2104, 3017, 3446, 2105, 3018, 3447, 2106, 3019, 3448, 2107, 3345, 
          3020, 3449, 2108, 3021, 3450, 2109, 3022, 3451, 2110, 3023, 3452, 
          2111, 3024, 3453, 2112, 3025, 3454, 2113, 3026, 3455, 2114, 3027, 
          3456, 2115}], 
         Line3DBox[{2117, 3346, 2261, 2116, 3347, 2262, 2118, 3348, 2263, 
          2119, 3349, 2264, 2120, 3350, 2265, 2121, 3351, 2266, 2122, 3352, 
          3028, 3457, 2123, 3353, 2267, 2124, 3354, 2268, 2125, 3355, 2269, 
          2126, 3356, 2270, 2127, 3357, 2271, 2128, 3358, 2272, 2129, 3359, 
          2273, 2130}], 
         Line3DBox[{2132, 3029, 3458, 2131, 3360, 2274, 2133, 3361, 2275, 
          2134, 3362, 2276, 2135, 3363, 2277, 2136, 3364, 2278, 2137, 3365, 
          3030, 3459, 2138, 3031, 3460, 2139, 3366, 2279, 2140, 3367, 2280, 
          2141, 3368, 2281, 2142, 3369, 2282, 2143, 3370, 2283, 2144, 3371, 
          2284, 2145}], 
         Line3DBox[{2147, 3032, 3461, 2146, 3033, 3462, 2148, 3372, 2285, 
          2149, 3373, 2286, 2150, 3374, 2287, 2151, 3375, 2288, 2152, 3376, 
          3034, 3463, 2153, 3035, 3464, 2154, 3036, 3465, 2155, 3377, 2289, 
          2156, 3378, 2290, 2157, 3379, 2291, 2158, 3380, 2292, 2159, 3381, 
          2293, 2160}], 
         Line3DBox[{2162, 3037, 3466, 2161, 3038, 3467, 2163, 3039, 3468, 
          2164, 3382, 2294, 2165, 3383, 2295, 2166, 3384, 2296, 2167, 3385, 
          3040, 3469, 2168, 3041, 3470, 2169, 3042, 3471, 2170, 3043, 3472, 
          2171, 3386, 2297, 2172, 3387, 2298, 2173, 3388, 2299, 2174, 3389, 
          2300, 2175}], 
         Line3DBox[{2177, 3044, 3473, 2176, 3045, 3474, 2178, 3046, 3475, 
          2179, 3047, 3476, 2180, 3390, 2301, 2181, 3391, 2302, 2182, 3392, 
          3048, 3477, 2183, 3049, 3478, 2184, 3050, 3479, 2185, 3051, 3480, 
          2186, 3052, 3481, 2187, 3393, 2303, 2188, 3394, 2304, 2189, 3395, 
          2305, 2190}], 
         Line3DBox[{2192, 3053, 3482, 2191, 3054, 3483, 2193, 3055, 3484, 
          2194, 3056, 3485, 2195, 3057, 3486, 2196, 3396, 2306, 2197, 3397, 
          3058, 3487, 2198, 3059, 3488, 2199, 3060, 3489, 2200, 3061, 3490, 
          2201, 3062, 3491, 2202, 3063, 3492, 2203, 3398, 2307, 2204, 3399, 
          2308, 2205}], 
         Line3DBox[{2219, 2316, 2315, 3507, 2218, 3504, 3075, 2217, 3503, 
          3074, 2216, 3502, 3073, 2215, 3501, 3072, 2214, 3500, 3071, 2213, 
          3499, 3070, 2212, 3498, 3069, 3400, 2211, 3497, 3068, 2210, 3496, 
          3067, 2209, 3495, 3066, 2208, 3494, 3065, 2207, 3493, 3064, 2206, 
          3506, 2313, 2312, 2314}], 
         Line3DBox[{2318, 2638, 3076, 3508, 2317, 3614, 2540, 2319, 3615, 
          2541, 2320, 3616, 2542, 2321, 3617, 2543, 2322, 3618, 2544, 2323, 
          3619, 2545, 2324, 3077, 3509, 2325, 3620, 2546, 2326, 3621, 2547, 
          2327, 3622, 2548, 2328, 3623, 2549, 2329, 3624, 2550, 2330, 3182, 
          3710, 2551, 2639}], 
         Line3DBox[{2332, 3078, 3510, 2331, 3079, 3511, 2333, 3625, 2552, 
          2334, 3626, 2553, 2335, 3627, 2554, 2336, 3628, 2555, 2337, 3629, 
          2556, 2338, 3080, 3512, 2339, 3081, 3513, 2340, 3630, 2557, 2341, 
          3631, 2558, 2342, 3632, 2559, 2343, 3633, 2560, 2344, 3634, 2561, 
          2345}], 
         Line3DBox[{2347, 3082, 3514, 2346, 3083, 3515, 2348, 3084, 3516, 
          2349, 3635, 2562, 2350, 3636, 2563, 2351, 3637, 2564, 2352, 3638, 
          2565, 2353, 3085, 3517, 2354, 3086, 3518, 2355, 3087, 3519, 2356, 
          3639, 2566, 2357, 3640, 2567, 2358, 3641, 2568, 2359, 3642, 2569, 
          2360}], 
         Line3DBox[{2362, 3088, 3520, 2361, 3089, 3521, 2363, 3090, 3522, 
          2364, 3091, 3523, 2365, 3643, 2570, 2366, 3644, 2571, 2367, 3645, 
          2572, 2368, 3092, 3524, 2369, 3093, 3525, 2370, 3094, 3526, 2371, 
          3095, 3527, 2372, 3646, 2573, 2373, 3647, 2574, 2374, 3648, 2575, 
          2375}], 
         Line3DBox[{2377, 3096, 3528, 2376, 3097, 3529, 2378, 3098, 3530, 
          2379, 3099, 3531, 2380, 3100, 3532, 2381, 3649, 2576, 2382, 3650, 
          2577, 2383, 3101, 3533, 2384, 3102, 3534, 2385, 3103, 3535, 2386, 
          3104, 3536, 2387, 3105, 3537, 2388, 3651, 2578, 2389, 3652, 2579, 
          2390}], 
         Line3DBox[{2392, 3106, 3538, 2391, 3107, 3539, 2393, 3108, 3540, 
          2394, 3109, 3541, 2395, 3110, 3542, 2396, 3183, 3711, 2640, 2397, 
          3653, 2580, 2398, 3111, 3543, 2399, 3112, 3544, 2400, 3113, 3545, 
          2401, 3114, 3546, 2402, 3115, 3547, 2403, 3116, 3548, 2404, 3654, 
          2581, 2405}], 
         Line3DBox[{2409, 3655, 2582, 2407, 3656, 2583, 2411, 3657, 2584, 
          2413, 3658, 2585, 2415, 3659, 2586, 2417, 3185, 3713, 2587, 2419, 
          3660, 2588, 2421, 3661, 2589, 2423, 3662, 2590, 2425, 3663, 2591, 
          2427, 3664, 2592, 2429, 3665, 2593, 2431, 3666, 2594, 2433, 3667, 
          2595, 2435}], 
         Line3DBox[{2434, 3561, 3129, 2432, 3560, 3128, 2430, 3559, 3127, 
          2428, 3558, 3126, 2426, 3557, 3125, 2424, 3556, 3124, 2422, 3555, 
          3123, 2420, 3554, 3122, 2418, 2641, 2645, 3712, 3184, 2416, 3553, 
          3121, 2414, 3552, 3120, 2412, 3551, 3119, 2410, 3550, 3118, 2406, 
          3549, 3117, 2408}], 
         Line3DBox[{2437, 3130, 3562, 2436, 3668, 2596, 2438, 3669, 2597, 
          2439, 3670, 2598, 2440, 3671, 2599, 2441, 3672, 2600, 2442, 3673, 
          2601, 2443, 3131, 3563, 2444, 3674, 2602, 2445, 3675, 2603, 2446, 
          3676, 2604, 2447, 3677, 2605, 2448, 3678, 2606, 2449, 3679, 2607, 
          2450}], 
         Line3DBox[{2452, 3132, 3564, 2451, 1507, 2453, 3680, 2608, 2454, 
          3681, 2609, 2455, 3682, 2610, 2456, 3683, 2611, 2457, 3684, 2612, 
          2458, 3133, 3565, 2459, 3134, 3566, 2460, 3685, 2613, 2461, 3686, 
          2614, 2462, 3687, 2615, 2463, 3688, 2616, 2464, 3689, 2617, 2465}], 
         
         Line3DBox[{2467, 3135, 3567, 2466, 3136, 3568, 2468, 1522, 2469, 
          3690, 2618, 2470, 3691, 2619, 2471, 3692, 2620, 2472, 3693, 2621, 
          2473, 3137, 3569, 2474, 3138, 3570, 2475, 3139, 3571, 2476, 3694, 
          2622, 2477, 3695, 2623, 2478, 3696, 2624, 2479, 3697, 2625, 2480}], 
         
         Line3DBox[{2482, 3140, 3572, 2481, 3141, 3573, 2483, 3142, 3574, 
          2484, 3143, 3575, 2485, 3698, 2626, 2486, 3699, 2627, 2487, 3700, 
          2628, 2488, 3144, 3576, 2489, 3145, 3577, 2490, 3146, 3578, 2491, 
          3147, 3579, 2492, 3701, 2629, 2493, 3702, 2630, 2494, 3703, 2631, 
          2495}], 
         Line3DBox[{2497, 3148, 3580, 2496, 3149, 3581, 2498, 3150, 3582, 
          2499, 3151, 3583, 2500, 3152, 3584, 2501, 3704, 2632, 2502, 3705, 
          2633, 2503, 3153, 3585, 2504, 3154, 3586, 2505, 3155, 3587, 2506, 
          3156, 3588, 2507, 3157, 3589, 2508, 3706, 2634, 2509, 3707, 2635, 
          2510}], 
         Line3DBox[{2512, 3158, 3590, 2511, 3159, 3591, 2513, 3160, 3592, 
          2514, 3161, 3593, 2515, 3162, 3594, 2516, 3163, 3595, 2517, 3708, 
          2636, 2518, 3164, 3596, 2519, 3165, 3597, 2520, 3166, 3598, 2521, 
          3167, 3599, 2522, 3168, 3600, 2523, 3169, 3601, 2524, 3709, 2637, 
          2525}], 
         Line3DBox[{2539, 2644, 3715, 3187, 2538, 3613, 3181, 2537, 3612, 
          3180, 2536, 3611, 3179, 2535, 3610, 3178, 2534, 3609, 3177, 2533, 
          3608, 3176, 2532, 3607, 3175, 2531, 3606, 3174, 2530, 3605, 3173, 
          2529, 3604, 3172, 2528, 3603, 3171, 2527, 3602, 3170, 2526, 3186, 
          3714, 2642, 2643}], 
         Line3DBox[{2647, 2967, 3188, 3716, 2646, 3824, 2869, 2648, 3825, 
          2870, 2649, 3826, 2871, 2650, 3827, 2872, 2651, 3828, 2873, 2652, 
          3829, 2874, 2653, 3189, 3717, 2654, 3830, 2875, 2655, 3831, 2876, 
          2656, 3832, 2877, 2657, 3833, 2878, 2658, 3834, 2879, 2659, 3296, 
          3921, 2880, 2968}], 
         Line3DBox[{2661, 3190, 3718, 2660, 3191, 3719, 2662, 3835, 2881, 
          2663, 3836, 2882, 2664, 3837, 2883, 2665, 3838, 2884, 2666, 3839, 
          2885, 2667, 3192, 3720, 2668, 3193, 3721, 2669, 3840, 2886, 2670, 
          3841, 2887, 2671, 3842, 2888, 2672, 3843, 2889, 2673, 3844, 2890, 
          2674}], 
         Line3DBox[{2676, 3194, 3722, 2675, 3195, 3723, 2677, 3196, 3724, 
          2678, 3845, 2891, 2679, 3846, 2892, 2680, 3847, 2893, 2681, 3848, 
          2894, 2682, 3197, 3725, 2683, 3198, 3726, 2684, 3199, 3727, 2685, 
          3849, 2895, 2686, 3850, 2896, 2687, 3851, 2897, 2688, 3852, 2898, 
          2689}], 
         Line3DBox[{2691, 3200, 3728, 2690, 3201, 3729, 2692, 3202, 3730, 
          2693, 3203, 3731, 2694, 3853, 2899, 2695, 3854, 2900, 2696, 3855, 
          2901, 2697, 3204, 3732, 2698, 3205, 3733, 2699, 3206, 3734, 2700, 
          3207, 3735, 2701, 3856, 2902, 2702, 3857, 2903, 2703, 3858, 2904, 
          2704}], 
         Line3DBox[{2706, 3208, 3736, 2705, 3209, 3737, 2707, 3210, 3738, 
          2708, 3211, 3739, 2709, 3212, 3740, 2710, 3859, 2905, 2711, 3860, 
          2906, 2712, 3213, 3741, 2713, 3214, 3742, 2714, 3215, 3743, 2715, 
          3216, 3744, 2716, 3217, 3745, 2717, 3861, 2907, 2718, 3862, 2908, 
          2719}], 
         Line3DBox[{2721, 3218, 3746, 2720, 3219, 3747, 2722, 3220, 3748, 
          2723, 3221, 3749, 2724, 3222, 3750, 2725, 3223, 3751, 2726, 3863, 
          2909, 2727, 3224, 3752, 2728, 3225, 3753, 2729, 3226, 3754, 2730, 
          3227, 3755, 2731, 3228, 3756, 2732, 3229, 3757, 2733, 3864, 2910, 
          2734}], 
         Line3DBox[{2738, 3865, 2911, 2736, 3866, 2912, 2740, 3867, 2913, 
          2742, 3868, 2914, 2744, 3869, 2915, 2746, 3870, 2916, 2748, 3871, 
          2917, 2750, 3872, 2918, 2752, 3873, 2919, 2754, 3874, 2920, 2756, 
          3875, 2921, 2758, 3876, 2922, 2760, 3877, 2923, 2762, 3878, 2924, 
          2764}], 
         Line3DBox[{2763, 3771, 3243, 2761, 3770, 3242, 2759, 3769, 3241, 
          2757, 3768, 3240, 2755, 3767, 3239, 2753, 3766, 3238, 2751, 3765, 
          3237, 2749, 3764, 3236, 2747, 3763, 3235, 2745, 3762, 3234, 2743, 
          3761, 3233, 2741, 3760, 3232, 2739, 3759, 3231, 2735, 3758, 3230, 
          2737}], 
         Line3DBox[{2766, 3244, 3772, 2765, 3879, 2925, 2767, 3880, 2926, 
          2768, 3881, 2927, 2769, 3882, 2928, 2770, 3883, 2929, 2771, 3884, 
          2930, 2772, 3245, 3773, 2773, 3885, 2931, 2774, 3886, 2932, 2775, 
          3887, 2933, 2776, 3888, 2934, 2777, 3889, 2935, 2778, 3890, 2936, 
          2779}], 
         Line3DBox[{2781, 3246, 3774, 2780, 1922, 2782, 3891, 2937, 2783, 
          3892, 2938, 2784, 3893, 2939, 2785, 3894, 2940, 2786, 3895, 2941, 
          2787, 3247, 3775, 2788, 3248, 3776, 2789, 3896, 2942, 2790, 3897, 
          2943, 2791, 3898, 2944, 2792, 3899, 2945, 2793, 3900, 2946, 2794}], 
         
         Line3DBox[{2796, 3249, 3777, 2795, 3250, 3778, 2797, 1937, 2798, 
          3901, 2947, 2799, 3902, 2948, 2800, 3903, 2949, 2801, 3904, 2950, 
          2802, 3251, 3779, 2803, 3252, 3780, 2804, 3253, 3781, 2805, 3905, 
          2951, 2806, 3906, 2952, 2807, 3907, 2953, 2808, 3908, 2954, 2809}], 
         
         Line3DBox[{2811, 3254, 3782, 2810, 3255, 3783, 2812, 3256, 3784, 
          2813, 3257, 3785, 2814, 3909, 2955, 2815, 3910, 2956, 2816, 3911, 
          2957, 2817, 3258, 3786, 2818, 3259, 3787, 2819, 3260, 3788, 2820, 
          3261, 3789, 2821, 3912, 2958, 2822, 3913, 2959, 2823, 3914, 2960, 
          2824}], 
         Line3DBox[{2826, 3262, 3790, 2825, 3263, 3791, 2827, 3264, 3792, 
          2828, 3265, 3793, 2829, 3266, 3794, 2830, 3915, 2961, 2831, 3916, 
          2962, 2832, 3267, 3795, 2833, 3268, 3796, 2834, 3269, 3797, 2835, 
          3270, 3798, 2836, 3271, 3799, 2837, 3917, 2963, 2838, 3918, 2964, 
          2839}], 
         Line3DBox[{2841, 3272, 3800, 2840, 3273, 3801, 2842, 3274, 3802, 
          2843, 3275, 3803, 2844, 3276, 3804, 2845, 3277, 3805, 2846, 3919, 
          2965, 2847, 3278, 3806, 2848, 3279, 3807, 2849, 3280, 3808, 2850, 
          3281, 3809, 2851, 3282, 3810, 2852, 3283, 3811, 2853, 3920, 2966, 
          2854}], 
         Line3DBox[{2868, 2971, 3923, 3298, 2867, 3823, 3295, 2866, 3822, 
          3294, 2865, 3821, 3293, 2864, 3820, 3292, 2863, 3819, 3291, 2862, 
          3818, 3290, 2861, 3817, 3289, 2860, 3816, 3288, 2859, 3815, 3287, 
          2858, 3814, 3286, 2857, 3813, 3285, 2856, 3812, 3284, 2855, 3297, 
          3922, 2969, 2970}]}, {
         GrayLevel[0.2], 
         Line3DBox[{752, 975, 3299, 753, 989, 3310, 781, 3408, 1004, 796, 
          3414, 1019, 811, 3422, 1034, 826, 3432, 1049, 841, 3444, 1064, 856, 
          1079, 3347, 871, 1094, 3360, 886, 3462, 1109, 901, 3467, 1124, 916, 
          3474, 1139, 931, 3483, 1154, 946, 3493, 1169, 961}], 
         Line3DBox[{754, 976, 3300, 755, 990, 3311, 782, 1005, 3321, 797, 
          3415, 1020, 812, 3423, 1035, 827, 3433, 1050, 842, 3445, 1065, 857, 
          1080, 3348, 872, 1095, 3361, 887, 1110, 3372, 902, 3468, 1125, 917, 
          3475, 1140, 932, 3484, 1155, 947, 3494, 1170, 962}], 
         Line3DBox[{756, 977, 3301, 757, 991, 3312, 783, 1006, 3322, 798, 
          1021, 3330, 813, 3424, 1036, 828, 3434, 1051, 843, 3446, 1066, 858, 
          1081, 3349, 873, 1096, 3362, 888, 1111, 3373, 903, 1126, 3382, 918, 
          3476, 1141, 933, 3485, 1156, 948, 3495, 1171, 963}], 
         Line3DBox[{758, 978, 3302, 759, 992, 3313, 784, 1007, 3323, 799, 
          1022, 3331, 814, 1037, 3337, 829, 3435, 1052, 844, 3447, 1067, 859, 
          1082, 3350, 874, 1097, 3363, 889, 1112, 3374, 904, 1127, 3383, 919, 
          1142, 3390, 934, 3486, 1157, 949, 3496, 1172, 964}], 
         Line3DBox[{760, 979, 3303, 761, 993, 3314, 785, 1008, 3324, 800, 
          1023, 3332, 815, 1038, 3338, 830, 1053, 3342, 845, 3448, 1068, 860, 
          1083, 3351, 875, 1098, 3364, 890, 1113, 3375, 905, 1128, 3384, 920, 
          1143, 3391, 935, 1158, 3396, 950, 3497, 1173, 965}], 
         Line3DBox[{762, 980, 3304, 764, 994, 3315, 786, 1009, 3325, 801, 
          1024, 3333, 816, 1039, 3339, 831, 1054, 3343, 846, 1069, 3345, 861, 
          1084, 3352, 876, 1099, 3365, 891, 1114, 3376, 906, 1129, 3385, 921, 
          1144, 3392, 936, 1159, 3397, 951, 1174, 3400, 966}], 
         Line3DBox[{766, 3402, 982, 767, 3405, 996, 788, 3410, 1011, 803, 
          3417, 1026, 818, 3426, 1041, 833, 3437, 1056, 848, 3450, 1071, 863, 
          1086, 3353, 878, 3460, 1101, 893, 3464, 1116, 908, 3470, 1131, 923, 
          3478, 1146, 938, 3488, 1161, 953, 3499, 1176, 968}], 
         Line3DBox[{768, 983, 3305, 769, 3406, 997, 789, 3411, 1012, 804, 
          3418, 1027, 819, 3427, 1042, 834, 3438, 1057, 849, 3451, 1072, 864, 
          1087, 3354, 879, 1102, 3366, 894, 3465, 1117, 909, 3471, 1132, 924, 
          3479, 1147, 939, 3489, 1162, 954, 3500, 1177, 969}], 
         Line3DBox[{770, 984, 3306, 771, 998, 3316, 790, 3412, 1013, 805, 
          3419, 1028, 820, 3428, 1043, 835, 3439, 1058, 850, 3452, 1073, 865, 
          1088, 3355, 880, 1103, 3367, 895, 1118, 3377, 910, 3472, 1133, 925, 
          3480, 1148, 940, 3490, 1163, 955, 3501, 1178, 970}], 
         Line3DBox[{772, 985, 3307, 773, 999, 3317, 791, 1014, 3326, 806, 
          3420, 1029, 821, 3429, 1044, 836, 3440, 1059, 851, 3453, 1074, 866, 
          1089, 3356, 881, 1104, 3368, 896, 1119, 3378, 911, 1134, 3386, 926, 
          3481, 1149, 941, 3491, 1164, 956, 3502, 1179, 971}], 
         Line3DBox[{774, 986, 3308, 775, 1000, 3318, 792, 1015, 3327, 807, 
          1030, 3334, 822, 3430, 1045, 837, 3441, 1060, 852, 3454, 1075, 867, 
          1090, 3357, 882, 1105, 3369, 897, 1120, 3379, 912, 1135, 3387, 927, 
          1150, 3393, 942, 3492, 1165, 957, 3503, 1180, 972}], 
         Line3DBox[{776, 987, 3309, 777, 1001, 3319, 793, 1016, 3328, 808, 
          1031, 3335, 823, 1046, 3340, 838, 3442, 1061, 853, 3455, 1076, 868, 
          1091, 3358, 883, 1106, 3370, 898, 1121, 3380, 913, 1136, 3388, 928, 
          1151, 3394, 943, 1166, 3398, 958, 3504, 1181, 973}], 
         Line3DBox[{778, 1183, 3505, 1184, 779, 1002, 3320, 794, 1017, 3329, 
          809, 1032, 3336, 824, 1047, 3341, 839, 1062, 3344, 854, 3456, 1077, 
          869, 1092, 3359, 884, 1107, 3371, 899, 1122, 3381, 914, 1137, 3389, 
          929, 1152, 3395, 944, 1167, 3399, 959, 1186, 3507, 1187, 1188}], 
         Line3DBox[{960, 1168, 3506, 1185, 945, 1153, 3482, 930, 1138, 3473, 
          915, 1123, 3466, 900, 1108, 3461, 885, 1093, 3458, 870, 3346, 1078, 
          855, 1063, 3443, 840, 1048, 3431, 825, 1033, 3421, 810, 1018, 3413, 
          795, 1003, 3407, 780, 988, 3403, 751, 974, 1182, 1189}], 
         Line3DBox[{967, 1175, 3498, 952, 1160, 3487, 937, 1145, 3477, 922, 
          1130, 3469, 907, 1115, 3463, 892, 1100, 3459, 877, 1085, 3457, 862, 
          1070, 3449, 847, 1055, 3436, 832, 1040, 3425, 817, 1025, 3416, 802, 
          1010, 3409, 787, 995, 3404, 765, 981, 3401, 763}], 
         Line3DBox[{1191, 1398, 3614, 1192, 3511, 1411, 1218, 3515, 1425, 
          1232, 3521, 1439, 1246, 3529, 1453, 1260, 3539, 1467, 1274, 3550, 
          1480, 3656, 1287, 1493, 3668, 1301, 1507, 1315, 3568, 1521, 1329, 
          3573, 1535, 1343, 3581, 1549, 1357, 3591, 1563, 1371, 3602, 1577, 
          1385}], 
         Line3DBox[{1193, 1399, 3615, 1194, 1412, 3625, 1219, 3516, 1426, 
          1233, 3522, 1440, 1247, 3530, 1454, 1261, 3540, 1468, 1275, 3551, 
          1481, 3657, 1288, 1494, 3669, 1302, 1508, 3680, 1316, 1522, 1330, 
          3574, 1536, 1344, 3582, 1550, 1358, 3592, 1564, 1372, 3603, 1578, 
          1386}], 
         Line3DBox[{1195, 1400, 3616, 1196, 1413, 3626, 1220, 1427, 3635, 
          1234, 3523, 1441, 1248, 3531, 1455, 1262, 3541, 1469, 1276, 3552, 
          1482, 3658, 1289, 1495, 3670, 1303, 1509, 3681, 1317, 1523, 3690, 
          1331, 3575, 1537, 1345, 3583, 1551, 1359, 3593, 1565, 1373, 3604, 
          1579, 1387}], 
         Line3DBox[{1197, 1401, 3617, 1198, 1414, 3627, 1221, 1428, 3636, 
          1235, 1442, 3643, 1249, 3532, 1456, 1263, 3542, 1470, 1277, 3553, 
          1483, 3659, 1290, 1496, 3671, 1304, 1510, 3682, 1318, 1524, 3691, 
          1332, 1538, 3698, 1346, 3584, 1552, 1360, 3594, 1566, 1374, 3605, 
          1580, 1388}], 
         Line3DBox[{1199, 1402, 3618, 1200, 1415, 3628, 1222, 1429, 3637, 
          1236, 1443, 3644, 1250, 1457, 3649, 1264, 3711, 1592, 1593, 1601, 
          3712, 1594, 1595, 3713, 1291, 1497, 3672, 1305, 1511, 3683, 1319, 
          1525, 3692, 1333, 1539, 3699, 1347, 1553, 3704, 1361, 3595, 1567, 
          1375, 3606, 1581, 1389}], 
         Line3DBox[{1201, 1403, 3619, 1202, 1416, 3629, 1223, 1430, 3638, 
          1237, 1444, 3645, 1251, 1458, 3650, 1265, 1471, 3653, 1278, 3554, 
          1484, 3660, 1292, 1498, 3673, 1306, 1512, 3684, 1320, 1526, 3693, 
          1334, 1540, 3700, 1348, 1554, 3705, 1362, 1568, 3708, 1376, 3607, 
          1582, 1390}], 
         Line3DBox[{257, 2324, 272, 2338, 287, 2353, 302, 2368, 317, 2383, 
          332, 2398, 347, 2420, 2421, 362, 2443, 377, 2458, 392, 2473, 407, 
          2488, 422, 2503, 437, 2518, 452, 2532, 467}], 
         Line3DBox[{1203, 3509, 1404, 1204, 3512, 1417, 1224, 3517, 1431, 
          1238, 3524, 1445, 1252, 3533, 1459, 1266, 3543, 1472, 1279, 3555, 
          1485, 3661, 1293, 3563, 1499, 1307, 3565, 1513, 1321, 3569, 1527, 
          1335, 3576, 1541, 1349, 3585, 1555, 1363, 3596, 1569, 1377, 3608, 
          1583, 1391}], 
         Line3DBox[{1205, 1405, 3620, 1206, 3513, 1418, 1225, 3518, 1432, 
          1239, 3525, 1446, 1253, 3534, 1460, 1267, 3544, 1473, 1280, 3556, 
          1486, 3662, 1294, 1500, 3674, 1308, 3566, 1514, 1322, 3570, 1528, 
          1336, 3577, 1542, 1350, 3586, 1556, 1364, 3597, 1570, 1378, 3609, 
          1584, 1392}], 
         Line3DBox[{1207, 1406, 3621, 1208, 1419, 3630, 1226, 3519, 1433, 
          1240, 3526, 1447, 1254, 3535, 1461, 1268, 3545, 1474, 1281, 3557, 
          1487, 3663, 1295, 1501, 3675, 1309, 1515, 3685, 1323, 3571, 1529, 
          1337, 3578, 1543, 1351, 3587, 1557, 1365, 3598, 1571, 1379, 3610, 
          1585, 1393}], 
         Line3DBox[{1209, 1407, 3622, 1210, 1420, 3631, 1227, 1434, 3639, 
          1241, 3527, 1448, 1255, 3536, 1462, 1269, 3546, 1475, 1282, 3558, 
          1488, 3664, 1296, 1502, 3676, 1310, 1516, 3686, 1324, 1530, 3694, 
          1338, 3579, 1544, 1352, 3588, 1558, 1366, 3599, 1572, 1380, 3611, 
          1586, 1394}], 
         Line3DBox[{1211, 1408, 3623, 1212, 1421, 3632, 1228, 1435, 3640, 
          1242, 1449, 3646, 1256, 3537, 1463, 1270, 3547, 1476, 1283, 3559, 
          1489, 3665, 1297, 1503, 3677, 1311, 1517, 3687, 1325, 1531, 3695, 
          1339, 1545, 3701, 1353, 3589, 1559, 1367, 3600, 1573, 1381, 3612, 
          1587, 1395}], 
         Line3DBox[{1213, 1409, 3624, 1214, 1422, 3633, 1229, 1436, 3641, 
          1243, 1450, 3647, 1257, 1464, 3651, 1271, 3548, 1477, 1284, 3560, 
          1490, 3666, 1298, 1504, 3678, 1312, 1518, 3688, 1326, 1532, 3696, 
          1340, 1546, 3702, 1354, 1560, 3706, 1368, 3601, 1574, 1382, 3613, 
          1588, 1396}], 
         Line3DBox[{1215, 1590, 1591, 3710, 1216, 1423, 3634, 1230, 1437, 
          3642, 1244, 1451, 3648, 1258, 1465, 3652, 1272, 1478, 3654, 1285, 
          3561, 1491, 3667, 1299, 1505, 3679, 1313, 1519, 3689, 1327, 1533, 
          3697, 1341, 1547, 3703, 1355, 1561, 3707, 1369, 1575, 3709, 1383, 
          3715, 1597, 1598, 1599}], 
         Line3DBox[{1384, 1576, 1596, 3714, 1370, 1562, 3590, 1356, 1548, 
          3580, 1342, 1534, 3572, 1328, 1520, 3567, 1314, 1506, 3564, 1300, 
          1492, 3562, 1286, 3655, 1479, 3549, 1273, 1466, 3538, 1259, 1452, 
          3528, 1245, 1438, 3520, 1231, 1424, 3514, 1217, 1410, 3510, 1190, 
          1397, 3508, 1589, 1600}], 
         Line3DBox[{1603, 1811, 3824, 1604, 3719, 1824, 1630, 3723, 1838, 
          1644, 3729, 1852, 1658, 3737, 1866, 1672, 3747, 1880, 1686, 3759, 
          1894, 3866, 1700, 1908, 3879, 1714, 1922, 1728, 3778, 1936, 1742, 
          3783, 1950, 1756, 3791, 1964, 1770, 3801, 1978, 1784, 3812, 1992, 
          1798}], 
         Line3DBox[{1605, 1812, 3825, 1606, 1825, 3835, 1631, 3724, 1839, 
          1645, 3730, 1853, 1659, 3738, 1867, 1673, 3748, 1881, 1687, 3760, 
          1895, 3867, 1701, 1909, 3880, 1715, 1923, 3891, 1729, 1937, 1743, 
          3784, 1951, 1757, 3792, 1965, 1771, 3802, 1979, 1785, 3813, 1993, 
          1799}], 
         Line3DBox[{1607, 1813, 3826, 1608, 1826, 3836, 1632, 1840, 3845, 
          1646, 3731, 1854, 1660, 3739, 1868, 1674, 3749, 1882, 1688, 3761, 
          1896, 3868, 1702, 1910, 3881, 1716, 1924, 3892, 1730, 1938, 3901, 
          1744, 3785, 1952, 1758, 3793, 1966, 1772, 3803, 1980, 1786, 3814, 
          1994, 1800}], 
         Line3DBox[{1609, 1814, 3827, 1610, 1827, 3837, 1633, 1841, 3846, 
          1647, 1855, 3853, 1661, 3740, 1869, 1675, 3750, 1883, 1689, 3762, 
          1897, 3869, 1703, 1911, 3882, 1717, 1925, 3893, 1731, 1939, 3902, 
          1745, 1953, 3909, 1759, 3794, 1967, 1773, 3804, 1981, 1787, 3815, 
          1995, 1801}], 
         Line3DBox[{1611, 1815, 3828, 1612, 1828, 3838, 1634, 1842, 3847, 
          1648, 1856, 3854, 1662, 1870, 3859, 1676, 3751, 1884, 1690, 3763, 
          1898, 3870, 1704, 1912, 3883, 1718, 1926, 3894, 1732, 1940, 3903, 
          1746, 1954, 3910, 1760, 1968, 3915, 1774, 3805, 1982, 1788, 3816, 
          1996, 1802}], 
         Line3DBox[{1613, 1816, 3829, 1614, 1829, 3839, 1635, 1843, 3848, 
          1649, 1857, 3855, 1663, 1871, 3860, 1677, 1885, 3863, 1691, 3764, 
          1899, 3871, 1705, 1913, 3884, 1719, 1927, 3895, 1733, 1941, 3904, 
          1747, 1955, 3911, 1761, 1969, 3916, 1775, 1983, 3919, 1789, 3817, 
          1997, 1803}], 
         Line3DBox[{509, 2653, 524, 2667, 539, 2682, 554, 2697, 569, 2712, 
          584, 2727, 599, 2749, 2750, 614, 2772, 629, 2787, 644, 2802, 659, 
          2817, 674, 2832, 689, 2847, 704, 2861, 719}], 
         Line3DBox[{1615, 3717, 1817, 1616, 3720, 1830, 1636, 3725, 1844, 
          1650, 3732, 1858, 1664, 3741, 1872, 1678, 3752, 1886, 1692, 3765, 
          1900, 3872, 1706, 3773, 1914, 1720, 3775, 1928, 1734, 3779, 1942, 
          1748, 3786, 1956, 1762, 3795, 1970, 1776, 3806, 1984, 1790, 3818, 
          1998, 1804}], 
         Line3DBox[{1617, 1818, 3830, 1618, 3721, 1831, 1637, 3726, 1845, 
          1651, 3733, 1859, 1665, 3742, 1873, 1679, 3753, 1887, 1693, 3766, 
          1901, 3873, 1707, 1915, 3885, 1721, 3776, 1929, 1735, 3780, 1943, 
          1749, 3787, 1957, 1763, 3796, 1971, 1777, 3807, 1985, 1791, 3819, 
          1999, 1805}], 
         Line3DBox[{1619, 1819, 3831, 1620, 1832, 3840, 1638, 3727, 1846, 
          1652, 3734, 1860, 1666, 3743, 1874, 1680, 3754, 1888, 1694, 3767, 
          1902, 3874, 1708, 1916, 3886, 1722, 1930, 3896, 1736, 3781, 1944, 
          1750, 3788, 1958, 1764, 3797, 1972, 1778, 3808, 1986, 1792, 3820, 
          2000, 1806}], 
         Line3DBox[{1621, 1820, 3832, 1622, 1833, 3841, 1639, 1847, 3849, 
          1653, 3735, 1861, 1667, 3744, 1875, 1681, 3755, 1889, 1695, 3768, 
          1903, 3875, 1709, 1917, 3887, 1723, 1931, 3897, 1737, 1945, 3905, 
          1751, 3789, 1959, 1765, 3798, 1973, 1779, 3809, 1987, 1793, 3821, 
          2001, 1807}], 
         Line3DBox[{1623, 1821, 3833, 1624, 1834, 3842, 1640, 1848, 3850, 
          1654, 1862, 3856, 1668, 3745, 1876, 1682, 3756, 1890, 1696, 3769, 
          1904, 3876, 1710, 1918, 3888, 1724, 1932, 3898, 1738, 1946, 3906, 
          1752, 1960, 3912, 1766, 3799, 1974, 1780, 3810, 1988, 1794, 3822, 
          2002, 1808}], 
         Line3DBox[{1625, 1822, 3834, 1626, 1835, 3843, 1641, 1849, 3851, 
          1655, 1863, 3857, 1669, 1877, 3861, 1683, 3757, 1891, 1697, 3770, 
          1905, 3877, 1711, 1919, 3889, 1725, 1933, 3899, 1739, 1947, 3907, 
          1753, 1961, 3913, 1767, 1975, 3917, 1781, 3811, 1989, 1795, 3823, 
          2003, 1809}], 
         Line3DBox[{1627, 2005, 2006, 3921, 1628, 1836, 3844, 1642, 1850, 
          3852, 1656, 1864, 3858, 1670, 1878, 3862, 1684, 1892, 3864, 1698, 
          3771, 1906, 3878, 1712, 1920, 3890, 1726, 1934, 3900, 1740, 1948, 
          3908, 1754, 1962, 3914, 1768, 1976, 3918, 1782, 1990, 3920, 1796, 
          3923, 2008, 2009, 2010}], 
         Line3DBox[{1797, 1991, 2007, 3922, 1783, 1977, 3800, 1769, 1963, 
          3790, 1755, 1949, 3782, 1741, 1935, 3777, 1727, 1921, 3774, 1713, 
          1907, 3772, 1699, 3865, 1893, 3758, 1685, 1879, 3746, 1671, 1865, 
          3736, 1657, 1851, 3728, 1643, 1837, 3722, 1629, 1823, 3718, 1602, 
          1810, 3716, 2004, 2011}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1:eJxsXHk4Ff8XFrKUKFosWVJpUyRKceeDiFKSbElFlDUJJalIlrJkyZJQ9i27
spsPIrSIrGmzR9JVlCXc38zc63a/nl9/VPc85zn3Pe+cOfOeM3Nn3dmLOueY
mZiYjvMwMbEwEX9mmoOty6/vV7q9IcqknGoaBdhf5IamuvK43aNqM/xVjPb9
l66sQRu4WTYm+KxE5+2zFMpg7xZ9tN2y4kwTyRCdoeB/yED5iglF3c4T3dnH
ZnrzVQBaMke1D6014SXbxqGawo4hG3ny0Xt9VPuk0KO/AbIp6E43vguupvWo
rz7VvvlPWnp6ujjp4OZkLySiCQ16OUfYkxLKmO7JpiCybvf/43829RMzFh9Z
GD9q7YO3GB5Ets/7P3js7+qkY/iRhfiT1Ybb7a+sQeK4bwsz5pu+3/U0xg/p
8u4chJEf72cZUhifpP/D54H27oLyUHh0pYpnKoPdvYlyZhUaXHe5kVK4hB5/
muIW3y5rjjLnR5jtP3oa/UPD83iKcvPS6gRUeimf+ZL+OFTrN9WuLtd16fyD
JpTT8Qy7+1wrmj4wQ9hrs0tmkll+oBysSg9t18+gh+wrCPvTU1sPCMyModcV
bpQZlPHCDuY7c7hd7s4p7FBeJKnKi845TgpAeeIzGRQe+XUQ80cW+r8egN1Y
fGRh/PAIM3UMDxKs/4CNEc+7fDYlDD9iv6nzFCP+HR0jB7B8kYX5Lsvarofx
g3QysZYz8uOk4RrW1l1Aei1ty/xfPplEHqZN4J8LQsT66XYKxe3YQ0F9FAua
Y8Kmjs7R4r+dojgh/YmoyiRlyT2Rh6jnH6p9amxq2cryXlQu4M/Ri+2fUSOZ
P4RdYJVO9SIZXhgpbrFxzTgvnMs9QvBznOnBnwxOKbheFwoHAnk4My7zGrd3
3fxBCUyXhUtHF91W2qgNU2Ziu+Ywu9El9gO6ermkTy35aVqm+rDRbt1S3L58
Pz9rULosYKP5x9D8TZ5OtGHxwT5afMHf1Pg/ghdHYnjAI3ELIRwPWx4Vz0AW
8oavvBfB8JMY8XP4a6zE8kWwfKcCGPJ9dXa8OlJQH8E+5DLyc/Dw4LnItAkS
RuIzRj6xv05nm27Hj8fLuJl/58V+CmWpkoMfakah6Ml9uYJuoMUp0ZtdJfrr
PYr9u1T0Vz3qXUCtBxdp909nPPhhpGLXy4l4biiZVDaD28t2vvFpjDgADU7X
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
MNNYJIbzcO2h64Mly9yh2A6epriydCDO5y8cMk4GDaHFlMTuYOCqnX3ynXow
6Cp47heG9dv7ZalMmY8Ogm2o55j9XT3w0X+FP64fWML8N7HtXQS8dmz5XvGe
BWzWO07gX2W95vL7sw5IytSDr6FbrJEuWl3lLRa6pcgaRtopL7rj7/i/PU/h
hZOHzpfZKoreHnv5+bYhYx92vpwoU3rk4rTCX3ZuBp6Vzj+7+qSsTmW19KIv
voz9hFQY2l4+dORi/9Vb5fT4bn0U+cxXBWiZ6A2fqqYExPw9TYeks5Jneg7A
tE9BaKeqEtAw6N6H25urpUoLj3nCAHF3P+U1QaDTd7Y1DKvzFaeZ4xCfJHip
Za/xzSVXwKPo48PxeP9cfmjx4yMJ4LnkbF+AVyxs3Xdw9SB2vXtosulO4sVg
wFrCb3bIwxxyhQma1WNxBkUdk0h/NoJAUoh36YV14GRG4Rj+val6flkK7CWI
jVRGYPricoQ1joozpc7i/eOaTci6pVPmfR3/9MNf/rUiifxBpKjPT3/G8N+n
55u3OGrp49u5irlBNfsTfmfS+cHmlOdIrJfC0JG3wu8HrjPyuWrTzcCS8PDw
SMXqa/sY6pmNRZm9LDbWROo+/ySDP1MIy/SucmGR0wGDt7Yy9J+Kd3rufKim
5isO+GkFHaeFztpPdd1Z6PNK3ldv6nOQ61+oeWVGef75HrUHHlv9xpv8fgc4
EXSoAbc/3N3zSxXchtd0jOtbZHxBgcKl2gmMt8SBaw+WHL8ONnTY5GtmPwJX
HdpXiGH9mVs0zizU0hrknU/1V+E4D7zNUj1HsDjCSb1I+Y9x5OCv0bCter3I
vhefie8tHYxvZjoljQwPD9vmpq+i4xxha5YByFZScXGx5Nuf6+h5qY/4nirb
BhQ9PJiNPOwO0PksMvHbaORoqHD16qRbssMpBn4qEjO/bd/HuWQJp9JWSQY+
Kz671ToVY/2g4wfFei8D/xwpz35gc7iSa4b2IIO/UkzQRSFM/w3u51MWYqhz
JV9tuBLTMSY8P5+toOOsuxRdIXz2L2a3HL9D/vMPP6r1rvRgFJr7F9Z458Qh
spNU/pfw107cyRpAo04k6XdTmMDWwmzCbu3REeeW1YWI2mwYUJnkA7IfbYnr
rEDPEZ58/rfIKfVoRcP0j4h/B1X/uAh2N/gmGSKzFOdH6PoT9D35O7WIWEEh
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
ScmPuJ3F6sUADbXAzfAS0IBU7l7Vvw2DL+drRGJ20TDN/QbNt4DOvA5Lt/8F
GPNqUALvt9JSoTSS/eawJk1EvG4xCmh475pWwX+/e/9abaXPD1R5RQjpzvmC
gYjzJPjnumRC15o7UkCP07bPK1IZ5LORWePHKT1d8VL15gqi9eLHaZHuNeR0
7KaeRi4rfEIlyRFpTuAvF/5HT1v8u7bw0DpRLord7IXJP3oah4+CxooRWVO0
iceZiH/0H9L4CxFj64LNv1MPGbOM/aP/kOiPWF+jQPc4lYvVlG3rP693P+9T
Y6tBl3V6DlRUlyDkI1s63rBe1OFGRahWNGQxzyYN8liLrhO+5wr9ZWPZfwO2
kg4JpFfcAlZUT/ZXYvmqc/1zSrdtPuwpKok4guGarsTBAodfOMClJtPu8DEA
jJ8fF6qKMIHiqEQo/nxvLkobM59Ad7Bx/XqDq5oSlHI8443XkZRQ2qPvrlIB
UdHblg+PUILUTuXN83kiShpldpcg7gJFaSXkZYjClp6m7b/wZncdK5KxZBTA
em5bT/s7xS+4eiRCzkYqfnq2cFtPu6N1Ts/gbrnsvi+aQ/P/6GkkJE3twW++
PV5MqDrj8mnsn3tqng50XGNsoqQcLzJcpCe239ioeX/Gh6c5OSWflmeJjdi/
G8uk4rARJapx5qtyXvr2/6GPrua2LjjcQ7WvbDz3uPMAebq1f2b3F4c3Z7+I
wGmTxhb3k3zg4/uhL3i7lxrZr68DQdBdJrUv5ns4oHUQChTD7FdfcMXlumgC
q1VmK6TJBZTqAA8837TyoZJsuqwBdhXTFjnsUQFFB1Tf43HgDI9TNovdKPJW
zWi+ZaMD+bSlp1l/LO8nMeNA+Nn03av+0dOEyV8FTtpxyPmnzP1Q/EdPAyf5
VDotJGQLvgS3ff5HT9vYCLUU8rWoF2+WczY8b068b+ioebNzl/6itLwIx7x/
yG/iPpkX3uyDfZfUZNnWLg62lOsQeeWPqlDRF+/yYcrZWrHdN59DsgSxgucu
WN1UuXckcqoRGqlV/C0JeArN5w75v7PB4qdXdDQrvxk2MDwMiaSsAJGurK0t
DRhOAOGlN2YK4S2N44JnDevB8p0jl3e+xeomx8vVJ26kTYcXAsRcaRaJ6wX3
3KYy1EBHBtXyWftDb0C0FxtUDY8q9ktVIzWugw8/EO+7EdRTv3rAKV5qZLZK
4XjwbaKd1F/GDLdfvV5BNej1KR0Noh/kWTtvKTxohkhbhCCVXxWsOq/udOsR
hn/2p1CCHQNND2698VJN6iH6gZRKKFd0pKCJ1OKWW41f8bZ9X4OUOL1Xs0H/
XRKHt55E3E6aazLY7yPWTDrF8iGQdvt+alISsZr0e9+bvT665J6c3ubpiQWd
VZbfHzbv5FAvNFpoINrDxyIphSIvoJr6bRHT0abE/2otLfdv9JtRo+RBrspJ
d1mJOsk3zyfqH3srUSue5No/4w/RXX1bekK+5+trlkoobuNdfmerCVFn6JCh
lNnQGEMl3e9cyzi7iLbJbp4Te+F68xMyHgv0zkbNJ+urQeh/50UPcZtc+u34
FzV906BY5UcPDTrWCN/Bg9/Yl3vvsUa4NmY0FdYT0cQtHQlWB9tmfycFuY3v
sl7l80Gp1ycJ98hwhvuwMH26gJzfCDTTqvTD3xNCaF83oOpVY7KGMInJaiQZ
UMNRrXJCnpmvY3uqOimHzAf6tNJkaKP/4YFvrK/0rjN8RAYbjBKWfSbRX+eW
N/XYx5N7n1X/kZvbqH+cnrSL6B9Z+txMRu4s5E911eJL8fvor8XNfjRdPwqi
gdlyCxtTsi9UHhH9n1d4weacli3i3s5q528XjvpvPfer70mTRpNLcovgkMIT
2u373Mlv2XXsfq+EcN/6QJb2xZCoW5L0/HnwkYZFbmCD28qAbftc0O6vzBO2
r9bl6ixxvpz22+MMUhV8a1fp0UwiKmN88Zbddvxkib971kaNkraI5tQnbP/f
6heQGEUvEYHmoKtlrJNh6OqW/4t12xY6nIbQsl4TZRmRTyjzj0088PkkWu+F
HIauOno0DkasUO3wIuF8Vx1en4NvmNSgH7xG8SFLC64YZt7G5yuOzp6pEjIr
ePngyI/3fC6wWWa5Fl8XuqqjeGIu2YJrk/WPdRmD4IWROWb8fwcpuBe7zDxN
gXdjpbOp6iWYXfjYHH+fcruvPutgEQDVkRWhjvSqkL9XmLCPa1nHt7XmLQV4
wD/RXXFDFFJfmCac90sy/2j/kh05cJftDRJw5oRdT7p+EXC1n1qFk/AUssKh
qSqbtYSq9m3eoxc9uZRnsiMf8ZekED3OVIDKbe3TJhF3QPOvf2smyfpSoroy
TPTn64qVB6udV9EXgZHy4JgD+mZrvsKiS3YHUc+gdj1sl+3mhtHE/d8J9rZs
W0pfRBJyavZ9EOIShedcatvxdg1JI5EmHytoe0CkwMbBBloJJvHh39dl/xPD
BVl/aF7kVP9TMwiG2ts04nUz465rdRocUTCNO7GD0/wWTLV4/NQFq9f9wxQZ
UQ3xwDn5mt690jAYNxrbcQWzx62eptrzIBAUB95QJx0MhFwNT6fw9wUkP9di
enRIBkSpHm6mY4yGneOzhmqYHfc736yUxQwI/goTUf8dDQe09y1IYnaxJp7+
V4YuQNfx1pO0V/7w1eL7Tvx9N6rvxId06XQAw1fNSL+h85CT/EcWYR++VmGo
4a+94DHlifggclJo/WmJsB43TEYXf9LpoRuhIld7fRWJcX7/hdLkicZuNL9V
cJ2Bqg2VjN3k7xGw9237iWOw2Kk4KOkrO8w1ZCHoZr+nvc0Zb9jB3S77DEkW
jCBHguxdPI61ylSuWGm/CUFPUfnNAD9I1073Ao/r1qzD7vbtSILH1RP6zA7e
gqrLEvGxGF/zVD3Q/8MoBLrdvPV46XcSPKZU67a0jt83Yvi3+U0CeKjj3cPA
GgKt6fsq8PfbfpNrTxzVC4eD4UsIeVMYPNxFLrEf69/xya1zJoYJcHi0nmvs
VzKU9L68cwHj12msMhscL8IBNZWD8BntVCj9y8PFHOv/1JmPxt3DmeAM9fkF
1kOREDm3o/0C1l7jdVQeg00waNIxs8zVuwjp231jK/F1X0IlYMeoDPD03itN
XkMFFfVNCd9JzW9nPk7RikfZK45EVybbofNb67dW452NShAFpDqq1jD+fALN
O69PsD/zd2HTvGMO3x55bNetqgTd3lXi8LoZ57G3bqfn4qDD+LfqDqlQ2HWw
obEQe18KVtIW+lMFcOZnWHZqSSG84lvHeAvD1Z5sr6VNS4qhjN6fw0+pa+GV
8tTG2vdYnMhKTXzuug1TJr+4adY0wl8tobymGB/P6v5dLwHugv08HMJf/Uvg
k55Va7U5HCjLD6e5bZEMKgYSrvT0x0PDHSe9mDH/fKDkfVRgdhHAgPPekkbJ
YH0lP/QUNh6ny2nU95uDAY9OJs387lzQHbO0H7+PpW0ycdU2Ox680suonUxN
AKv8+Qb4c+a1FAUVxIO9wJJGfv8OJ1ugcId6Dn9vkRNl3zXrpyKg5ZDFIQ4D
BhBjqEP43+Gi0VKVjm4ZenMlxNusLQHV3/quVMV2pU6Zng1m3DSWlJPeQK0P
ShO+syypBnGc1HKHpie4z9y2VYHCD6k78flN3amVWsujFh7fo6Z+NTAF6u60
xHmM4ICypwIDC2ULlJW6Yn6wrRa+szP2abiDA18ijtVJ/8yDdHH35g/JtMJH
TXqfDSpx4PQqaYBVTTr4ePjcYNtQIRRYf/M6G3/+Usez8k6rauC2ljFVcKEM
5lT4vjEYxgGj7uWL53ZVg8ezPj32lgWw3aco/8VXrH8H+4DIPfngfdlh0mNa
0fCDx6rOCQzP90zuAxrqwRhud76S4qMDUyvtVmuw8Q8GHjtNPmUK8ov+zCco
qYLIE7Ri+HvEWk33nYgVkwZHGbRHDm3wAr156g68H9Zl14MvSC8hhnIOberq
n5A7cPO+sx0LOYMXaD+goV9OeIi+fYCyBm7qaVn5GvVsfxRg8ECKup7fIejw
Ir0UbydzZFgG1qHwdutnJ2hkCSWn1XSzMXvC+eIg/+z78GWXxOVvpmrAtKJU
qhnj0eAyH7q0+hAa5hTWbPzKBCd2Sos5fMaBv0y7g7nr78OHpG+7HM5VARWt
qPAvX3BAj/+N2keKJEAS2th4rqkaCKG1bl5TODB1tIc7UzoLONI2OPtaS4D5
3aXvvmDrUShu1jFapxb4Zr6sTn2cDM+0h7MvYvMY1j5qRVdWBn6xuRSXFWVA
w3tSP67gcAChoX5x8koq+PvG8rnEbCK8wZqz0xPrh9rEB5GfDQMBnl8HsqSu
Q3bEzEsHe6/AiqCfq4ctwRPKFVcPOnW48sOiG68r3ilhp5+lpgHFC096EoK/
o6w6dwn5M+vCrHpVXR/q2xt6NES+Eql12MyTIV2/7xWNS8N7XwbmBDjYAZXu
zjeE732qiUXTF/zg3y/kyajIZdBueNzzNWZ/YqA5NsCSBadO3w+sGL0NDM5c
sTDH1pFgv4pr4HAJnGOLXDo2Vw4qTeP8m7D4mRWTUf4yVQTjNX5pP1ytBZSN
jB/d3mHr9BpTuAxdNDivKUMxPVIAOrtUY1l+4oBpkd6z13fuAO9L33gRo3iw
W3p6QgPr/2vLa5I5vzJA07dkICCaBd7IPdHSxPxWeLR8Loa3EIgqJ4m5m8aB
ok8BVyvXsHg4yjBF/TkNMBXHbHCf9QYFFilvvbB13foxe98DJB6w6iZdeyZ/
GeynHf86j88Pka4x8WmXAK/AWQfeWwhIPZZAg//uIN9fcWPZjRG8faA7P1X6
DTkv1k3An87H/hqQjaWheZfkG4Y2biC8W/vYLwqYlxaG7obaTuRn+W0XEOM1
G4L9z7TyVN5zA8hoHvOU2Z8XGKt7L+Dr3cmKHwIK8hGQnJzLh0XVAB7RVdzt
iOe5+4pb/RkL4TDkmRkVDoWP4h1v6WH+mc87UclsUwWH/dveFPGlQ8OkmzVp
0zgQczDrXtzbUnhu7+SRnwt3oFBsYbAC5h/1fCoOY+FKoG4WxRI7VgnSZ04U
P8bWe4uHPXciLhc8uf2Rboo9HdTeyXq0D+vf1ktfnON1FlAX3Ph4YZkbfM5J
gU+wOExWMiMvp8oGHeS/M/NPWcJ7q5qO5Zidp3MxmFc6HqR46TE76iqBnj/a
ivh7EEjHdbOvCJsC3VJtZvTEUSCuOz6MzwOBFg8ezMaQgqpvco1Bk72IRXoV
wT+DtH9Oabj6oiKHrkVc5lND3m3V9/KOHV8E8n6hQm/Tdx4p7kTIensJdlFJ
rR2qunqQn+mAi8EeIaC09FIPjxvLVKglNhLCYVHBrexTyg4ggSliyAvvT5Gx
jpXrmfBS0mymA38ckG+i4jiEjT/wR/2Dxy55cOq47tjkxyJQ3FBxpB2rU6/7
FwsVPeLh3TvlyMBKDbg29kmMZAKL8+/Kt/0MEkDyspz8qZ5M8Ftvj14nFp/f
ZZQSg28GA+XwkagE+zRQUt7FfBGLt8NjtZPakgkgNpb3Z3BjJohpzWMZwNrf
UDljsOtvArgoaMffvisRzFmbSPlg7Ucc9Hh/PQ0EaxprUjL33IGzvZNLGTb+
zDa7aWF+ZZBWFbNPneYEWC4YCSTsvzp39JoJ+Tgy8uIvv8aBF8jv45v/Y5Ls
+Zq9waeLPuGJr5S1PEHUM3ehmrk6l4dQs7XhN4LrDxHNlU190spud5q5GwK7
textFYZogZV87FO8/UOUnsynnKsw/5u998noM0BCx8L0Az6fX1lgDJiKg8YW
O1qPBliB6RvhzH+weW97ke0bJH4L2ojr8LJZO4Jf7X0HqfA6xpIgRdPrYGBx
ifpIzX03ELmj4WoOZuc3mssPtLYDPPc+m6Y6pwDqeg4GUqyf3a0eXiXuN0DI
RduGCc3b4Jas/xL+npecM3v5w0kDgWKE1d/kqjAgfKJO/izWz/lJV1qrCjuQ
e1DrbcEpV9AQdAGdwuyHTtEqOrecBrNT3q78v5RB33QdD2F/yAXbnOnPZKCC
haFZ/9oGYkqxiXOm7j7XZAzPRZxehjPVJyYi1lv/G5KQZ6VnHuRHOQxbHK91
UBJ1EiMLNuNd7+rRVSadsKDFHMSjf7P9Haf505Y/OWDbwAchzcr94CdfAYFH
fFuRoe80t4C/ggoLwwL1wRD5Z1J83o7tDdkdxhMAcxvfyrGoXgPnKWmr0vC6
4h1eaWQqGjKGnQ6X+xkJ5nh6MpMwPwTsssgoLQiHp4VarOyYggGb+dorcaz9
gV/7olH7OFDTYlSc6XEC7D1sL0WB2Wl63oeoePmAMOvPXJ0zRoDsvZ4QHs/U
VNYZZKlog9tHP8d33tEAHwqsjuDXkVjMo0nGfDYQzPXhEvMEJxjh1PuBH79N
czpXXOMo4tA3ri39axzpO7FCeN/Eg0LD9y/dRoSXw0iMJVOQjK17si7mpAnW
P+VH5pdI31wU4t2+N8fAYvhj87vmc0fFzfmSXxD1pZXAuOo18Uvo+11P8gQD
zIn3hqjFTeQGhfSgMbsV5nW7OxFR3CYeeM34wdtClwVakM2ZkzkdBiqR3AQ/
/3pmdaX2ky7kvlJEXb5PG9i9EdYhnI9Eg3oZf3WHbKvX0gTIvMCLwHIL/L1+
ZgueJ2n1r0NrCRqtZx4xYG/jUt8G5ufSb850G55+oDen81bE0nXA9zdMCH9v
UZ58+liVqhVgXdSN43U3AYWSGgP4evHr8wW/H+ai4NbT+/ZUNziBzATLBH48
7AcCsnODh5BWW1vNc+TPkenwzXVnkf/ULnjcDplXlx53X7Qgvu+PRxL5EVVL
ckNUAjVlbWvb+yfNu8jY24PkFPQmV62yQv/RddsyjD6pNZNa0CHZ1qe37UE4
Go+7n5pJX9g/9bAc2b5/fHRp55/RC+jvB+3MK3SGxPvK89IeX6sJaEGrilSN
kxVRpCVk0+6Vx2x7xH8n3MfdtlGsQAEqs0gJ9gq3wIkPstzQS2SuzF9dDIw5
fiXc+zna2rJCfeMETKq154xQOg+0JM9P4OOK1cXNRIhSEJx5ql6tS68I3lnQ
5BH0EKD8/joDHXgZq+V3L5gDXMnhJ8zjEVP+sBmGcUTZwAp06IwjfnKb+3Ca
rasCGmRjkGdh0RU+86HIwBZ/8c24P/dOZS8yoYSaOo2sE9+XTp3PUMrIRs5l
KOPL7o962/55dDAkcbi36XxNf/Nx7q7t/55ib/YV0Ho1e07apPP1betsjbue
nqC68735yY99Dq9Gt/W02stfOXvPX0B3HeGW5Fbf1s3UmfpMrfQqUYvTM1cq
DB+ivlv5QcXAZsdP5xGUevezUO5IHEr5fpZgT6a6Z2hZ1IUyiXb5UPX9Rd9V
b/6///mliPT0u50gkD20OLzjCLwhOLR5rloKKY3UwWlEHh0OK/26gn5wfEdo
z/o21zs/LxehJLONDXtTgnpsfTcZj+Tpobc3R95qfdQM6A1Ca7fG6Ry34U6e
eQrxeSlrfaNBlajzUPhm+ycyfZbbW501HDL0jfi+ob8VyRUrPZqv0BzvlfhH
L1KaZ5Ywf0KNOt+W7GKJ39aLfi3cczfiiUADuUreDg6GoT+25mtNFhnw7x1E
l7/vtRscGEX7pTfrV23Q84odfEywfmNgYWj4MNS8N0GIh99murx57IqQpxz9
qfJLBZ7lGD+GtytyviU7bHMSWgdeotvBog9rjMcJ5060Hgk0kEq9BC7dPzqe
LHcNjnEvzb7A7PojebYtSmfBwfzXa5xnz8OUFUZqfPvbXZb8j9lJwb756eZX
V4QheYXiAr5/UkcHXOTndaTox2yCyuHD8Od7NgIOjNOVzCzc8R5xvmV69OzT
MTS9cPNettvHXtaWvg9DpAp2KFM8jUAX/tPHEjasRo5RI5PuTmZO77bP5YvT
CORku/6t2ca7mLp8eVsvkhkU5TZ6dRV98ar9+N8j23qRyLM76J+1afRQen9l
Qd8wqsa3qRfdTGrYo5wkAR+Fs4TNPRWBAw43XuLtgSZNAo41ZtB71bB7uM4S
lrxhIZzz/On9l+M+Dk5wn/ynP53prnAvyf3nY3gd6T4XOMntAOkd93Io21yB
0ionhfH/Of74Ue4MmhMAW60xexbZDXjOZd8hSyxPJtYzjARPOgH10VMXHDOv
Q0Q4hQ9//9qztcW59UwAeZef7pZID4c/h0/TBWF2gWj7hebPNuCBKYmZJas3
XA59dGcQs88nmXrz/lYEdZU557mfKEHtnpPS+PH/Xfvy89vEb6ThUKx5Dt86
un4yY7Mup6Pz6rgC5PGPi2MvlwvQxK39jY6nzIRs6fRQiWfn06z/0Yu6wY6X
IY+6UZaptMFPlG0o361NHmQzjNy/juODFMFWCXsz2eHQqiVBL6L+nlaSaGwL
BT9JXbHxMIQm/GyP8edU0EzwO/HtD4HsVittEsme8F23xAH8vh2TP7YRQef8
YLGXcUZ1RSg8y5PxDn9f80BdbElRfRiMb05eT2W7BT0K+iWLMb+9Dnc9Si4Z
B4r5AmZ+mYbAGZHXZPWYPS/bbRJWhcHDy9431crDYTz1mXp8HXeR2x2DvAuE
0rvlg3efSYIBeQ+eHcGfg6RIrwiZEoFXzexf5+kE2IC2uOLx5BtGK99X9AFg
eVTqBFVyAIwdWlyLweNnYf35sB5dQOWVS/6ZRBu25bMY4OvjAZ8HYxyi+8DX
stwsXgpSOFi1QOCP7CtJTlxa8SiHxayeeLIdituKZ2fqQ8ZlPhRQW5Du9ZMn
E+hA6yaOStN9RvVa3hwK+1es9XIrQSUlo914/M+rtP/FVYlYOL+uYsfmGAK1
3Zba+rHxjyk+0wt7kArzrnpIVj3PgWQ/+o4PY3yEinlH39G+VLh83/ZwAHkB
HFy4zsOB8buNnqJeUS4/GOpdNjRidgdufKFZkcbwfCR7Z/XBuULAnMsyc6Sz
CGb8DthV/x0HuFUue9vviAUa+o93+n+4Bi85XWRfx55L6XE53681DAKmtvlG
m9vgrZZnMDVmN3IZvB+f4gw480cf1MSfh+J7IMD/B/1QnM6ZQiYDtPOcFSsI
vgEf8SuXTWDPVfJgYCfXCgZ7pbxrdPPN4cmc2iD8ecvSUWI3ZD/KgLN1C8jj
Eiq4SnOJoL9ZPNbfS65ThkbEFMoGPElADbb0ov2lYmSCFGwwdnSX8PFjG6jQ
MTmCXjTyawd/Hr871GHtCg5gUIECbr8Oz2H22arL2n9+PoLs8zd4oWcKFPLK
pngxigO0HRJMZjIFcKVf4L0HrIaGd9haTo1j+HMnSz/8mQezqz8OupRUQUGe
+52XJ3FgkmPks5VVDDS8cvnZxpcG+DvCcY9kPw480lfjQn5XgoEX1i92hFTC
jg8UpSMfccDhMZP14IVK8NTK9+Xf0DxoyJU67oPxUJ2rbtfJaGNAvrDNwT9C
V2D6T3m1o3jdgLxsaVTrPDxoN6CSd+s2qO156R6E592uq/RXDWJA7sxHBXHT
eCAn0xxxHLOL9O4tSRTzAuVorthdOVsw/H6y/yO+Diq1vIuEIsBQuvbvN20G
UPXOjKC/SfBQUU1Tf0BTftw5INL3ALXb0os+ONAljeEUoPatDe5g10Owqp2i
DG/HtWp8ffc9BJ79c/WKHI0lZOOjrM/D7KG13T474oqhv/FArUmsObDTYeY+
9wMHhI7HsU0faYUqK/ODjQnW8Oeb0YZjtTjQe5TclX0oF87NRB2X3dUIO5kp
yds6sfrrad8r7H8TPB/cecw87Q68K5DxDM8TXbXnNpgZi4C3ZkURiA6DwSWd
U6lYPI+KxOe+ulUPMr9eFW5+lAclyB1TzmD+f9UwhDznLAbXaPsCRs5mwYuv
6eSClnHA2jiRfC7uFuj9S9nx5rk/FEjvq/6C+S35x+zy37O2QGH8lzDpRWEw
9cr2PX6fCf1+g4B5XhkAU4PWIB0viJpIJtSF+pdL03aKS8iwsY1YuPwn5GHl
pv6WSk+9sVHXh6645PrPIZVI2ZZe5HmebubptDQ0Cz0w8XCdDcgf+kGIZ/UL
/4+u647n6v/+RmmrkIaGVVFkJfu+7KLIiIpkZpMkI9mz7FlGyN6rjIz7kpGU
bCkkokFGIaOM373v97s338/j8fv3PF6Pc8/reV/3nPM89/V6nYR7msl3IYeq
aOjHiyZg4gIlF14vUi7M8ep4kAAThyq1dB6HgCbRxDk9DIcX45/sv397Ckd+
7358wj8NUL8z8p3A1q2XlOj4+OlsGLWVesznYz4w1NQauPwVv89W4G//XCgw
thb/6OlRCFoSr091TkwB5on9/HofkoCB7eVpA6UYEP9Y3HEnXkf69o5v8Wku
+EDh6lNCHwU+Gt6c18P8QN33g23H2XJB2O1Ge9Yv9vAVPPTbBeP71Ukb0NNa
cWDb2EYwrOwL876+kHyIfdclWdXdVhW+QH9zT/CZ8rswsctbFK+/se3uoBQ/
rg+qq49Xs7Segx0neN/iPO5MD2pfQ0cHmH5/B2ddfqHeEsT6m3n15eziuUeo
ssOpVvONPgjb8r//ZQ7cGZyboe9XxjzblJ/IjuprBPlLmbiKkLqrUGNYO2FK
5BRg/v7rKqFexCzM4MAUCu+d7Al/0qEIAjZxvfuLvXdbt6eBsY9y4Ak2+kuU
poHgpLh4uBI2r43JNgaxBYVwIj9H0CKoCNjJHm6U7sP8hvj7gmS1aMAnxGQj
4JwOPv55HXhsbgo08yYe8afIBfcE/5ot8xSA1dtX9npgfoPW/kbF08exQGzM
ZCXhtx+ouOn4NQfDh96R4XnLvXQQIOS9g9HfHeTeDx3sxL4XlZfnI800YgD9
RLrvdQlrALzetd3E4tEbPdszDqoh4NaxjX0vtpkAb3mLu1R4nWd04vduBxNw
SLZQdJ8ZAm4HwJN4fvIRefdmwGovuGZVSGWdPYqMNBLrb70FjiXpdk4o75Iy
kiG6Vi/a/GjH0Sulf9C8q3+5hShaEElfYr2IXsh+6LvzJQhqBlIyO06BY0Yh
Sni+J6R+RLq+2Re+XXn2SPabGaBTcQrC4/Wgcp5PgHE87Lvy4wrzQy9Qu5Qp
64TNN47FYCBTPA9e3CkyNddyG8Rdv217f3oKZCXGFlO/zIF7XbMGc0Ni4FX7
fe362Hq7X+9aWW8QDPgvytbzWEaDiGsc8qwYDiPGTYvPJqJBkZhwn1FWMuhf
4L7ujvmBwHwNaZnCaDC6RUt9KTkKyGn+6OXAnhv+9fbItcFoYHpd7YT8uCJo
o7L8gv9vin4ydsXtWgho/yMp+CNCDiQZdKXhecKOjxTJTXTXgOMSS/BWlmMg
MVJsBI+/Mp93dssHUIICJMzv2ZcOZH8msf5GoVK4OndCHQ22GAmlMVirF+mJ
Sh4cc+tDfWRsHJRoShD2n0TeSqGgyGlKC+DHi8ZX248zANlBllpcflbS23mV
1RkCq+OMg/4XQXj7O4p23M/Qy27WiYyCsa+0qKqr7MAPXWNDemzd7r9Sf8N9
MhZK1yneFxN5hMXfBNdPf7B8lfFq9/hAOCyH+09FMBWDCaH9nIxYfPHUcYIm
H+3ABPfRwvzex2BHTaKKGYZP9DGD4fjrAYBltufGl7Jw0Hbqz9mvGD4bLpme
v3niDmASPb1XxzAARJufs+fA7Km/tmv4Ua0/YOYLNlKUDQZnMjfke2D2yMf6
dDz0dwV8eTWqzUK3AEeKnwD+X6NCbeGOK4McKMo5GT+wkRe8Te93x+fbTrGr
JYN6BHk9c9MqfvsrhJmbVH+T3De/tPsEyi0Sy5nQslYv4m+TSuEfLUc5ChwF
iymSECESH3S5V6m9X5kFbqf09wAjO0BNrS2B76xWy0j4BxrAw4rTSnqoBnj7
cPYl7s8jDW1nn2f7QxnxygbFJkeANnXflcLkt7Ydif7BFwXFTpzUFhuwA+4R
h93xezBGOQ7YPFj2AmkOnsErRw0A1cTtafy85zcGsIVaOAiYyQ65Dovpg7aH
naNHMfm+QB+j9B+GYNFF63ONsQuofGHWUIfziFa+2IxXtwEj0zjIFXUGfeW2
/M9xPz/+NP7DqAGw4p/7sHXRHNSVL2zF94f3Tum7nWCSAX9iXhbPusiBBE4Z
PsK+iy2aghytG4BqAu0GNeNV5O4RTQIOvKIMvkPeScjY58X0hLBwxOhf/S2J
grW6saf6d4kirW7MunrRalhzSbYJmmm+yvSjbK1ehMTplJb6dKG/Xjltqy9s
Rep0ifmAu2WnTLroSXi5jzI0s4YVnMr5MYnLucpc8qTlLeHAIfn0P65GYEG6
9xf+P44/1LWvd9Yfcg6W5njeDwC339IWpWN4+gufy/Ze8YdTLr2NX//4gvNF
tK8+YfLX7KccKE+6AbVK7ZDzp2zBu/OtiXifX8Syvd6Dxxa8v24qqqoNQLcE
w1783GiddIdviLwy8Dl0znHyjhyQe/csA/dLhVP8BlN7DgHpgCb+TwPMgCMY
EPj+CsWxuzPMn5BUnt649CcjiH4osf42PJxho38lAlErZrY+fDIaSSTV3+5k
BtlO1Z5A9lD+UjjOva7+RmFjmvxKqZq3PnYmWVp+XX9YPeqEzSPV4WFv7zz+
OUiWz66C7fYepui3n48yglgMkV8knN23fH/GfuAdOl6xMWn+eicik0T0DwdT
haePlB6Ff7JHtgvRHQPloxsJ98Ud6pURhDoGsGCFfm/0jB7Qc70ogfOpygNv
qlp93eBvr706eX/8ADS0OsyPyW29PBWd2s6Bt7zhuY1mxkAuLT0QjwvddjZS
jtPaIOEIlY3Rvcsgbdf1N3j8bYlNnQ7o5QO1bl+kRfexAIWNXt/w52754Vr3
VqcPcRn47MTa9hJZDCXaqRnIkzjcZox0CHs/QT+s1d8SEl4UzWTMSMjXbil3
Kl+rv62u6h7ZQLOlKn7gmd/C+03kepHl0c/ObgJnJZJeMX8z61cl83eukY6w
cu9FieBDBZbJAtRr/QuEe2a+aHdVP6xmCp5gaCDrl3mW+/NVzT0J1E9tfmer
O1nuIvPQ/KsjFM/OiHgtYfeCvO+OZiVwqH0yU/ydbqpSDEPW2v5kd/OBvqql
SkqKrUzbOpfJ5wrHPd87tDXToaIMapd5fdb6cjJu7q97plZcXVXX8UOpKmXt
XGFzJGVxgz56UEMtwjRfi3zv/ULECntzUxJqW13Re94jES0nnRdOsbH8EjTT
ghbAxIt3r3WiaTHE7+5EY57aVuMx9N6LgJdMDQtoel0LcZ2sPg9tiviFUgpt
FuF23QUbc/sJ+VLoxqRg9aOWEofn7waH9zPC+iu/CXH/1k7aSGw8Qln2v+OH
1WdEMf3If/XntxXHYvYgHTTTyuvtmWhOm3jTlITE8PS0rrf/Tu+WoqIGfWSP
hsz/zFdr2W0rhhsSSiMpvx43mjT6MttRFbQ++oJDRoEUeZ9YjOf7vucHpqt/
3pM64Co6SMaTZ9XD1XMxEVVlXzI6tisSvUnyb5rSIi0XTw+gZ+9ymVQU9qAO
CPHczcWb/Fz1PdugmNnVFYbDO2CiuDlhvu58AuPK8DjMrkmeFkrih0weHoQ+
7DzntHeWJfLAc2Vh3LVvz0Fa2TBNXC6u3b9r2S1bojve/ncfryr8YONE2Bea
yF2+BxsPZEnjN5PGd9Pu7ML0g+ck/dwk/Y+bfozW9WwDV/jUp3B7Ukj2+ERz
WGD2I1TP7l5db7+IWviYx2Iicuyo+JX189XJfX4eww2534r+D263izZcxHCT
eDopsn89bt7SbpLpvJ7oz8Nv9sVCazSRNL5XZA9cdWRDKf6033t3Zjv5vUiq
Bxvv5m9HJ0/ysL6weYHKBRL5y+5A+dnLyC7IBg6tTD/cAJuOEM87UOrev3h7
WgJ2L9feLrgoAk34vycS7Lx/u6P8wVW4LNfx9AuvHuzuotbG7xGl4a6WzaLU
h4auDQYRIXdgOAeL1QAer3f67Nj2+73EZrcrm7s+u0DH1RUuvN5YORN2FhsP
8u8Rx+86Thz//fz5ckw/uK1I1E/bS9RvEz62CbMHsKx22OL22AsQ7Xk6VIxi
9gN6ILeM299Gsn/s5Z292HyR9ycNWdbPV2fErz2N1xOZOTz8P7iNPjU8juGG
LC8+/x/cdkgqpAmMZKDp/JcnBc6HoMxzxPHmA4ZZDhEKqG5ic/9k6do52QK6
WdPOqDnUr10/aAoOoQr8fYTxIY4mwSUagnCqn3r51m92mM1W2E+ob3ew7U/P
NoSFtVvVg2oxXKtVdXB/vqiYPRDc4A7960YejTq5Q+ZvNi34f1uzVYHfQuq+
MD+P5WP6ZBTkCohSwPuCTUwckVT8uwGp10xxzDZKgFWI9nb8XKGzNe8SNh6M
MbD24eN7I4njtwTCZkw/MO37Eobrpym7RdBvMSw4lpZtCE7Pbz2P23Orn2jP
hJupPGY/iB6gnsXtt2En2m9zzIwCmy/iT5qvImm+2QgjA4Yb8l/ctiyyfLCP
UECYk5uL1+NWNvGpVI2lHvW+tPv4HZsU9HUkcTzrhddFRYE3UBAc4qz8Tors
fxTO0IRHb6KHSeI7peR2zKEjdx0I712VW6mpf1EVBqho/vy8RRSeSbgXjn/X
/fdPltaEucMThtMJQhQ28BfHtWs5uH/Yt2jhJh4PuRBTFXq7SKg+NkktifFx
YMBK87EmGX4yG6e+zJ0DIZqlOj2JjT/Nt2t/HTOyevTO08sdxfASFAFdo1g+
s1dpBzYeqNc+2ICP96VKI4ynG1q6gOkH4giHIq5/sWaOoH/3lcxQzB7Aa3A7
Hren0kiHYM/NvKBAzH4wsfJiFLe/M51ovzntdjFsvuD2YKwgPt9fpPl6uXEJ
Y7ghqsU+h9bj1jxjvQnDDakMumm9HrdwMe7LpyN70IyDl6dC9xWgE/VE/0+h
+FuqS8IJvV/trO/ofwF9TxrfILclV0DxGGyX7Jg9k0IJmYYmCf891R4oGwLa
GzBrR9plr05Z+CFUIB3Pwx2Nfgv5mERAra8b7kQ+dIK+6Vau17E8EH2+SbLc
rRCW89h8SruUBBdPrTS9xvjLr1x549e9JfAMm4rjxrQSuEeXkzmjfgpksqTd
jfnIj4gc6XvDsQGFS7UXPF0bp8AXlhQrbDyQnWe/i49/c2QXYTzF7NZTmH6g
b7FtANc/xMj+GtdPuci2A7MH1ICtBHvc2e0I9kgqSR/E7Aeb2wo1cftTINF+
kw1U8th8Qf3wxHd8vgak+cpByTqByB4k6h3oX4/b7mttLp0STsh/cUuMXbrt
bTyCVqzytwqV5KJmtkQeJK1c7lD/zgc13rx81POyIupPGj9Hsb1v9ZwAFLiy
O/rOOQp4e6vbd1xe4xJ4Pl7IFo7YPdXaKioDcyzyvoxh8hKGd7LxrzAcbbb9
DE5wgBLGadvtsXXF0uwxtnK7CprmOXL6bEuA43e2zRQ1TYELPNcaw1pqoc6n
/eX3+57C2SRWB7bgKRC7ErutOlwS6Tq0qzaitBIyfqC83deK5eG+Us3YeLB9
NIMwPiRg2h4fH8qxuxnTD3huD3Hh+pFUB4L+iOThI5g9IMCibgq3J+d1OcEe
GylmWsx+4GB1nWB/0DzR/h+RPzyw+YKz1Kcj8fkqbiPOdzwtZN7LeAS5mv3x
f3AzQXa31L3zQf6L2z+cF30YurDxyH9xZqaTPISNR/6Ls+R73ofYc8E/nJNJ
ON8KYNXD7AT2JJwZZ7oJOHvxuNKEJDiAVTYizlye9wg4F8tGy2A4gAM6Gwk4
GKUpEHBuid3ZgOEGTIupCDh7ffMk4DzwvqwVwxk0yHTY4jgXfeUl4Oz/+WI9
Pn64o5uA82DvdgLO+57vkcb1LxfaEvSPuxFx5igYJNhj50vE+SIJ59/cjgT7
1f6DM0uqaQw+3//ifKXPrHM9bv9wVvZnPbIet7tiVuq439AaX+zD1j/yb/0v
KxD9Rv9GRj5s/SP/1n8dyW+wD78exb4j8M9v3CT5jVWpZhXsuwMsYcTvzt2E
6Dd+idVbYt8pmKgh+o1bbJsJfiO9YHsv9l2DmSkKwnf9zsnLBPcbWkef2WJ+
APRLChL8gKe5F9fXPgGkga6jFvMbYOSLNcFvoLkIwW8ku126jY+/85KNMJ7b
VITgN3KT+j7g+oX6jhL0z8v+3Y77DfNVeyvcnlFpot/oZ+Ml+A0dfaL94yS/
EaghIYf7jbBbOWP4fP/5DRmS33h+OaN/PW60JL9Bd3uadz1u0xNnn+Jx0Kdi
Hz3mz5F//nzxvFY+HgeHdDdqY/6cfC+69JmBMDwOasTXnsDiAvIvDrqQ4qDu
++4PWBwBbqQ4eCSJGAeTRsVCsLgDrp8jxsHK/iVCHJQIeCSOxSmgzzBNiFMz
5V8IcZC68cqUJncO2NNaQYhrvcLeAsxcrEiBSEsqFgfBfpVrhDj4pfPndjwO
zjSuEsbfeFZKGK+6pK2Ex8HtTxMJ+r93LxD0Oz9zI8TBo3ERBHveuBHjIIO3
MyEO9g0T7d+SQbQ/XvesKB4HYwT/EOb7Lw7GyB8jxMEKdZX/we0lKQ7mrIrp
rMftO2hKxfO61CfpKJafIP/yE4ZPAgl4XqdgXp+P5Sfk+kAenR0hr9sQ9MoW
y3OQf3mdv+O3QDyvk1QT/YjlRaCOlNcdURrci+d1xtEMXFgeBeJeEvOo8O05
hLwO3fvBDcu7gG0JMe9i2KI3g+d1F08z1mB5GliOiSXkaRcLMo6fU6FBbjql
XcTyOhD+14iQ15WOChLyOt38PYTxFkLE8fLPwgh5nWouUf8ZJVuC/nc5H0fx
vG6uawvBnpHPRHvKvx0l5HX8LLX9uP3upLwu/48QIa9r4Gy8hc/3X15nqEFF
yOuEQ1ur1uN2XNqIkNfdZpgqXY8bKj0qivOUs82PumOgNfIv3/4kcgTFeYqC
2zmA5dvk8ULq/gSe4nqAd7nG5gXyL293DdQax3mK51JiO5bng2ZSnp/JcVIa
5ykSzn6iGC8AyiRe8OYJkae0PEgKwXgEOPaNyCNuDTXJ4Dzl6YM6Pox3AI48
Iu94d8WXwFOqbp2t7/zsAl4srxJ4yhWzcAJPMfQnjj+aQxyfw3u1FOcp0SFE
/S/GifpFjktuIPCUXhWCPWdOE+05DtWrcZ5ynv1YK25/B8n+qmAbRpynvBuf
XFg/X5lOfwJPETi38HY9bnrvazlwnvJf3GLSivJw3j3skSSJ8UdyvTra05HA
u7PjbnxzEV2rX3GtNrjgvLuuyfkYxkORfzyUQ+Z5Dc675QauHMJ4K/KPtyYG
ejDjvJuN+vITjOeCVBLPnSXxbpdbV6swXgxiSLz468OXu3HenTuS+eXF23PA
7yyRR1s1rxiq3cmWoIKX6jDeDSIdiLz7gXgBgXdnkMZ7kcazjH9ux3l3IEl/
Hkl/U5PFV5x3045pEOzJJNnDaTxsivPuoHeXmHD7HUn201zI+I7z7lNcWmzr
5ysd94rAu0OVMyXW47bjiKQKzrs3/b3yP7j98DQl1Iu2UhSO8/isnWMdbt5A
hdeFWO/VnTDN1yL7mZ+kupABzV7N8x6JyL+6yujKzhG8LqTa/3TZ6Von8q8O
c5hUF7JUpLnO1LCAZJDqNpK0CiF4XejpM50ZLtddoI1U5xn0jddbaTWT8Odc
4g7vZwTdpLqQ4Cn6CLwu9DTyf8f3kOpClg/+V38SqS4UfSiKYE86yZ6vpLpQ
zk3JK+vtT1k8SKgLnY3WP7V+vqqkutDFocj/weebwA/BZ2rFEqKBw8FKVSlk
PF8M6zFQFeijT2ydX9/1XasvPaPLSdhfkoR+07u4V189EW0hPZfrrQAq1taC
+hixuZVKdaJtiUQ7aZxEg0yUxlDJ8+MXbNIX0OwzrQT5SvWxKcrgX6hWFpOC
uvUuqF03QMDB5J6Ya8ytMWTAjt/Xa8Mi2jL7lpjPXNIt3KfZirTYWghy9HSi
A+5E/Tn3z91nuPwE6TjWYVEfnYRSkuzh5qyl691liDgybX7NEKSDzpPsP7Dt
ZOrb5D3I5m5F3VHPdfUEhfQtl6cqJNhfhkynxa7dn6ZJ6jea9Z9+oylgS3hp
2ke07YX466OcPWiCI6mOJMuptvf6Nsi/T390o/t22FzoRDzXsGi+7Zb5cTj3
MS4vU44ffvocSjg3zZ4y0jHiwAN52H7zHrM5B82/CGvjcgeB66ZiJ3eAHLPc
XSHTOyEfKxdBD4cd7/4+iiEkZeANhcCTfnT4LPHc4oVSx1cPbqUibw0PsNvc
j0cVSf4/+2rIR11sHdzvObn5zBkV8r1z8Sd7S2JDqJE86/5l4XO/yfNtIPX3
9PlPf89pkVihP47i0LmySmpXmRDs8DqVjcs93ZIsbLyuwE4WKorgoOvwqFoc
YZ9wwbnKz8N1ehB5UGYc9tgOJsvnbhvC32PXgZ3i7Ixg1qUd2OfvgoN3Vwn7
Rjy/UgSwbvyE8FVfPWaX24k+qyDieXhxj08KeIRw0Yp05FY9QKlI/6NPUZ/c
L3xSDjmybcxRJvA0+T3akvpjBv6nP+bpkw2+19hc4blTSIgr0z2o8njpA94v
rLil7HSVrw/U8nBTirSKgHVIYxodlk+W/0pVZdi7G4jL09R/+0UFJ/g9CTjs
UnfYEbezFUnQMPENYq9Gn38gxgXfJOrznDyuiKYrcvqppimKknDOJ/WLVP1P
v0g9qp2cD+SewC/uNHGuPKmQViNqy/zsFHDLW5Hc8GURQZzGXZEPn1GbB20E
PWmjo/sKXLORwAjeEA6VUHSFtH/sAqkf4gipH6I5qR/iTtO9/RJv3yC/azh8
v1BloK5niOP5rR7zs5wdQk30OlpwfrGJ1Oeu0vnE/Y/6vPDVF8conI94ps0T
/jdpTFhrabLdhNMmEge2YfzFSlfaBT+/z2UxvSlox2No+83MpxjjO2nnX3wK
xfIfyc2fewKuPIccg6WT5tsTwBFOFbfTXVNAqZxRZ9O+Wsiq2XojpfcpWH1p
V9kWieVdpL5190l96w6Q+tYJPPHtPP+5GuOhweq8OxJAzNR0ug3GC37mOH63
p8kAWzYrOPg/cQCuE0KXI+Yxv/39SQcruyfYeW7m5UXMTm6OzGv4eYTTnc19
9F3K4Kfs3e/22LxiHrPT4fPa9ieL76nadvDjhkWYMIZDmrEQAYdc8eyJXyWV
yEsxNjkvjGdRthFxG+gUl/gZdQDufy+UQyf6B+kUJPaN6nsZULq3+CqkntvM
pAwAuLur5BS+/2F447IWT6s/3FX7+lKO323wylvkLL7//1i0VvIx5QyoEvp2
Y/2LGKBarHR4DHvv4upowo40jP9fWvaSPlQMnn16SC3ZOQVqSX3ltv2nr9yf
ip37L5umgN2Kqxr9jx+AkkLnRxaLGK83tL75UcYLNHzp6KDS0Ae/t8d6J+Dx
yKS3u0BAHaScfZokJcwJpBSu+uDx/bRH/qYKB3qw9MbOEGwdQf5WuhLWecnl
q/L7jtYjpb8DzWN3hiFmMaT8MPqOYdceUfingKpkcPNxsDOI2CcubejObC6P
BXRuf40oHrsODn5M/IqvkzuX9WmuSgdBkPBZBX3gA5TTTaZKsO9LrM2qKvR0
Itx4XqqAQfgJUDq0iSUEe4+qpD5u1aQ+bumkPm6r0XOZwlsdgY7uL9eoU0bg
6PSMF35vtjPfcdNaBQUwdqxSKLiZB2gtqKvg9hx8JugIr28FGsKjUuqOY8jH
02cJ9vtlHrEsLqhEnJm9WOyOPEQoW4jzGosUz8H7r/W1crcbGImBuERi/zXx
49fluO6aw8YDIpQTYcYgL4ibEd/PltrJ10sT7gE/nk10nXT2AZnaJhYAj2ty
xD5oUaQ+aFykPmglCREmSk78gNFb9dfcJRbA9XXxC64/44SBEOXtGcTm4DjP
Hr6PiPMm4j0DbHabXsZ5pyLaqz/LDDLvI69I/crTTW5MN22SgoF5x4tUVSTB
q0Fin7LR7Ft9UjRa0DWu7tdXBgNwqvkngvNfMVJfsFWl/+0LpjdVsT0etCFQ
VfbhLKhBFkuIfqxzd8SFdyc9ENuGBjieYIlkk/xYri4TC8u349Cq/Gn6TW0B
UG5G7M91n9T3arjpf/te5fRraOtFqSCnUvNvXpRfy9/sZm53YXG2eufVcxTp
6+KsBqm/EsV/+jHNkfITu+byj+v/93mQ9IwHy5lg8Zqct+iQ+jc9+E//ps2k
/4aJp2dD1+c5gPTcxYn/7et0gJQPZI9cNl6vf//jiSW8T9Pq0xfN6/s0uZ4Y
+DKkZVDuSPEg45LxFfJ9GqHvpXI1Oc9W/tRhmtl98iz5/+b1RLrc37zyVax2
1yQmJi6Q/8/WCmp3/ZFlqa5OyGeI1GYhz/dlB91Lod9j1VEH0z5E9kyR5fuP
CFtdzjNFN+/z47G96kTedy32ovNhQrQ/qlkYZdrbUI7SfiDKafdYB+L3ytbU
ltqsv1f2xGDfd63fCoji6M+syigN8j7kM4fMPkh7FEvwmNlX5Gqu3f8QNuN6
a2SfpMRjTfMMoVEDstxgF3Wh7MQP8e+XStqPMlCQ5drWRSdYnC6IR1665j64
rt9QE+OvtjBDgco+C/E5CemjZHwi8oztjtsnPH+iCt0n9YPIOJvtoy7D+xCJ
ThRT71133ywqwP6Bd/O9aq1Lnw5z5zmRnytjKHzzYj0X2rNUmWyhK0BeV03y
o+YXaZ6hr11OybvHPkXHSX6AX01dzI6eB87dOzfmFMsHx7YGEM6JCOVejyie
U4ahJnsrX9HegrzcHYP4vgsqgS5q7Veq4Jf1kPa160YwXV3qHP7dvezcSgXV
dwHvnxkt3zt3QD6KvYTvThapLPM5po+4mtQF7BYpR1X6iM9lDIi7q77gjpx7
IC96R/0xeo20LyJm7GzSTjc+pPYqZZzy3Fq/oSKHAfZ+v0iJc1SzJ74oRa/1
yTqytMpvni+u7XSmaKdhJhmflYfZD7710VWhMhUc+0o3k+W73zVT3Q+prnjZ
c4aP4WIx+d6blcCelffmUtXLy1QPv348tdb36hbFwfmr4ujyDZY95xTX/hOl
qXyQpWj9gVo/7jXdio6gNXwTBPt/iWreM3+hABV6r43bj6nBr+Jas3h8NFa/
LKvi6QKbHgwVnuRzhqz9ytfiMLlbjB0359XHsFRe8xQ1EgO7YMcC+58pEHZD
0h6PEy2OiQE/mILgra07yu5j8mKWkq7To5fB4zjZRlNzFegf9roU3z92XZ7T
hloYgasK73Wc5+xgyrOei/g9tCW/rAUfcSqBLXNvnH7LXofNL489xO8HuGXd
F3J7mhIknOSvytClhC+oiedh+yiW5nMemCCmojRh4xiP+LfvImZDzlHVa54S
K6d2LFhN2JDxcUVCEjYWzFSt3BbeoN7ymYyzhLrpjWCxtEpXticHmR6Ektf5
8sXCnd6ev6uXzy6cuDs6RtbTVCEzWjCej2oqMAX2aWWir7+R8vkfW1/K8olA
1bYtn8zrWKEtb3cHgYeKlmc4KkTAu3uvKGmF2MM93G2cllicDd2u47L82RZm
RjhfqzjwCNKkVT1KxeKpeNEHu+kz4XBa9G4N7/Zo6PZReeEtlr/xCv5NSwpJ
AZTWy1c/vfWFGX4DbzyxvKI9/mOloHQoZEsY996Y7Qhd3to9bsfv5VBmi3rI
EwMN8xXqhN2yoMq1gtdaM1PgZiz9dbbwVCD+symiKiUaJlybTtPH9yeratFK
d+mAy0r+1fXeCJxMpbpA2O8XEJrmf7QBEf/BaPnoRDzKFEScL2tT0c/PG4Yk
VlYNJTYXFJLxWeLZO1r45E71mxvT7yTvXF2T900V3TrMX3V19ork55P0ZPzr
P50NNf5mg5pliq0efK+JjpPeo1fPNSs2b2aIMjLPM7/eDuszJgj72ZB5wV2W
3p5Qh+qMRzyzM+x/UXT2HiZffBND36SWAjMPpB847JwFeyc7VCl/ToGiJZ5M
1Tu+MJ0xZiLaoRjK3b0wzDk2Ba7Gfomn0PMEbnPp9058TIO5f8968S9MAQ+q
601BpskAtd034U8TCa+1mtaxYjj3JNYbOh4LgmW9vxldRf0x3hDX+AjD+cDZ
T8OoXAq0qdg8bVsZD2UmPzjNz02B4z4frXo788H72O6Kxpj7sNqFdZsbZs8t
TpUzVAvGgE3oT829m3ywz6AqH68rph9UyjV3akOuVWpYdrOHolFTxLhPSdG/
Pzp5TMK9Xc7k8LG1OLu4WoCkepVXW7en/Tm44k+Wz69eZOV2u1dFq5Mr/+qS
Mhnn3NJPN7IbstFqIT7zG7fd0JBZ0vdymHq81k8VthqUWKYNcsHZW5kQzz+H
L8bsVn2VBTcfNSprao2AKZd/qtNh+fDC6Asj6htYPjzmvHXjbAWcBSwn3lRg
dp6nvtnrEQorZi5RH8uphmJqao4VjVNgc5xI+M/6NJASZtwU3lQCjU4V1Pf0
ToGO8DiRnSZ54L1XUf6ZX/lw+8yXYOdhDM/ZXOGtqU9Af25IXfDbAGif6+2g
j/mTJq4vpaXxgZCb/rUkb00e6GMJD9H+NQUea1zfVnY+GsSY3OrbKxgHNrbH
KJ74i59Tbh3jsFUDXoe+N66ESYNKH38NfF5DEqPG90IqkQqZMucAySfI4BsS
j0h3/c7z+J1EUOlWLWuXZ+S8YmZ1Sm+D1rdqWY2QryM7y9fW8+qqa0/cNjQ1
O3vu7atPZPnEap2ZmUd5lYzGkVEJaT8y/sururU76z9XqWlobJ/PLiLLf5al
bsv42IqWaYQ2XtB5gt5cJr730HfllwdEv6PgnEoXZHyBJj8g9uVEf1G8WP1h
BY8ILhSF80pDS9XVAvxcSUbNF+/Mx06wGGHRvymhAZlkKUTxPNyyVoy3tbEG
vl7p88hxjYVflCZE/EsxXq//1LemF4W0hwVk5H7EwRFx/ckzL6ZAAnrRMoKh
Afo2C93SzsmH6ssxf0U8sO/xFKKkQJMM0ZZCoQyPC8DkVYXMD+y9+EafrosT
fQLGYvxUtsynQabyeZc2zM8c37rzw5WbScChvsbPZnMdYDt/QikrCcvzn6Ze
MsuvBvZ6JkXvMiPhWEXeEB22TmzO6MqGm5XDXzF8iYfOFAOTL/N87Q1YHNls
FevknAv2/sl15eMuhVcOx6c6Yrx1V0rY0Nkf8WDYIn7TV5gGdatLKjR+Y+tK
JG/uYlYZSNsmMa1dFgbZD71++bRvCliNzxmgKQ3A7pEkrbBHDqy49uM5gyuW
P2QHFDSiJuD5JL9SVaUbRAelJfH7oA4cXt79gNUVFJaZD/VO58FdY6cNarD1
1mkZoZciZAgczV68ysrSgvFBA7fx73e22qtpiCMc0FfxjX5zCYBSh/acwfuD
DIAzz96f3Qy4/LN5ZPxH0TNWBsS6NOvA6IUOQbDj3r6YnA3MsKZTdACXF7L0
1rh26SB5mc3auT4HyfeeKegFqNgE+SFIdrbNz1Zj1Jok92XP6zAwMpGoz/Yd
8qs5TV63rAp04W4OARLYeiu3/WBIXp9UFPFM6jwbUL+bnK5dS+8k1uTlbPuZ
+qv0FufeDw1mkvcB+rjrmPilDKKLtPzqPX4VyGN3Yl3C9o5mQZKbNVy8sWL3
6qc6UI0oHcX367Ieu7pSKV4A5/YxtXp3pYP6vYHuEd+x96W5saReNBManLNW
PrW5FssbOp9vTsP0iDQ/b+YKBbzn40QMEp4Bdnu7q9dGsPdVlPXNafIpHA6n
YlZCQyBMOa9/9CuGW9OXE8rl2aDl6gT/tm+ZoIWmsov5B/a99/9QvklXCsD+
ld/aypng/RKiLfJ+CtwTWPBzzXICfWrhD7JYEoG9mJvVDiye0j0RXuK9Gwsy
swaU3Fy9gPVE/pthTH7tTwHtDncE/BxhZbBY2QfoDlnU4fMNsHi+V0cyFGkQ
4Cj31DZAZkjn18LYu0ucP4VL3H7jl2XLrkfGc6tkScl3g+Hq2Y6xmddjkCzf
XsN8VehQZdXIhTz2o1phZJw9G6m0B/MhOuxgXUp/LBk5XEXUf+jCPclUOyVo
ndmdFJAtAho0fxD6ZrZ3xx0TvxENjRMY3N+ne4OveiaVidh6+9HYtlStXwo7
6w++OHf0Lqz4mBdvPzgFXntw2HX8yYY7Y7YVu9MVwIBnfrZuX6aATon15NcG
C/Ds6235hVoH+CU4NxM/z37goGTI+2fFoDHN+dulyGrQFVwYs+cp9r1Iljht
6PAEfy3nVgYMPMCHFK5P2tj4DmNPijPDOcDmjcCY5u7b8NYhNboazA9czPq7
58BoFLj0wKo/vt4CbA2y7sD37VN++fMu6NQJ4GP1O5u+lAq0e03PEuob96Y3
Pn5hh/wccBfu/KCIfCGtc14FtqGHdnckMjexs8ZeOEvGcyMFTfHrOdvqmvFv
CXEnDMjyze5NGfObzlZVvcssqUkRIOO8svqwILddH319is2iz0ee3Kf4Tjsd
c7vLAWjce00NcE8gwV9PE/vLT6SlruoFwZxzXM9E5fVAQcvcbnb8vUzIFyL7
C+GdvqyD8oER4Pr21UuKk3h+VZUgJJ8N212rjA86JAM9JtOygSksbi430A9J
pgHdIhvfkPvFoHeLr6w5Fu9EAooS37M/AaycjvtzHsSDsG2cDXg/xMCEO74X
zLxgz8XDLlWF4UBCS8lSFj/vKe2c7j+ZDdIWwsL3dD8EFsyf+m9OT4HxxX0P
XXu8wb2emIcp6VfA6d0Km8IwO89lmQXIftoMmNySTZsOdSOCsYak/yysIbOW
Ukj/jeG4s2O0ZH7NqfBsNnwDrwRjnCmb9UcqMp5bKHy8LKLFq6Ps9I5P/N5C
ltNIyjV7lQ9WhvaynOVhyyLfe7mJYjJgY/wF9J0+04vJFGZynUH5Lq2Wzf1d
sFXg/WuGL6PI6o4RAv8qfvV2bqHeB1KvhBwyYzUFltk0Fvg539fq3MtcKVmw
/MXy+c+x8UCTnrbVB5uvumoVvZ2uB6D9dVnR7mY2+NTkINOI5Sfbwn/p/Lka
A6JtXfWfV+SD9NUtdmXYezkbo6dXcUkJItPWCR3L7iAyb//fUjzuH381t3uf
HfhtEnuIxy4WGNgrdJ/AvqNOI8M5rpYo4HKy4LkmbSwIkH2p6ILlFQEKvEz2
7w3AH2b3Z18a1YCRciYdXkdqOPM85aZGH+J7pLDltGI9MpNH3B+euPI8xOrM
FiTczlC37NBPMm7bahSOXn00JR7yY8jHIK6dvD43uXPr++V9qfr7e4XphkjD
2j5tvS0JbBc9K023ujUKKBmRcaahcCnbfXAj+t7AbnOw5dp98vKGt6J3dH5C
a/mmqJpEk5ENNER75FDheR9FK9h7x54mjpIO9De+j55exe/T+yrGPpMKj27f
feb8tyvQ/m+WLAuW9y49t3o8qxoOjm4P3vwqzgPeNDnQboCfexWSptm6LxjE
Dcj+klPwhO+izi40YXKpYsYfirpXwGXdY2dixZPAG8YLwwMYbhMbWHMNnX2B
rErT0QvPfEBBweW+bdhztacPNuzYLAkWA35UIr8UQayj/Fbczitu5lQhfr8R
BeE88fi2BUQ4gHi/8VKCwsGav8YI760YrTNaa/vtF0YRLne5BxIP20N7I2yd
yTgcU+i5PvhbX1y3WoyfO015DWfzwYNLcalVfAn2czInvMnyrZdY9mQunKy8
RBMye+k+zRrOzPdpmwrbq0WPHR01Z1+7X1qK6dDPxf1FKM/osigTfIzIku7j
tWB/OHySSwpWHzHPu2shDG7oUYYR8Ffx3ir9wRU+MBqMnpDyB3cKGkzwe+8j
T+u87736BE6qDV7bk+wCGGbfeDJguPX3Li9zVyeAjQOnOFwOh0HXr+EFnJj8
VAmF+NGWAMA0vFBsCtWhQh7gkcBxkNtxnJ2ZBey2PpAkDQ8AUbtEwrmPd7cP
UXvff4pYrvRExzaUID6viXYKpzy2RbpYkDHtUXrthhNkPyCe4GGB33usdVlB
dmLdvceD4hdrreWyxYOcnueJOqaTcdt3n4+XR9hdzB+Ln2x5d8i4nRN2ihu+
sqFK/pKbsue6+6WnvMX/1t3lq04MruPJ4ztO1q+0W61QadduNHXTYBWd7E6y
PZFvpxSWN+agVJneQ176ecgBEu9WTKPLUsg6DU1ldHO+UZwErBsnPhDqw4wn
ppjfu8NPHq7N+ZO+oPpcSRR+7/EfZYnWTa8dQZvI/LBYfyzIeEP7dxP2vUvZ
iO2+d9AEnGc32kujYAhSGF714Hn1kwrdumzVaeRI+mG3veODCHfQV8Jz65k3
sc+kcCG3i5rPb52nI9s5ixgr/Jk7JhEkGfKszOQIeV7plRo9cvJi4nyni84V
J8mQcdtesXFo0khDTPoGd6Hquj5iBvd3/jppc0y0nMNvw8cjR8n3SFNRtOXg
dUvmxvvT6+uWNhQUWXjd8quGoOj6uqVJ54tCvG7pJjc5GrGubrk9/oM3XreM
DNlmvr5uaWOaz4fXLY9dc353a13dkjeG3wKvW0YtjDOur1vyaxX8vP5bAUna
lWv4al19klmT3rHGo1jioLmFR//ltfok787bY3/2SUqoSKcyS66rTxYXpjfj
9cm7gnu+r69PHpkWU2V1uiAu3qJ26vO6+uRXK/3J0A96Yq9L7le7ihuScXjR
KUmL1xs7OvUYudbVG3uLTrkr1nOhs34UHGbr6o3v6E+27qZ5hu5MuOsuFPsU
nSDVG9kPto9Q0/PAqwFPLtLE8kFd+0BCvbG/W99HZ04Zdnn7S12nvQXbNCuG
8HrjTObLCD8KQyTksXx4qWo5uoFUP1xS2ObisuCO3BCx/hm4rn74xAyJ2OfG
h6y8TJFyWlc/TK/0Fe7zj5QQpitr5lVZqx9OTv7YU/0gX/xS98iFoci1+uGT
qQDkQMsPtOjIbEBX1QiqIkCs7/HlHrtkWaUAJ/mPfNn4XQ069M4R6ntNUzeY
YmlcYOh21aLJ1LvwSELrAv4favdG5Tn5pXg4e/D8Lj7wECplbVuMxfhdkZ2D
Nj+nEhj9QRWz++x1uLM7Nxqvy8Xf5KzO+kMJDp90vux3jxJeR4m8xvRxRIti
sikys3rzF2W0HjpNWg/imX4HFm5FSFBTCC+b1weT55U3ZvrGKiMc1pvFaZm0
2sLKO/eHgrA4stRh/+cdhzi4M3EqMaE8Ah7Q9nx/F5MrDu6vGMtUgiyN1Sqt
9R5QJX3xNH5P6fKZcFDqYwS6Tuh/v2WqC2XeDYTi97L6+m/6+Ft1FbnAtTf4
7JkldPd0KMEej+7x1oEvWB6/+nY/e+ZldIFk58H08W0h809g1ZLugjFLLuRh
2/8sHMsfOC8cRo/AW4DF/8j1Jp0CqOs1yHP/J95Hr0E65roBiOQ7/mHwjxR8
GmBhhv9n978nsdqz6zUSVphNwZKfhDarEvULjICWMAV/8KCA60CjYSX0HZj/
daNtCli7CvRe9K9EuJf7QqKEniArpLrEX1KdIeU/dYaQ/6c+kEqqAxT+pw7g
QuL7W//D991IvD6h9X95/QESf3cl8XdWEn+3J/H0qf/wdGYSHx/4Dx//x7vv
/od3XyLx66L/8Ot/PJrhPzzagMSXt/+HL9eQeDFF1v/yYgobIv+l+Hnpf/iv
kHZql61wH1p88ZOhw1sUgZ+IeZGSh+9WCSZTqKuBZBg91ATiQ0cn8PuQoylT
D41/z4Dn0yYXip0zga7ChFr+xBTI1PjOfrY6D/54YanhEPUCFBibt11PxeLC
ntIXzEKugOLB47KkhgIg3nh4/zKW/18XOf/SHi2AsQi/Y8JjB+gZyeh4AFs/
TDqjbZ8Ci4CCyqZJQ6ossM3fsHz88xQ4octTxCgSB8oZXZOKahLBPK3LL04s
HzOjl3BwPB4D7tWlqYi9uQneIMq6+D0tTbnvXsw8uQFu7T85bJl/FdJHRB7E
z0V+FWFd6pvaCJzH9CpYZqfQ49UOhPm+PtnY5hl8GZlOS76t3XqG7LcP2PI9
mczdCaM4ubz9HSFqO76B+H9TunqlK8kLNs2GfRh1Noe1u73L8ftqSlRpudx8
S+Gjx7z6ai1J0OAZ0903fdh6ZgZmTIFFcOEX9+SVmynQgUfmaRvG3wvKNC+d
Ph0Lch4ZOT25FAF++R8x78PymcLvfZbhysXAfy6S9ffzLeCjg18XDcbrX52Y
T5QLCQVXeQqEA+18AeXHrfk38XOyfHsORy07gziqHaNsiDlAHL3l6jF7yj4M
HzJDjwA64+eGZ8IpwOX8N38J+1U+TDVtHrFBrNAKx+MS58h9MQpvft979p43
vOx3g+Hv4ZvgmBnvjB8e136+njlinwDljHNGw6tTwautMzANW8/ljXt3HWAq
gB8D0jq8PLPBqe4nP/swHp2sxPQpea8h4KL2aimESSBkQ+noQ7wP7GQtp8um
BHDjc689Q7cTtNvFqq6yhPE49iHZyY2uoPfcgohA437w+ORceiPufybrTJoS
N4BLrQ93fWB+gfTpRhHsbN6dOVI0jiC7OBL7bL6s/Q/VtFMKR1VTYETO/s8Z
uSZwT/OrWhbs+zXOkS203+sMjKfMvMe3xIJLtFJLJ7F1Mqm13+3vvXD4UgU5
mrypEHTZvTwRjfm3sshOsb2lBoDpr8WjGEc1AMp0+HFeszfl16Ns3j6k4vz9
S5/31CPvy4jfi5FNm6YZyxbkTLucSe2mNV4zI+l0Mu9gDgzzOMKbt88efiiK
ZTGcxfel2Dz3tM8ESZ9fj7+VfAj1rr129cPkLDY8nSFYPj+mc3v38tW1fF56
2OzJeSyf7+8vWhRZl88vZP2VPOCfAHV1a2poH/uBcIVDR9swnOlCTcPwvDRG
oMt2fV5KRVFjcivUsjxhYPbB05dG5P+/m74ZqVuV6ImxXdGSMKdZyx9EVgxu
0m54Auv7Thw1M34FTyqOHeK6gfHooZ9lqTaB4Lm81QbfbHt4ekgwZw9mZ9eq
Tv489/MKagm35NMvcsl52i73psGTGX4VlPlc/roH7chyC6kyoZHdx0V99x9K
eTi8ltf9bqYd6E/MhI9PxiwdtLeG18ayEu3npsDqYC03D97fIdRpVGZdf4dl
0Kc8prS1ag//XNBoNCVZvipBJbHhoWN1d/3ThJbzjmv9RtWEB7SyF6qfF1tv
iRNZJsvf1d8/rH3cGHXj0fFuqjFFp/7tB2j3+PR0Rx26UETP97SqEdXfR5TX
ybCf10/8g15q/9L3/eE26K61h+hPhmhlFZL+oKUPOCmffjsB/Ti8CfWcZ4KR
9FwfqEFX+Kf3vM3ssPUK8d650bDxZFH9ScTlpXbLosMi2r2liaBn16f5km1L
6Yi1U9OgmUkxGvmZ+FztrU0+34XNEf7Sldo+hSD0CMlOoYuKbrupziFJhg99
diWv9Yk4JtWTWFi7LHHK9P63D0ZrfQpWt21ZfT1kU52VrSTTc3ktLqy0uj8b
S8mpWnE7eKKs6PEanm7Od47U70bVoqSfRUas3Ue3lTZv46HlQPS2pfT3RYkH
qCepHrjNfDlgE/sIerl0y1/q799Q7cqfBLmBLRVDixgHFJixTG6YOwFvl9j/
wOWqYvOMuoLacJdq2bs/5/Vh550/1vh/auO/e91rSrRgWtbVI07xrvDyo0dp
eD8yWtbbC4UaRuCS2C/WIGsHWLKTXqQHk18t/JSMblcGOofYxoHWRSj+xoMD
rxOm1b1NmUUpQNjB7tnTdPyw970K4bmJUyX7xA/SAInatBlJezYYURZL6KcQ
pbB5+cvANySTOeZyjO0ManDnE8H+4hOPGGU+JCDTTMYpp64loQdI+15Kug0O
RnNzI0wggFPu1zEyPisXV41y5T5Xr6wOUs85dq/hbGLl9/P16eoVXSemSnoO
srxrNbLzcLMd2r6qpR7z5wY6QHqPpUpcw5n8P9CXlcupHOID6PQAEU89eVmz
Vy8lYJKv4MVf4WegvHFVJi5f9WHutrphBmumK9idJKzhn0Cx5G+YPPlOubuT
pyfc8lz2O+MHb+jtO5SH8+UH254pqXK6QLrtSisffAOheAiTEX5vp2C8t3KV
bCAo8zB9aavkCU3fKdwZweQOn0ta2wWMwXPqm+ocnHbQfKl7BN/fvv8ts/2K
hDJc5ttxzOq7D1S1ET2Ex5EFX8GGr7Tm4LOf70IfpTN8tcvsbSPhf4HcKfZv
SmAwZ/Wn9dEL8E6zsRb+vuTplCSQPRsA1d32ONOgBXSj6x3CfCNz5kr2hUQg
9CuTOqWlHqgAab0tr/ayr3Cdxdb9Q3ZnfcE1/N12hFP3JVcvryqFD6oGknGm
TR/Ju/fmJXr/zoATz9RzdNcloh7Y++1Lk+JRuGvhTp5iwwE4/P0Qoe/JT452
bhEhU+hq9fntmWZt2JOf2z6D8yMJNsE39QEw21zinHyeJ4zlHV79huGjxN/W
rv3HH1YvvXcPvxIORfytjPB6b3usZp++4RUooeTSPA9CYVXFeMxvTE6X4xpU
MxMBjk7A0rK9nlCQVXoj8wreb2gj7fgTD7jXle4CP70XtBN9pHQZe+53NuU8
RRd3WO50gaukOBpq3M+vLsfP85bk7+e0iwIw/bFeqWAQ3BkmoI73O7g9wneT
pssJ1CUefq/ZqQvvcdpd7cD0FHFmr6R94wNu5Ss9qU3b4VP744TvolmtumOi
+wVyJM9NjEsjCi3OJ+KzZdWCpdXPDdVZhX/Oz15F4eq//DygnN6lF8M5Q1fF
vpiM80/1K2n7ppfQLPr3A/GFA+i92UbC+NndSpvigAb8MXRE8zeVJNxEY7aE
8zLF8PgDp9UD4Tc/95IkFQ9oIU1nN46f5+pAz5ldfAINThmzsC8mw4VT37oL
sDykoXxFal40DDZGn/pjz5wL9+28/8phGsNNseprkm0wYBc7pcE7kwZHlzl+
4Pv3RulcikMSH4NJSeFf1d+jIXo6mdMHyxOoR1vH2P+6Q7dNr0Qic71gavU4
K46zfIBtEzjuC6cvHRNHBM0hK494+F1MPq3yMpF6PhGM8K/uYmTSgfu0HApW
sPhbxc9rsz3KC5y+L6S7IYgf+s7Lbcf7GH6bN1TrdREDF+gM5w07P6N3eqrb
CPvWLu4tUE58g6gxL7Ml0FmjAlIkfjSve2f2eQIq+Ht1j++iC7qPxJeXVnnS
h89SoX9Wd253SPtMxnkqTOL2UhUjTIkeePi09jdao/eRULennjked6rpJlSm
C94ecUsF6kqIcOD/p95nSkX5CxbCv9eQUf+0R9B6+wTCg+Xzq3BpSAnLW+Zf
ScDwwOfwZI3xQuAbLA+s3fyNMzEYaus6pTJsKIfPVTo+z/Ri+clJJ7vO9ylg
hdnt28Cmp9By8FoBxzDGa2qqbZOqs0G7+l2B2xlZMFnx6rLXGPb9djKeEo+O
A1GJ+iHByvdh34nLGcb4/WCxgpW3x7mA42N/l2toHMhkL9y/gskdxIQya43D
gNxzkCTwMgJMTBrSKmLruS1krGVzxR1gttu+zKrsBjj9sZgZv4eZJiWUd4mJ
B1D2+hoslNADEfVrU4R9Gmlb8m3zIGLJzXjr+rnHyFQ1Ec+0qvy540tVaKUW
cHIuiUFHXxHl2Dopu5/ejybULO2UbC5AtSqJ+d7s6sP9gp+Po+nZ8Q7pR9fu
IVladWN7skcRzczOPqOevpcsr2SWe+Zmzw1d9/F0yKduhd+UUcL9LZbe473P
v52FQhF/yhJ+McMQjXRLXF7Zr+xcYukGf5Spnxs6pAkVCxyv12By62f3mryP
BEMO+ocqOoctYOXygTS8j17GzNNN207Xw5HsZSmqnmTIlTwzWBSBzXdmtPdG
dwncb3PgrmXabXB1MjiSFuNTj/is1eJTciFjWnvlD48X8JKUPtWudCx/cNQK
2+D6FP6tlVa9HlMIdhc3rky8w+JOgG/eVYZIENGl+5F2UzxcfZQ0qYWt8z1t
nSKL1+LBeLmwy03dp6Bnr2WwNpb/76tmvrCpLg/4htkx/6CJgg2rByktMH6n
FyP35iRbClRI8fxh7pQLlqrfxkZj6y3j0la6Ebki0Obq332wKwd+qalH+Yam
AO/F0VKRvmRQNKa7oPzJFeY0f8sUxL7Ts8d1rgUuF4PKru+ylooJsN+j6FE3
9txjmqMf9eMqQG2E5FizQSzU+n5R7GvbFNg92jifXBsKiqWHdyVsdII6u7qn
IOZP3EUZuzu2JQJzkyjqnpexsJ2u2MEa45VAbYO6+ncbQFExuHo0H8ANQZbD
+H5ahpxLi68LQkANzYgQI6svFNO2uvcA0zPW+tjzroEikG/Y6MawhxGU5tAS
9vc6Lcu6Rz00BrMug3nJj1Wgnef5aZyHMpRxFBX5LiPKoZ/fUga8Qw77Ef3h
xpoHL1eSGUCK9FdHhtUZtIxVgvA/CFmdP++T4o+wUcyJG2mZIHokf5u77KYh
ahaLKK+s/kZWbVFe0rmDKzcm+3jO96Cd7nbX3vrkIkVdxHMolBTCLM8b5VCj
xTOZUvEMZN703atYZiBRGr51k7nDunIEbCo6l4aP3yRLeeZnog/sS6Y1dXpr
BegruwVd8Phuwnq3OzoLzu506RWWSMTizIG3v37h59+ZPOmWC2HOt2x9B73n
oDznEo1HwxR4WDLnLDv9CDwuLv5km5gF5A93bcHv01OySLGr/ZkHj2akqz7Z
5AB9VUxWP2B6XBq+J8U+TAOqQ/tv+giGgdaTHD1BmN8Of/joz0G1IqB1bquu
UsBDkOU8kU+L8eKFoxFGVc9jgWlOct3VFUNgFHxRjwfzD5aze4UZ86IBtdHO
wAQxI6D0jlljHpP/9gm/18xkDX7lvNzxkE4MNHLTZeL17Twtky5+ygOA6uy4
s3LWCMLEqEHwn5PLqz3TTEmIYXfTivMeY+THX1I+1onOcvdXoivc48jlsDjE
p5ko30ohqyaVwIm61pzsUfZa46ceGhocB6qOww+eckJqg9tBySkDQl4RT3mF
c2LCBr57vKTEo6kJ7inrseF11KPKQjvlqONhmcGV1ua3TkAwoMijAfOH4irN
LX8Ni+BHlnLlP9G+QMB9c1LE+BSQVO887rY7HbrZXbqTFBEGH9gzNXNjuJ3T
pZVSs/CGA0HHvZ1fhILN6e0Lrti6tRPTlLplWQimlUvVpxnzwcsnZxKnBqfA
zbGUk3YJicA6TFV1z1ggSLUcGpLHvvdjLUI2PM8SgW5dmVVaGZafSzWU4fsH
rnc11WlrPAJi+VrnCq2uAX09n9RcDGeZ1My0K603wMh+vZ64w4IAxFreIZx3
Nnobs9VyO7jW7Gge1TeAdKjzE3DLYX1uPEIfhLzYs/+5QLguwkla50vLoKLX
NBil/707k+K4HUJBkm+ksNOcKJyt3heXI68a+JHMiyc0Kmq42mhgzm6ZFiGf
rwjjPDFv/NRyaFz3lR58GyVl/jRFEDgf3ncPr9+mbXlyif5AFGx291o43ngD
PDEKkBTD8KEV/b1ZziILAp4QX5oiP9AbeNj4KpZvZHt/UrgalAJp/Cal6bYn
gxiW/eyTGH+nyLszH7YvHARbu/jX7M8BbxcChMWxdf6gIXAhtDEZvJJQunsm
MBX4mhbzfMbkDSdPGLff9AOH846wZAlGgGdzg3EbsedqyGbKtzrEgVgFun1a
SqHgjRCVOzWGs6992ofWjlAwudPc4p6TLfhwsP1xKzZeq5huvvyNJnj3+oKk
Zy8/CCpj/YznUSHVN2+x8swhYw3aHBkFbYjZ8UECDilWFmOJqzZIW0Zj1EZ1
BXL959cqGKOTu4V2CbcwJThLIxMkOQ1FTbYKc0N14BKDArV89Nr+jbvmFOYX
5lC1jRnVmdWvkRwRon7nl11MkWya0DPh2t/XZTxAzeooDZ7Pm3xvFEylDYWJ
QptrFLhugsbVnfN4vxiF90XMLicSocL3Wzb6OmFgZ0JRLQ223jJRutfn651g
jTMFd/rBNGAsvtg3sIDhn6v452NZEFjKvPfU/0oqSJH8GJSNyUGL1z77ek+Q
qKqeduFrNPh67Jt9HLYO38vv0VPZ6QUgMq4u4RkFAuxlnd9h8mOybQKnfQJB
tdaPspDfYSADubB9GpPvfn8z9rHcXTB6qUvaCd4ElEZJBxvw7/qCxebcbgmQ
+nz+k9jicbBRxxDi8x3cDCcjd7xHokyfAlo2FCn0Jvpb1Opyw88sJST8+Lzw
jfM8a31DKCyzbDiVUffOgMkJ2RNk+WaKhNihofjq7/ci571bncg4jz+vMm0a
/4CWvgi1iHIoQfbJEPW/69IrG0qVgpKHLDo7Qg6CGO6lfEI+c8L5io62B2Th
3BSTHKQLhMel3uD/BXbq/SxOzoqATK02VF4PXMBSVMNreQz/tGBGL99mfuCw
cCKA098BTD16r/QRG/+DtzdhecYdtJ6Jv+tw8g7wSqpnxfs1oNXMkT4MrqB1
Xq+UvSYYOHC7berD9FDnpWx1HfYAkjZeP/qd/AAP/exp/L7iULbPrKdlTAF9
tzX7/TO3wLYNWefwfc7+lyN8LwIZoHH9VsWefDkgzDbEjds/0d9OG2BOCcL3
MdXUaf5B/o+xLw/H6ovaRkWZQlTKWESmlIxxdoRkFolCypihVGaZ5zHzUGZl
SmbK8JwdEhqQqYQSiYxRoijfeQb6va7r/b7v332d65x99tl7rXWvs9Z9u3eE
EPOTrYcGjpQmIcoDfMp3i8MQdpK/2/5UIe2B3XYkovBXw061n//qXsgM9Pwj
DqGAjE8/wvpfPyk1mcSVmIZrOLRy+PYtMbWN6zs7GkSFGGtQKmmdi2kqmUhi
D/H+aYHbOKxdeeCgy8AbajYm8HpckJC3Ydn3x+fXYyt4T7k/7Mu3S4AZ5yyN
x4NvQlDmoKlAmMPTU3qKJgj8en7iMj02PrAvTkTwaxicIxsrPK8eBDiUojPb
sXUb8wzLOCoZDPo7vdVkGC8CbRsfc2fs+ntR7m/umIWDmK8Wec3zpuDC9+Al
gI37ZswvJXiago7Uo5YJzfrA/0VJDT4/ecm958dR2UPAXObujkL3w2DXA25C
fxyvc1COVfUIwtaa9uNu6wTiNEvMG6xk3r9EcSEOyfwQSCYonIikk/DF9zW7
K/bzh5A924KqFz8c3Fi3uxMqEsN2CXIXPnA5SupFbqwblc+d8Bz4FreKG3/B
lfyPT/K3VlyaCrMtKnz/287dLy4j30j7PEK0Zk7E+h3KHsxJ/eV1D3J7hVhH
t031cdbR3fzwFrPWlHjwIXD+JDkhbr/2Z+qRV6s5nE5AftE8ugw0jFwJepSX
D0TNdTV6wyYFneLU98HgKItfKZ7ncOnGR2Ru7jowcwypu8IWA04XLsu/xNZZ
wWnLHn5NV+DpUnCdzdsRGBcydeHjanbQVij9VRGc37pf14/zOBi4d8mNUM+W
l6GQTTeBMKQnkcuy9yBHLhP5IQ0nJ8/5bHFAPJldtfhzrJBx0nsZVpxd1fj2
U+6MwZGe3e/+6XRH3tOP5m/2kfOdV3jmce+fzgjDyRlbztoJWS6dmoJZzfGN
PG3186bmr4muOLo2qvMl/8lbylJMn9tduIzLF9IW1fxP3rLqPFVu5SFLtKXG
TXwF/stbUgoVJpLTNaHHF2dDvetaUGdS3nJO880Dp/TfKGf3Yxf3RBqoeYOY
t1xkeN2pkvkb7VAqjUj+IgDXWAIJeUtTrjQlFrNZJMuRJwDn/Qs9P9dKuP5a
gaVHOl0e0l9eTU3jWY6eI+Unvwcd45pQtkGmrGglT2r9y0/+/aT6qIpCBRkW
WHiy+p/8ZJemyOuwZ3/kok783XfP6l9+0t20qJk6LkTOtBiXuTIRvvG+Kz+a
A+/+ikAbnz5P75T+l29U8Y5zaGD/jAq0OFtSfBpHQ58R93ndXcNM+0P88IP5
bqM9gwKwWzONkN+YnqaKeMh6EaqnVkjzilyGV3VmAgjxCVV9I67qAuSau/oc
veYFVX8z6OH5Wo0Xb3NwdVKAM1OCChd8j8FKs5MEvvSPfQ3SmccpQenTSLlH
XgdhZ0g8IX848UX/a9HnceRg4S83I9/vKLcGMX84NBI8RUGfgdCHsCBoSiY6
S+oHf985JlF/QgTZ35KVFh/Cv7EOrN/Uj3C7ysHFvx5cjOISUPLKF0Jfc+0+
ljjVYmvo/+qZXNhNe9jX+2IWr9Nkqx39RZ/cF3qI0A2Ar37wjMp9VRNs3Gc/
WYmptCd8o1BOhmMOhik9AteU8PZEugT3c4sNeGvFefuaogf0HHL/8Rxv3/Lb
bGWtNYEdRZ/VUWVNmL7niRjej3cpjP2iXaAE0wWKfHwU5HCa7jhh/uwzgQrw
WhZyaRnKkXOmoC9IeVGalhy6lrhgqDV9l2l/pTucjfl6C69z6nmATVvY0Qdm
aNOnPE4Nh8fpCsvwOgKrbyVuDhVaQ2YemmMV1VFQxEz9ATU+rqB/47F81wdk
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
dKlW67rUzxt0qf8BSQQbeQ==
       "]], {}}, Axes -> True, AxesLabel -> {
      FormBox[
       StyleBox["\"x\"", 14, 
        RGBColor[0, 0, 1], StripOnInput -> False], TraditionalForm], 
      FormBox[
       StyleBox["\"y\"", 14, 
        RGBColor[0, 0, 1], StripOnInput -> False], TraditionalForm], None}, 
    AxesOrigin -> {Automatic, Automatic, Automatic}, BoxRatios -> {1, 1, 0.4},
     DisplayFunction -> Identity, FaceGrids -> None, FaceGridsStyle -> 
    Automatic, ImageSize -> {302.8240758927851, 221.02161010891237`}, 
    ImageSizeRaw -> Automatic, 
    Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"}, PlotLabel -> FormBox[
      StyleBox["\"KDEs for Class 1, 2, 3\"", 16, 
       RGBColor[0, 0, 1], StripOnInput -> False], TraditionalForm], 
    PlotRange -> {All, All, All}, 
    PlotRangePadding -> {Automatic, Automatic, Automatic}, 
    Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {0.524624160474562, -3.081895498112216, 1.2948705066384087`},
     ViewVertical -> {-0.06421715149505268, 0.3772425385730761, 
     0.9238853957849981}],FormBox[
    FormBox[
     TemplateBox[{"\"PDF\"", "\"Fixed h\"", "\"Variable h\""}, "SwatchLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7891047007415524`*^9, 3.789104713943729*^9}, {
   3.789104817343519*^9, 3.7891048400821877`*^9}, 3.789104964273983*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"ac06972f-b011-4fad-87c2-a51cadc47413"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.789104671963583*^9, 
  3.789104674616749*^9}},ExpressionUUID->"042376fd-2be1-4513-8131-\
05333ebee2c8"]
},
WindowSize->{1850, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification->1.5,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2240, 53, 343, "Text",ExpressionUUID->"54f33734-b855-4a2f-a934-412ae2a71e2f"],
Cell[CellGroupData[{
Cell[2823, 77, 3591, 100, 283, "Input",ExpressionUUID->"3713e008-dd95-45fc-bbb3-855b28463c36"],
Cell[6417, 179, 51446, 919, 362, "Output",ExpressionUUID->"ed1b0d9c-6fc2-464f-afbd-2cfcfcce86f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57900, 1103, 7214, 203, 556, "Input",ExpressionUUID->"de71a29c-bc17-472b-aaad-1e24e3441599"],
Cell[65117, 1308, 296396, 5019, 393, "Output",ExpressionUUID->"ac06972f-b011-4fad-87c2-a51cadc47413"]
}, Open  ]],
Cell[361528, 6330, 152, 3, 47, "Input",ExpressionUUID->"042376fd-2be1-4513-8131-05333ebee2c8"]
}
]
*)

(* End of internal cache information *)

